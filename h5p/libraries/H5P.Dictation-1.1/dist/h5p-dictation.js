/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/entries/h5p-dictation.js":
/*!**************************************!*\
  !*** ./src/entries/h5p-dictation.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_h5p_dictation_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/h5p-dictation.css */ \"./src/styles/h5p-dictation.css\");\n/* harmony import */ var _scripts_h5p_dictation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scripts/h5p-dictation.js */ \"./src/scripts/h5p-dictation.js\");\n\n // Load library\n\nH5P = H5P || {};\nH5P.Dictation = _scripts_h5p_dictation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW50cmllcy9oNXAtZGljdGF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7O0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2g1cC1kaWN0YXRpb24vLi9zcmMvZW50cmllcy9oNXAtZGljdGF0aW9uLmpzPzFhYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vc3R5bGVzL2g1cC1kaWN0YXRpb24uY3NzXCI7XG5pbXBvcnQgRGljdGF0aW9uIGZyb20gXCIuLi9zY3JpcHRzL2g1cC1kaWN0YXRpb24uanNcIjtcblxuLy8gTG9hZCBsaWJyYXJ5XG5INVAgPSBINVAgfHwge307XG5INVAuRGljdGF0aW9uID0gRGljdGF0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/entries/h5p-dictation.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dictation-button.js":
/*!*********************************************!*\
  !*** ./src/scripts/h5p-dictation-button.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** Class representing a sound playing button. */\nvar Button = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @param {number} id Content Id.\n   * @param {object} params More params.\n   * @param {object} params.a11y Readspeaker texts.\n   * @param {string} params.a11y.play Readspeaker text for \"Play\".\n   * @param {string} params.a11y.playSlowly Readspeaker text for \"Play slowly\".\n   * @param {string} params.a11y.triesLeft Readspeaker text for \"number of tries left\".\n   * @param {string} params.a11y.infinite Readspeaker text for \"infinite\".\n   * @param {string} params.a11y.enterText Readspeaker text for \"Enter what you have heard here\".\n   * @param {string} params.a11y.solution Readspeaker text for \"Solution\".\n   * @param {string} params.a11y.sentence Readspeaker text for \"Sentence\".\n   * @param {string} params.audioNotSupported Text to show if audio not supported.\n   * @param {number} params.tries Maximum number of tries before disabling button;\n   * @param {string} params.sample Path to sound sample.\n   * @param {number} params.type Type of the sample (0 = normal, 1 = slow);\n   * @param {object} params.callbacks Callbacks.\n   * @param {function} params.callbacks.playAudio PlayAudio callback.\n   * @param {object} previousState PreviousState.\n   */\n  function Button(id, params) {\n    var previousState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.params = params;\n    this.previousState = previousState; // Sanitization\n\n    this.params.audioNotSupported = this.params.audioNotSupported || \"Your browser does not support this audio.\";\n    this.params.a11y = params.a11y || [];\n    this.params.a11y.play = this.params.a11y.play || 'Play';\n    this.params.a11y.playSlowly = this.params.a11y.playSlowly || 'Play slowly';\n    this.params.a11y.triesLeft = this.params.a11y.triesLeft || 'number of tries left: @number';\n    this.params.a11y.infinite = this.params.a11y.infinite || 'infinite';\n    this.params.a11y.sentence = this.params.a11y.sentence || 'Sentence';\n    this.params.a11y.solution = this.params.a11y.solution || 'Solution';\n    this.params.a11y.enterText = this.params.a11y.enterText || 'Enter what you have heard';\n    this.params.type = this.params.type || Button.BUTTON_TYPE_NORMAL;\n    this.params.callbacks = this.params.callbacks || {};\n\n    this.params.callbacks.playAudio = this.params.callbacks.playAudio || function () {};\n\n    if (typeof previousState.triesLeft === 'undefined') {\n      this.triesLeft = this.params.maxTries;\n    } else if (previousState.triesLeft === null) {\n      this.triesLeft = Infinity;\n    } else {\n      this.triesLeft = previousState.triesLeft;\n    }\n\n    this.dom = this.createAudioDOM(id, this.params); // Placeholder if Audio could not be created\n\n    if (this.dom.firstChild === null) {\n      this.dom.appendChild(this.getDummyButtonDOM());\n    }\n\n    this.status = Button.STATUS_ENDED;\n  }\n  /**\n   * Create H5P.Audio.\n   * @param {number} id ContentID.\n   * @param {object} params Parameters.\n   * @return {object} DOM element for the sample.\n   */\n\n\n  var _proto = Button.prototype;\n\n  _proto.createAudioDOM = function createAudioDOM(id, params) {\n    var _this = this;\n\n    var $audioWrapper = H5P.jQuery('<div>', {\n      'class': Button.AUDIO_WRAPPER\n    });\n\n    if (params.sample !== undefined) {\n      // H5P.Audio\n      var audioDefaults = {\n        files: params.sample,\n        audioNotSupported: params.audioNotSupported\n      };\n      var audio = new H5P.Audio(audioDefaults, id, {\n        previousState: this.previousState.audio\n      });\n      audio.attach($audioWrapper);\n      this.button = audio.$audioButton.get(0);\n      this.audio = audio;\n\n      if (params.type === Button.BUTTON_TYPE_SLOW) {\n        audio.$audioButton.removeClass(Button.BUTTON_PLAY).addClass(Button.BUTTON_SLOW);\n        this.setLabel(params.a11y.playSlowly);\n      } else {\n        this.setLabel(params.a11y.play);\n      } // Set from previous state\n\n\n      if (this.triesLeft < 1) {\n        this.audio.disableToggleButton();\n      } // Set from previous state\n\n\n      if (this.previousState.audio && this.previousState.audio.currentTime !== 0) {\n        this.status = Button.STATUS_PAUSE;\n        audio.$audioButton.addClass(Button.BUTTON_PLAY_PAUSED);\n      } // Event Listener Play\n\n\n      audio.audio.addEventListener('play', function () {\n        if (params.type === Button.BUTTON_TYPE_SLOW) {\n          audio.$audioButton.removeClass(Button.BUTTON_SLOW).addClass(Button.BUTTON_PAUSE);\n        }\n\n        _this.status = Button.STATUS_PLAYING;\n\n        _this.params.callbacks.playAudio(_this);\n      }); // Event Listener Pause\n\n      audio.audio.addEventListener('pause', function () {\n        if (params.type === Button.BUTTON_TYPE_SLOW) {\n          audio.$audioButton.removeClass(Button.BUTTON_PAUSE).addClass(Button.BUTTON_SLOW);\n        }\n\n        _this.status = Button.STATUS_PAUSE;\n      }); // Event Listener Ended\n\n      audio.audio.addEventListener('ended', function () {\n        _this.handlePlayed();\n\n        if (params.type === Button.BUTTON_TYPE_SLOW) {\n          audio.$audioButton.removeClass(Button.BUTTON_PAUSE).addClass(Button.BUTTON_SLOW);\n\n          _this.setLabel(_this.params.a11y.playSlowly);\n        } else {\n          _this.setLabel(_this.params.a11y.play);\n        }\n\n        _this.status = Button.STATUS_ENDED;\n      }); // Have to stop, else audio will take up socket pending forever in chrome.\n\n      if (audio.audio && audio.audio.preload) {\n        audio.audio.preload = 'none';\n      }\n    }\n\n    return $audioWrapper.get(0);\n  }\n  /**\n   * Get Button DOM.\n   * @return {object} Button DOM.\n   */\n  ;\n\n  _proto.getDOM = function getDOM() {\n    return this.dom;\n  }\n  /**\n   * Get DOM for dummy button.\n   * @return {object} DOM for dummy button.\n   */\n  ;\n\n  _proto.getDummyButtonDOM = function getDummyButtonDOM() {\n    var button = document.createElement('div');\n    button.classList.add(Button.BUTTON);\n    button.classList.add(Button.BUTTON_NONE);\n    var buttonContainer = document.createElement('div');\n    buttonContainer.classList.add(Button.INNER_CONTAINER);\n    buttonContainer.appendChild(button);\n    return buttonContainer;\n  }\n  /**\n   * Play.\n   */\n  ;\n\n  _proto.play = function play() {\n    if (this.status !== Button.STATUS_PLAYING) {\n      this.button.click();\n    }\n  }\n  /**\n   * Pause.\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.status === Button.STATUS_PLAYING) {\n      this.button.click();\n    }\n  }\n  /**\n   * Decrease the number of tries and disable button if necessary.\n   */\n  ;\n\n  _proto.handlePlayed = function handlePlayed() {\n    this.triesLeft--;\n\n    if (this.triesLeft === 0) {\n      this.disable();\n    }\n  }\n  /**\n   * Set the title label and the aria label.\n   * @param {string} label Label to set.\n   */\n  ;\n\n  _proto.setLabel = function setLabel(label) {\n    var tries = isFinite(this.triesLeft) ? this.triesLeft : this.params.a11y.infinite;\n    var triesLeftLabel = this.params.a11y.triesLeft.replace(/@number/g, tries);\n\n    if (this.button) {\n      this.button.setAttribute('aria-label', \"\".concat(label, \". \").concat(triesLeftLabel));\n      this.button.setAttribute('title', triesLeftLabel);\n    }\n  }\n  /**\n   * Reset button.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.triesLeft = this.params.maxTries;\n\n    if (this.audio) {\n      this.audio.seekTo(0);\n    }\n\n    this.status = Button.STATUS_ENDED;\n    this.enable();\n\n    if (this.params.type === Button.BUTTON_TYPE_SLOW) {\n      this.setLabel(this.params.a11y.playSlowly);\n    } else {\n      this.setLabel(this.params.a11y.play);\n    }\n  }\n  /**\n   * Enable button.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.button) {\n      this.audio.enableToggleButton();\n    }\n  }\n  /**\n   * Remove button from tabindex.\n   */\n  ;\n\n  _proto.setUntabbable = function setUntabbable() {\n    if (this.button) {\n      this.button.setAttribute('tabindex', '-1');\n    }\n  }\n  /**\n   * Add button to tabindex.\n   */\n  ;\n\n  _proto.setTabbable = function setTabbable() {\n    if (this.button) {\n      this.button.setAttribute('tabindex', '0');\n    }\n  }\n  /**\n   * Disable button.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (this.button) {\n      this.audio.disableToggleButton();\n    }\n  }\n  /**\n   * Check if button is enabled.\n   * @return {boolean} True, if enabled.\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    if (!this.button) {\n      return false;\n    }\n\n    return this.audio.isEnabled();\n  }\n  /**\n   * Reset audio.\n   */\n  ;\n\n  _proto.resetAudio = function resetAudio() {\n    if (this.audio && this.audio.audio && this.audio.audio.load) {\n      this.audio.audio.load();\n    } // Reset button DOM\n\n\n    if (!this.button) {\n      return; // No sample for this button\n    }\n\n    this.button.classList.remove(Button.BUTTON_PAUSE);\n    this.button.classList.remove(Button.BUTTON_PLAY_PAUSED);\n\n    if (this.params.type === Button.BUTTON_TYPE_SLOW) {\n      this.button.classList.add(Button.BUTTON_SLOW);\n    } else {\n      this.button.classList.add(Button.BUTTON_PLAY);\n    }\n  }\n  /**\n   * Get current state.\n   * @return {object} Current state.\n   */\n  ;\n\n  _proto.getCurrentState = function getCurrentState() {\n    return {\n      audio: this.audio ? this.audio.getCurrentState() : undefined,\n      triesLeft: this.triesLeft\n    };\n  }\n  /**\n   * Focus button.\n   */\n  ;\n\n  _proto.focus = function focus() {\n    if (this.button) {\n      this.button.focus();\n    }\n  };\n\n  return Button;\n}(); // Button status\n\n/** @constant {number} */\n\n\nButton.BUTTON_TYPE_NORMAL = 0;\n/** @constant {number} */\n\nButton.BUTTON_TYPE_SLOW = 1;\n/** @constant {number} */\n\nButton.STATUS_PAUSE = 0;\n/** @constant {number} */\n\nButton.STATUS_PLAYING = 1;\n/** @constant {number} */\n\nButton.STATUS_ENDED = 2; // Class names\n\n/** @constant {string} */\n\nButton.AUDIO_WRAPPER = 'h5p-dictation-audio-wrapper';\n/** @constant {string} */\n\nButton.BUTTON = 'h5p-audio-minimal-button';\n/** @constant {string} */\n\nButton.BUTTON_PLAY = 'h5p-audio-minimal-play';\n/** @constant {string} */\n\nButton.BUTTON_PLAY_PAUSED = 'h5p-audio-minimal-play-paused';\n/** @constant {string} */\n\nButton.BUTTON_PAUSE = 'h5p-audio-minimal-pause';\n/** @constant {string} */\n\nButton.BUTTON_SLOW = 'h5p-audio-minimal-slow';\n/** @constant {string} */\n\nButton.BUTTON_NONE = 'h5p-audio-minimal-none';\n/** @constant {string} */\n\nButton.INNER_CONTAINER = 'h5p-audio-inner';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dictation-button.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dictation-sentence.js":
/*!***********************************************!*\
  !*** ./src/scripts/h5p-dictation-sentence.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _h5p_dictation_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dictation-button */ \"./src/scripts/h5p-dictation-button.js\");\n/* harmony import */ var _h5p_dictation_solution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h5p-dictation-solution */ \"./src/scripts/h5p-dictation-solution.js\");\n/* harmony import */ var _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./h5p-dictation-util */ \"./src/scripts/h5p-dictation-util.js\");\n\n\n\n/** Class representing a sentence */\n\nvar Sentence = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @param {number} index - Index of the sentence.\n   * @param {object} params - Parameters.\n   * @param {number} params.tries - Number of attempts for sample.\n   * @param {number} params.triesAlternative - Number of attempts for alternative sample.\n   * @param {boolean} params.ignorePunctuation - If true, punctuation is ignored.\n   * @param {object} params.sentence - Sentence content.\n   * @param {string} params.sentence.text - Correct answer.\n   * @param {string} params.sentence.sample - Path to sound sample.\n   * @param {string} params.sentence.sampleAlternatives - Path to alternative sound sample.\n   * @param {string} params.audioNotSupported - Text to show if audio not supported.\n   * @param {string} params.alternateSolution - Mode to display alternate solutions.\n   * @param {string} params.wordSeparator - Separator of words.\n   * @param {string} overrideRTL - Override for right-to-left support.\n   * @param {boolean} autosplit - Set auto-splitting for characters.\n   * @param {object} params.a11y - Readspeaker texts.\n   * @param {number} id - Content Id.\n   * @param {object} previousState - PreviousState.\n   */\n  function Sentence(index, params, id) {\n    var _this = this;\n\n    var previousState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    this.index = index;\n    this.position = index + 1;\n    this.params = params;\n    this.contentId = id;\n    this.maxTries = params.tries;\n    this.maxTriesAlternative = params.triesAlternative;\n    this.params.sentence.description = (this.params.sentence.description || '').trim();\n    this.params.callbacks = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend({\n      playAudio: function playAudio() {},\n      onInteracted: function onInteracted() {},\n      onContextChanged: function onContextChanged() {},\n      resize: function resize() {}\n    }, params.callbacks);\n    this.solutionText = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_2__[\"default\"].htmlDecode(params.sentence.text).trim();\n    this.solutionText = !params.ignorePunctuation ? this.solutionText : Sentence.stripPunctuation(this.solutionText);\n    this.containsRTL = this.params.overrideRTL === 'auto' ? _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_2__[\"default\"].containsRTLCharacters(this.solutionText) : this.params.overrideRTL === 'on'; // Compute maximum possible mistakes\n\n    this.mistakesMax = Sentence.addSpaces(this.solutionText, {\n      autosplit: this.params.autosplit,\n      wordSeparator: this.params.wordSeparator\n    }).split(params.wordSeparator).length; // DOM\n\n    this.content = document.createElement('div');\n    this.content.setAttribute('role', 'group');\n    this.content.setAttribute('aria-label', \"\".concat(this.params.a11y.sentence, \" \").concat(this.position));\n    this.content.classList.add(Sentence.CONTENT_WRAPPER); // Description (optional)\n\n    var contentDescription = document.createElement('div');\n    contentDescription.classList.add(Sentence.CONTENT_DESCRIPTION);\n    contentDescription.innerHTML = this.params.sentence.description;\n    var contentInteraction = document.createElement('div');\n    contentInteraction.classList.add(Sentence.CONTENT_INTERACTION); // Normal audio button\n\n    this.buttonPlayNormal = new _h5p_dictation_button__WEBPACK_IMPORTED_MODULE_0__[\"default\"](id, {\n      sample: params.sentence.sample,\n      audioNotSupported: params.audioNotSupported,\n      type: _h5p_dictation_button__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BUTTON_TYPE_NORMAL,\n      maxTries: params.tries,\n      a11y: params.a11y,\n      callbacks: {\n        playAudio: function playAudio(button) {\n          _this.handleButtonClicked(button);\n        }\n      }\n    }, previousState.buttonPlayNormal);\n    contentInteraction.appendChild(this.buttonPlayNormal.getDOM()); // Alternative audio button\n\n    if (this.params.hasAlternatives === true) {\n      this.buttonPlaySlow = new _h5p_dictation_button__WEBPACK_IMPORTED_MODULE_0__[\"default\"](id, {\n        sample: params.sentence.sampleAlternative,\n        audioNotSupported: params.audioNotSupported,\n        type: _h5p_dictation_button__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BUTTON_TYPE_SLOW,\n        maxTries: params.triesAlternative,\n        a11y: params.a11y,\n        callbacks: {\n          playAudio: function playAudio(button) {\n            _this.handleButtonClicked(button);\n          }\n        }\n      }, previousState.buttonPlaySlow);\n      contentInteraction.appendChild(this.buttonPlaySlow.getDOM());\n    }\n\n    contentDescription.classList.add(this.params.hasAlternatives === true ? Sentence.CONTENT_DESCRIPTION_TWO_BUTTONS : Sentence.CONTENT_DESCRIPTION_ONE_BUTTON); // Text input field\n\n    this.inputField = document.createElement('textarea');\n    this.inputField.setAttribute('rows', 1);\n    this.inputField.setAttribute('spellcheck', 'false');\n    this.inputField.setAttribute('autocorrect', 'off');\n    this.inputField.setAttribute('autocapitalize', 'off');\n    this.inputField.setAttribute('aria-label', this.params.a11y.enterText); // Auto resize the input field\n\n    this.inputField.addEventListener('input', function () {\n      // Remove line breaks when pasting, etc.\n      if (_this.inputField.value.indexOf('\\n') !== -1 || _this.inputField.value.indexOf('\\r') !== -1) {\n        _this.inputField.value = _this.inputField.value.replace(/[\\n\\r]/g, '');\n      }\n\n      _this.inputField.style.height = 'auto'; // Reset to allow shrinking\n\n      var needsResize = _this.previousScrollHeight !== _this.inputField.scrollHeight;\n      _this.inputField.style.height = \"\".concat(_this.inputField.scrollHeight + _this.inputField.offsetHeight - _this.inputField.clientHeight, \"px\");\n\n      if (needsResize) {\n        _this.previousScrollHeight = _this.inputField.scrollHeight; // Trigger iframe resize\n\n        _this.params.callbacks.resize();\n      }\n    });\n    this.inputField.classList.add(Sentence.INPUT_FIELD); // Restore previous state\n\n    if (previousState.userInput) {\n      this.inputField.value = previousState.userInput;\n      this.oldValue = this.inputField.value || '';\n    } else {\n      this.oldValue = '';\n    } // Handle context changed for context contract\n\n\n    this.inputField.addEventListener('keydown', function () {\n      _this.params.callbacks.onContextChanged(_this.index);\n    }); // Add interacted listener\n\n    this.inputField.addEventListener('blur', function () {\n      if (_this.oldValue !== _this.inputField.value) {\n        _this.params.callbacks.onInteracted();\n      }\n\n      _this.oldValue = _this.inputField.value;\n    });\n    this.solution = new _h5p_dictation_solution__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n      alternateSolution: this.params.alternateSolution,\n      zeroMistakeMode: this.params.zeroMistakeMode,\n      customTypoDisplay: this.params.customTypoDisplay,\n      typoFactor: this.params.typoFactor,\n      containsRTL: this.containsRTL,\n      a11y: {\n        match: this.params.a11y.correct,\n        wrong: this.params.a11y.wrong,\n        typo: this.params.a11y.typo,\n        missing: this.params.a11y.missing,\n        added: this.params.a11y.added,\n        correct: this.params.a11y.correct,\n        point: this.params.a11y.point,\n        points: this.params.a11y.points,\n        item: this.params.a11y.item,\n        solution: this.params.a11y.solution,\n        or: this.params.a11y.or,\n        shouldHaveBeen: this.params.a11y.shouldHaveBeen,\n        period: this.params.a11y.period,\n        exclamationPoint: this.params.a11y.exclamationPoint,\n        questionMark: this.params.a11y.questionMark,\n        comma: this.params.a11y.comma,\n        singleQuote: this.params.a11y.singleQuote,\n        doubleQuote: this.params.a11y.doubleQuote,\n        colon: this.params.a11y.colon,\n        semicolon: this.params.a11y.semicolon,\n        plus: this.params.a11y.plus,\n        minus: this.params.a11y.minus,\n        asterisk: this.params.a11y.asterisk,\n        forwardSlash: this.params.a11y.forwardSlash\n      }\n    }); // Sentence input field and solution\n\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.classList.add(Sentence.INPUT_WRAPPER);\n    this.inputWrapper.appendChild(this.inputField);\n    this.inputWrapper.appendChild(this.solution.getDOM());\n    contentInteraction.appendChild(this.inputWrapper);\n    this.content.appendChild(contentDescription);\n    this.content.appendChild(contentInteraction);\n  }\n  /**\n   * Get content for H5P.Question.\n   * @return {object} DOM elements for content.\n   */\n\n\n  var _proto = Sentence.prototype;\n\n  _proto.getDOM = function getDOM() {\n    return this.content;\n  }\n  /**\n   * Get current text in InputField.\n   * @return {string} Current text.\n   */\n  ;\n\n  _proto.getUserInput = function getUserInput() {\n    return this.inputField.value;\n  }\n  /**\n   * Set the sentence's position in DOM.\n   * @param {number} position Position.\n   */\n  ;\n\n  _proto.setPosition = function setPosition(position) {\n    this.position = position;\n    this.content.setAttribute('aria-label', \"\".concat(this.params.a11y.sentence, \" \").concat(this.position));\n  }\n  /**\n   * Set current text in InputField.\n   * DOM is not created before to make cheating a little more difficult at least.\n   * @param {object} result - Current DOM element with words.\n   */\n  ;\n\n  _proto.showSolution = function showSolution(result) {\n    this.solution.show(result);\n\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.setUntabbable();\n    }\n\n    if (this.buttonPlaySlow) {\n      this.buttonPlaySlow.setUntabbable();\n    }\n  }\n  /**\n   * Hide solution.\n   */\n  ;\n\n  _proto.hideSolution = function hideSolution() {\n    this.solution.hide();\n\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.setTabbable();\n    }\n\n    if (this.buttonPlaySlow) {\n      this.buttonPlaySlow.setTabbable();\n    }\n  }\n  /**\n   * Get correct text.\n   * @param {boolean} asArray If true, text will be returned as array of words.\n   * @return {string} Correct text.\n   */\n  ;\n\n  _proto.getCorrectText = function getCorrectText() {\n    var asArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return asArray ? Sentence.addSpaces(this.solutionText, {\n      autosplit: this.params.autosplit,\n      wordSeparator: this.params.wordSeparator\n    }).split(this.params.wordSeparator) : this.solutionText;\n  }\n  /**\n   * Get current state.\n   * @return {object} current State.\n   */\n  ;\n\n  _proto.getCurrentState = function getCurrentState() {\n    return {\n      index: this.index,\n      // Original index in semantics\n      userInput: this.getUserInput(),\n      buttonPlayNormal: this.buttonPlayNormal ? this.buttonPlayNormal.getCurrentState() : undefined,\n      buttonPlaySlow: this.buttonPlaySlow ? this.buttonPlaySlow.getCurrentState() : undefined\n    };\n  }\n  /**\n   * Get the maximum of possible mistakes.\n   * @return {number} Number of possible mistakes.\n   */\n  ;\n\n  _proto.getMaxMistakes = function getMaxMistakes() {\n    return this.mistakesMax;\n  }\n  /**\n   * Get description text.\n   * @return {string} Description text.\n   */\n  ;\n\n  _proto.getXAPIDescription = function getXAPIDescription() {\n    return this.params.sentence.description || '' ? \"<p>\".concat(this.params.sentence.description, \"</p>\") : '';\n  }\n  /**\n   * Reset sentences.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.inputField.value = '';\n    this.oldValue = '';\n    this.solution.reset();\n\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.reset();\n    }\n\n    if (this.buttonPlaySlow) {\n      this.buttonPlaySlow.reset();\n    }\n  }\n  /**\n   * Disable input field.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.inputField.disabled = true;\n\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.disable();\n      this.buttonPlayNormal.resetAudio();\n    }\n\n    if (this.buttonPlaySlow) {\n      this.buttonPlaySlow.disable();\n      this.buttonPlaySlow.resetAudio();\n    }\n  }\n  /**\n   * Enable input field.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.inputField.disabled = false;\n\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.enable();\n    }\n\n    if (this.buttonPlaySlow) {\n      this.buttonPlaySlow.enable();\n    }\n  }\n  /**\n   * Pause buttons.\n   * @param {Button} [excludeButton] Button to ignore.\n   */\n  ;\n\n  _proto.pauseButtons = function pauseButtons(excludeButton) {\n    if (this.buttonPlayNormal && this.buttonPlayNormal !== excludeButton) {\n      this.buttonPlayNormal.pause();\n    }\n\n    if (this.buttonPlaySlow && this.buttonPlaySlow !== excludeButton) {\n      this.buttonPlaySlow.pause();\n    }\n  }\n  /**\n   * Handle button clicked.\n   * @param {Button} button Calling button.\n   */\n  ;\n\n  _proto.handleButtonClicked = function handleButtonClicked(button) {\n    this.params.callbacks.playAudio(button);\n    this.params.callbacks.onInteracted();\n    this.params.callbacks.onContextChanged(this.index);\n  }\n  /**\n   * Focus button.\n   */\n  ;\n\n  _proto.focus = function focus() {\n    if (this.buttonPlayNormal) {\n      this.buttonPlayNormal.focus();\n    }\n  }\n  /**\n   * Add spaces between text and punctuation.\n   * @param {string} text Text to add spaces to.\n   * @param {object} [options] Options.\n   * @param {boolean} [options.autosplit=true] If true, automatically split respective symbols.\n   * @return {string} [options.wordSeparator=' '] Text with spaces and symbols.\n   */\n  ;\n\n  Sentence.addSpaces = function addSpaces(text) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.autosplit = typeof options.autosplit !== 'boolean' ? true : options.autosplit;\n    options.wordSeparator = options.wordSeparator || ' '; // Users with a non default word separator will manually handle all spacing options\n\n    if (' ' !== options.wordSeparator) return text; // In a sentence like \"John's car broke.\", the . would be removed, but not the '\n\n    var wordThenPunctuation = new RegExp(\"(\".concat(Sentence.WORD, \"|^)(\").concat(Sentence.PUNCTUATION.replace(\"'\", ''), \")( |$)\"), 'g');\n    var punctuationThenWord = new RegExp(\"( |^)(\".concat(Sentence.PUNCTUATION, \")(\").concat(Sentence.WORD, \"|$)\"), 'g');\n    text = text.replace(wordThenPunctuation, \"$1 $2 \").replace(punctuationThenWord, \" $2 $3\");\n\n    if (options.autosplit === true) {\n      // Space between autosplit characters, e.g. Chinese Han symbols\n      text = text.replace(new RegExp(\"(\".concat(Sentence.AUTOSPLIT, \")(?=\").concat(Sentence.AUTOSPLIT, \")\"), 'g'), \"$1 \");\n      text = text.replace(new RegExp(\"(\".concat(Sentence.AUTOSPLIT, \")(?=\").concat(Sentence.WORD, \"|d|\").concat(Sentence.PUNCTUATION, \")\"), 'g'), \"$1 \");\n      text = text.replace(new RegExp(\"(\".concat(Sentence.WORD, \"|d|\").concat(Sentence.PUNCTUATION, \")(?=\").concat(Sentence.AUTOSPLIT, \")\"), 'g'), \"$1 \");\n    }\n\n    return text.trim();\n  }\n  /**\n   * Strip punctuation from a sentence.\n   * @param {object[]|string} words - Words of a sentence.\n   * @return {object[]|string} Words without punctuation.\n   */\n  ;\n\n  Sentence.stripPunctuation = function stripPunctuation(words) {\n    var wasString = false;\n\n    if (typeof words === 'string') {\n      wasString = true;\n      words = [words];\n    }\n    /*\n     * Will remove all punctuation symbols that are not directly enclosed in characters\n     * In a sentence like \"John's car broke.\", the . would be removed, but not the '\n     */\n\n\n    var punctuationStart = new RegExp(\"^\".concat(Sentence.PUNCTUATION));\n    var punctuationEnd = new RegExp(\"\".concat(Sentence.PUNCTUATION, \"$\"));\n    var punctuationBefore = new RegExp(\" \".concat(Sentence.PUNCTUATION), 'g'); // Special case: \"The users' browser\", keep the ' here\n\n    var punctuationAfter = new RegExp(\"\".concat(Sentence.PUNCTUATION.replace(\"'\", ''), \" \"), 'g');\n    words = words.map(function (word) {\n      return word.replace(punctuationStart, '').replace(punctuationEnd, '').replace(punctuationBefore, ' ').replace(punctuationAfter, ' ');\n    });\n    return wasString ? words.toString().replace(/[ ]{2}/g, ' ') : words;\n  }\n  /**\n   * Compute the results for this sentence.\n   * @return {object} Results.\n   */\n  ;\n\n  _proto.computeResults = function computeResults() {\n    // Add spaces to correct text\n    var wordsSolution = Sentence.addSpaces(this.getCorrectText(), {\n      autosplit: this.params.autosplit,\n      wordSeparator: this.params.wordSeparator\n    }).split(this.params.wordSeparator);\n    var input = this.getUserInput();\n\n    if (this.params.ignorePunctuation) {\n      input = Sentence.stripPunctuation(input);\n    } // In case our wordSeparator is not space, we must replace spaces by the separator\n\n\n    if (' ' !== this.params.wordSeparator) {\n      // If we have one alternative with multiple words, we want to escape the spaces\n      wordsSolution.forEach(function (solutionPart) {\n        var alternatives = solutionPart.split('|');\n        alternatives.forEach(function (alternative) {\n          alternative = alternative.trim();\n\n          if (alternative.indexOf(' ') !== -1) {\n            var escapedAlternative = alternative.replace(/ /g, Sentence.SPACE_ESCAPE);\n            input = input.replace(new RegExp(alternative, 'g'), escapedAlternative);\n          }\n        });\n      }); // And then unescape spaces\n\n      input = input.replace(/ /g, this.params.wordSeparator);\n      input = input.replace(new RegExp(Sentence.SPACE_ESCAPE, 'g'), ' ');\n    } // Add spaces to solution and break in parts\n\n\n    var wordsInput = input.trim() === '' ? [] : Sentence.addSpaces(input, {\n      autosplit: this.params.autosplit,\n      wordSeparator: this.params.wordSeparator\n    }).split(this.params.wordSeparator).filter(function (word) {\n      return word.length > 0;\n    }); // In case our wordSeparator is not space, we add spaces between tokens\n\n    if (' ' !== this.params.wordSeparator) {\n      wordsInput = wordsInput.map(function (word, i) {\n        return i === wordsInput.length - 1 ? word : \"\".concat(word, \" \");\n      });\n    } // Compute diff between correct solution and user input\n\n\n    var aligned = this.alignWords(wordsSolution, wordsInput); // Compute total score and explanation for each word\n\n    var scoreNWords = this.computeScore(aligned);\n    var score = scoreNWords.scoreTotal;\n    var words = scoreNWords.words;\n    return {\n      \"score\": {\n        \"added\": score[Sentence.TYPE_ADDED],\n        \"missing\": score[Sentence.TYPE_MISSING],\n        \"typo\": score[Sentence.TYPE_TYPO],\n        \"wrong\": score[Sentence.TYPE_WRONG],\n        \"match\": score[Sentence.TYPE_MATCH],\n        \"total\": Math.min(score[Sentence.TYPE_ADDED] + score[Sentence.TYPE_MISSING] + score[Sentence.TYPE_TYPO] + score[Sentence.TYPE_WRONG], this.getMaxMistakes())\n      },\n      \"words\": words\n    };\n  }\n  /**\n   * Compute total score and explanation for each word.\n   * @param {object} aligned Word by word comparison of input and solution.\n   */\n  ;\n\n  _proto.computeScore = function computeScore(aligned) {\n    var words = [];\n    var scoreTotal = [];\n    scoreTotal[Sentence.TYPE_ADDED] = 0;\n    scoreTotal[Sentence.TYPE_MISSING] = 0;\n    scoreTotal[Sentence.TYPE_TYPO] = 0;\n    scoreTotal[Sentence.TYPE_WRONG] = 0;\n    scoreTotal[Sentence.TYPE_MATCH] = 0;\n\n    for (var i = 0; i < aligned.words1.length; i++) {\n      var solution = aligned.words1[i];\n      var answer = aligned.words2[i];\n      var type = '';\n\n      if (solution === undefined) {\n        type = Sentence.TYPE_ADDED;\n      } else if (answer === undefined) {\n        type = Sentence.TYPE_MISSING;\n      } else if (answer === solution) {\n        type = Sentence.TYPE_MATCH;\n      } else if (H5P.TextUtilities.areSimilar(solution, answer)) {\n        type = Sentence.TYPE_TYPO;\n      } else {\n        type = Sentence.TYPE_WRONG;\n      }\n\n      scoreTotal[type]++;\n      words.push({\n        'solution': solution,\n        'answer': answer,\n        'type': type\n      });\n    }\n\n    return {\n      scoreTotal: scoreTotal,\n      words: words\n    };\n  }\n  /**\n   * Bring two arrays of words to same length and match the words' positions\n   * There may be a smarter way to do it, but it works well.\n   *\n   * The idea behind the algorithm is to add as many gaps between each solution\n   * word as there are words in the input. Afterwards, the input words are shaken\n   * left and right multiple times with decreasing strictness for finding\n   * matches in the solution. Afterwords, all gaps that appear at the same\n   * position of the input and the solution can be removed.\n   *\n   * TODO: This needs to be boiled down. It's long, there's redundant code,\n   * but I am too scared to touch it without having tests in place first.\n   *\n   * @param {array} words1 - First Array of words.\n   * @param {array} words2 - Second Array of words.\n   * @return {object} Object containing two new arrays.\n   */\n  ;\n\n  _proto.alignWords = function alignWords(words1, words2) {\n    /**\n     * Get match pattern.\n     * @param {object} aligned Aligned words.\n     * @return {boolean[]} Match pattern.\n     */\n    var getMatchPattern = function getMatchPattern(aligned) {\n      return aligned.words1.map(function (word1, index) {\n        return word1 === aligned.words2[index] || H5P.TextUtilities.areSimilar(word1, aligned.words2[index]) || false;\n      });\n    };\n\n    var getMatch = function getMatch(answer, solution) {\n      var fuzzy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var match;\n\n      if (solution === undefined) {\n        return;\n      } // Split alternatives like word.split(/(?<!\\\\)\\|/)\n\n\n      var alternatives = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_2__[\"default\"].splitWordAlternatives(solution);\n\n      if (fuzzy) {\n        alternatives.forEach(function (alternative) {\n          if (H5P.TextUtilities.areSimilar(alternative, answer)) {\n            match = match || alternative;\n          }\n        });\n      } else {\n        alternatives.forEach(function (alternative) {\n          if (alternative === answer) {\n            match = match || alternative;\n          }\n        });\n      }\n\n      return match;\n    };\n\n    var align = function align(words1, words2) {\n      words2 = words2.map(function (word) {\n        return word === '' ? undefined : word;\n      }); // Add words2.length empty gaps in front of and behind every word\n\n      var master = words1.map(function (word1) {\n        return Array.apply(null, Array(words2.length)).concat(word1);\n      }).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n      master = master.concat(Array.apply(null, Array(words2.length))); // Create empty duplicate of same length\n\n      var slave = Array.apply(null, Array(master.length));\n      /*\n       * We let all words of the answer slide the solution array from left to right one by one.\n       * We let them stick if a match is found AND there are no identical words in the answer\n       * later on.\n       */\n\n      var floor = 0; // Lower boundary\n\n      for (var i = 0; i < words2.length; i++) {\n        var currentInput = words2[i];\n\n        for (var pos = master.length - 1; pos >= floor; pos--) {\n          var match = getMatch(currentInput, master[pos]);\n          var matchFound = currentInput !== undefined && match !== undefined; // const matchFound = currentInput !== undefined && currentInput === master[pos];\n\n          var noIdenticalWords = words2.slice(i + 1).indexOf(currentInput) === -1;\n\n          if (matchFound && noIdenticalWords || pos === floor) {\n            master[pos] = match;\n            slave[pos] = currentInput;\n            floor = pos + 1;\n            break;\n          }\n        }\n      }\n      /*\n       * We let all the words that don't have a match yet slide from right to left\n       * as far as possible looking for a match just in case they slided too far\n       */\n\n\n      for (var _pos = slave.length - 1; _pos >= 0; _pos--) {\n        var currentWord = slave[_pos];\n\n        if (currentWord !== undefined && currentWord !== master[_pos]) {\n          var moves = 0;\n          var posMatch = 0;\n          var matchLater = void 0;\n\n          while (_pos + moves + 1 < slave.length && slave[_pos + moves + 1] === undefined) {\n            var _match = getMatch(currentWord, master[_pos + moves + 1]);\n\n            if (_match !== undefined) {\n              posMatch = _pos + moves + 1;\n              matchLater = _match;\n            }\n\n            moves++;\n          }\n\n          slave[posMatch || _pos + moves] = currentWord;\n\n          if (matchLater !== undefined) {\n            master[posMatch] = matchLater;\n          }\n\n          slave[_pos] = undefined;\n        }\n      }\n      /*\n       * Now we slide the remainders from left to right to finally deal with typos\n       */\n\n\n      for (var _pos2 = 0; _pos2 < slave.length; _pos2++) {\n        var _currentWord = slave[_pos2];\n\n        if (_currentWord !== undefined && _currentWord !== master[_pos2]) {\n          var _moves = 0;\n          var _posMatch = 0;\n\n          var _matchLater = void 0;\n\n          while (_pos2 + _moves - 1 >= 0 && slave[_pos2 + _moves - 1] === undefined) {\n            var _match2 = getMatch(_currentWord, master[_pos2 + _moves - 1], true);\n\n            if (_match2 !== undefined) {\n              _posMatch = _pos2 + _moves - 1;\n              _matchLater = _match2;\n            }\n\n            _moves--;\n          }\n\n          slave[_posMatch || _pos2 + _moves] = _currentWord;\n\n          if (_matchLater !== undefined) {\n            master[_posMatch] = _matchLater;\n          }\n\n          slave[_pos2] = undefined;\n        }\n      } // Remove clutter aka gaps at same position in both array\n\n\n      for (var _pos3 = master.length - 1; _pos3 >= 0; _pos3--) {\n        if (master[_pos3] === undefined && slave[_pos3] === undefined) {\n          master.splice(_pos3, 1);\n          slave.splice(_pos3, 1);\n        }\n      } // Finally we can simply interpret adjacent missing/added words as wrong\n\n\n      for (var _pos4 = 0; _pos4 < master.length - 1; _pos4++) {\n        // We're assuming a left-swipe as previous operation here\n        if (master[_pos4] === undefined && slave[_pos4 + 1] === undefined) {\n          master[_pos4] = master[_pos4 + 1];\n          master.splice(_pos4 + 1, 1);\n          slave.splice(_pos4 + 1, 1);\n        }\n      } // Make big clusters =>\n\n\n      for (var _pos5 = 0; _pos5 < master.length - 1; _pos5++) {\n        if (slave[_pos5] === master[_pos5] && master[_pos5 + 1] === undefined && slave[_pos5] !== slave[_pos5 + 1]) {\n          var _moves2 = 0;\n\n          while (_pos5 + _moves2 + 1 < master.length && master[_pos5 + _moves2 + 1] === undefined) {\n            _moves2++;\n          }\n\n          if (_pos5 + _moves2 + 1 < master.length && slave.slice(_pos5 + 1, _pos5 + _moves2 + 1).lastIndexOf(slave[_pos5]) !== -1) {\n            master[_pos5 + _moves2 + 1] = master[_pos5];\n            master[_pos5] = undefined;\n          }\n        }\n      } // Make big clusters <=\n\n\n      master.reverse();\n      slave.reverse();\n\n      for (var _pos6 = 0; _pos6 < master.length - 1; _pos6++) {\n        if (slave[_pos6] === master[_pos6] && master[_pos6 + 1] === undefined && slave[_pos6] !== slave[_pos6 + 1]) {\n          var _moves3 = 0;\n\n          while (_pos6 + _moves3 + 1 < master.length && master[_pos6 + _moves3 + 1] === undefined) {\n            _moves3++;\n          }\n\n          if (_pos6 + _moves3 + 1 < master.length && slave.slice(_pos6 + 1, _pos6 + _moves3 + 1).lastIndexOf(slave[_pos6]) !== -1) {\n            master[_pos6 + _moves3 + 1] = master[_pos6];\n            master[_pos6] = undefined;\n          }\n        }\n      }\n\n      master.reverse();\n      slave.reverse();\n      return {\n        \"words1\": master,\n        \"words2\": slave\n      };\n    };\n    /**\n     * Count the number of matches + typos.\n     * @param {object} aligned Aligned words.\n     * @return {number} Number of matches and typos.\n     */\n\n\n    var count = function count(aligned) {\n      return getMatchPattern(aligned).reduce(function (stack, current) {\n        return stack + (current ? 1 : 0);\n      }, 0);\n    }; // The order of the words makes a difference when shaking. We return the best match\n\n\n    var aligned1 = align(words1, words2);\n    var aligned2 = align(words1.reverse(), words2.reverse());\n\n    if (count(aligned2) > count(aligned1)) {\n      aligned1 = {\n        'words1': aligned2.words1.reverse(),\n        'words2': aligned2.words2.reverse()\n      };\n    }\n    /*\n     * If learners add a lot of wrong words, these can lack a counterpart\n     * in the solution, and clusters between matches can be squeezed together\n     * in order to not count these counterpartless words as mistakes.\n     */\n\n\n    var matchPattern = getMatchPattern(aligned1);\n    var lo = -1;\n    var hi = matchPattern.length - 1;\n\n    do {\n      lo = matchPattern.lastIndexOf(true, hi);\n\n      while (aligned1.words1[lo + 1] === undefined && aligned1.words2[hi] === undefined) {\n        aligned1.words1.splice(lo + 1, 1);\n        aligned1.words2.splice(hi, 1);\n        hi -= 1;\n      }\n\n      hi = lo - 1;\n    } while (lo > 0);\n\n    return aligned1;\n  }\n  /**\n   * Set focus to the sentence solution.\n   */\n  ;\n\n  _proto.focusSolution = function focusSolution() {\n    this.solution.focus();\n  };\n\n  return Sentence;\n}(); // CSS Classes\n\n/** @constant {string} */\n\n\nSentence.CONTENT_WRAPPER = 'h5p-sentence';\n/** @constant {string} */\n\nSentence.CONTENT_DESCRIPTION = 'h5p-sentence-description';\n/** @constant {string} */\n\nSentence.CONTENT_DESCRIPTION_ONE_BUTTON = 'h5p-sentence-description-one-button';\n/** @constant {string} */\n\nSentence.CONTENT_DESCRIPTION_TWO_BUTTONS = 'h5p-sentence-description-two-buttons';\n/** @constant {string} */\n\nSentence.CONTENT_INTERACTION = 'h5p-sentence-interaction';\n/** @constant {string} */\n\nSentence.INPUT_WRAPPER = 'h5p-input-wrapper';\n/** @constant {string} */\n\nSentence.INPUT_FIELD = 'h5p-text-input'; // Score types\n\n/** @constant {string} */\n\nSentence.TYPE_ADDED = 'added';\n/** @constant {string} */\n\nSentence.TYPE_MISSING = 'missing';\n/** @constant {string} */\n\nSentence.TYPE_WRONG = 'wrong';\n/** @constant {string} */\n\nSentence.TYPE_MATCH = 'match';\n/** @constant {string} */\n\nSentence.TYPE_TYPO = 'typo'; // Regular expression configuration\n\n/** @constant {string} */\n\nSentence.AUTOSPLIT = \"[\\u4E00-\\u62FF\\u6300-\\u77FF\\u7800-\\u8CFF\\u8D00-\\u9FFF]\";\n/** @constant {string} */\n\nSentence.PUNCTUATION = \"[.?!,'\\\";\\\\:\\\\-\\\\(\\\\)/\\\\+\\\\-\\\\*\\xAB\\xBB\\xBF\\u201C-\\u201E\\u060C\\u061F\\u05BE\\u05C0\\u05C3\\u05C6\\u2000-\\u206F\\u22EF\\u3000-\\u3002\\u3008-\\u3011\\uFF01\\uFF08\\uFF09\\uFF0C\\uFF1A\\uFF1B\\uFF1F\\uFF3B\\uFF3D\\uFE41\\uFE42\\uFE4F\\uFF5E]\";\n/** @constant {string} */\n\nSentence.WORD = \"\\\\w|[\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF\\u0100-\\u02AF\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7-\\u060B\\u060D-\\u061E\\u0620-\\u08FF]\";\n/** @constant {string} */\n\nSentence.SPACE_ESCAPE = 'astringthatwillneverhappen123@@';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sentence);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dictation-sentence.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dictation-solution.js":
/*!***********************************************!*\
  !*** ./src/scripts/h5p-dictation-solution.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dictation-util */ \"./src/scripts/h5p-dictation-util.js\");\n\n/** Class representing a solution */\n\nvar Solution = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   */\n  function Solution(params) {\n    var _this = this;\n\n    this.params = params; // Solution words\n\n    this.words = document.createElement('div');\n    this.words.classList.add(Solution.SOLUTION_TEXT);\n    this.words.setAttribute('role', 'list');\n    this.words.setAttribute('aria-label', this.params.a11y.solution);\n    this.words.setAttribute('aria-expanded', 'false');\n    this.words.setAttribute('tabindex', '0');\n    this.words.addEventListener('keydown', function (event) {\n      var currentExpandedState = _this.words.getAttribute('aria-expanded'); // Retrieve previously marked word\n\n\n      var wordElement = _this.wordMarked || (_this.params.containsRTL ? _this.words.lastChild : _this.words.firstChild);\n\n      switch (event.keyCode) {\n        case 13: // Enter\n        // intentional fallthrough\n\n        case 32:\n          // Space\n          if (event.target !== event.currentTarget) {\n            // Ignore children\n            break;\n          } // Expand/collapse group for ARIA\n\n\n          if (currentExpandedState === 'false') {\n            _this.words.setAttribute('aria-expanded', 'true');\n\n            if (wordElement) {\n              // Focus on previously tabbed element\n              wordElement.focus();\n            }\n          } else {\n            _this.words.setAttribute('aria-expanded', 'false');\n\n            wordElement.setAttribute('tabindex', '-1');\n          }\n\n          break;\n      }\n    }); // Solution sentence\n\n    this.solutionInner = document.createElement('div');\n    this.solutionInner.classList.add(Solution.SOLUTION_INNER);\n    this.solutionInner.appendChild(this.words); // Solution Container\n\n    this.container = document.createElement('div');\n    this.container.classList.add(Solution.SOLUTION_CONTAINER);\n    this.container.classList.add(Solution.HIDE);\n    this.container.appendChild(this.solutionInner);\n  }\n  /**\n   * Get content for H5P.Question.\n   * @return {object} DOM elements for solution view.\n   */\n\n\n  var _proto = Solution.prototype;\n\n  _proto.getDOM = function getDOM() {\n    return this.container;\n  }\n  /**\n   * Build the solution for the sentence's results.\n   * @param {object} result Result.\n   * @param {object} result.score Scores.\n   * @param {number} result.score.added Number of added words added.\n   * @param {number} result.score.missing Number of words missing.\n   * @param {number} result.score.typo Number of words with typing errors.\n   * @param {number} result.score.wrong Number of wrong words.\n   * @param {number} result.score.match Number of mathes.\n   * @param {object[]} result.words Words.\n   * @param {string} result.words[].answer Answer given.\n   * @param {string} result.words[].solution Correct word.\n   * @param {string} result.words[].type Type of mistake or match.\n   * @param {boolean[]} result.spaces Spaces for gaps between words.\n   * @return {object[]} Solution with all every word's DOM element.\n   */\n  ;\n\n  _proto.createSolution = function createSolution(result) {\n    var _this2 = this;\n\n    // Revert order of right-to-left chunks\n    if (this.params.containsRTL) {\n      result.words = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].revertRTL(result.words);\n    }\n\n    return result.words.map(function (word, index) {\n      return _this2.createSolutionWordDOM(index, word, result.words.length - 1 !== index);\n    });\n  }\n  /**\n   * Build wrapper for single word of a solution.\n   * @param {number} index Tabindex for ARIA.\n   * @param {object} word Word information.\n   * @param {string} word.type Status about missing, typo, ...\n   * @param {string} word.solution Correct spelling of the word.\n   * @param {string} word.answer User input for this word.\n   * @param {boolean} [trainingGap=true] True if wrapper should have trailing gap.\n   */\n  ;\n\n  _proto.createSolutionWordDOM = function createSolutionWordDOM(index, word) {\n    var trailingGap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (this.params.alternateSolution === 'first' && word.type !== 'match' && word.type !== 'typo') {\n      word.solution = word.solution ? _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].splitWordAlternatives(word.solution)[0] : '';\n    } // General stuff\n\n\n    var wordDOM = document.createElement('span');\n\n    if (this.params.customTypoDisplay === false && word.type === 'typo') {\n      // Use \"mistake\" style instead of \"typo style\"\n      wordDOM.classList.add(\"h5p-wrapper-wrong\");\n    } else {\n      wordDOM.classList.add(\"h5p-wrapper-\".concat(word.type));\n    }\n\n    if (trailingGap) {\n      wordDOM.classList.add('h5p-spacer');\n    }\n\n    wordDOM.setAttribute('tabindex', '-1');\n    wordDOM.setAttribute('role', 'listitem'); // Add EventListeners\n\n    this.addSolutionWordListeners(wordDOM); // Create aria Label\n\n    var ariaPrefix = \"\".concat(this.params.a11y.item, \" \").concat(index + 1, \".\");\n    var ariaExplanation = this.createAriaExplanation(word);\n    var ariaScore = this.createAriaScore(word.type);\n    wordDOM.setAttribute('aria-label', \"\".concat(ariaPrefix, \" \").concat(ariaExplanation, \" \").concat(ariaScore)); // Add explanation to solution\n\n    this.appendExplanationTo(wordDOM, word);\n    return wordDOM;\n  }\n  /**\n   * Add EventListeners to solutions's words.\n   * @param {object} Word's DOM element.\n   */\n  ;\n\n  _proto.addSolutionWordListeners = function addSolutionWordListeners(wordDOM) {\n    var _this3 = this;\n\n    // on focus\n    wordDOM.addEventListener('focus', function (event) {\n      // Remember this word had focus\n      _this3.wordMarked = event.target;\n      event.target.setAttribute('tabindex', '0');\n    }); // on keydown\n\n    wordDOM.addEventListener('keydown', function (event) {\n      var firstChild = _this3.params.containsRTL ? event.target.parentNode.lastChild : event.target.parentNode.firstChild;\n      var lastChild = _this3.params.containsRTL ? event.target.parentNode.firstChild : event.target.parentNode.lastChild;\n\n      switch (event.keyCode) {\n        // Focus previous solution word\n        case 37: // Left\n        // intentional fallthrough\n\n        case 38:\n          // Top\n          event.preventDefault();\n\n          if (event.target.previousSibling) {\n            event.target.setAttribute('tabindex', '-1');\n            event.target.previousSibling.focus();\n          }\n\n          break;\n        // Focus next solution word\n\n        case 39: // Right\n        // intentional fallthrough\n\n        case 40:\n          // Down\n          event.preventDefault();\n\n          if (event.target.nextSibling) {\n            event.target.setAttribute('tabindex', '-1');\n            event.target.nextSibling.focus();\n          }\n\n          break;\n        // Focus first solution word\n\n        case 36:\n          // Home\n          event.preventDefault();\n\n          if (event.target !== firstChild) {\n            event.target.setAttribute('tabindex', '-1');\n            firstChild.focus();\n          }\n\n          break;\n        // Focus last solution word\n\n        case 35:\n          // End\n          event.preventDefault();\n\n          if (event.target !== lastChild) {\n            event.target.setAttribute('tabindex', '-1');\n            lastChild.focus();\n          }\n\n          break;\n      }\n    });\n  }\n  /**\n   * Create explanation text for aria label.\n   * @param {object} word Word with type, answer and solution.\n   * @return {string} Explanation text for aria label.\n   */\n  ;\n\n  _proto.createAriaExplanation = function createAriaExplanation(word) {\n    var ariaLabelType = {\n      match: this.params.a11y.correct,\n      wrong: this.params.a11y.wrong,\n      typo: this.params.a11y.typo,\n      missing: this.params.a11y.missing,\n      added: this.params.a11y.added\n    };\n    var answer = this.makeReadable(word.answer); // Account for use of \\|\n\n    var solutionText = word.type === 'match' || word.type === 'typo' ? _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].splitWordAlternatives(word.solution).join(\" \".concat(this.params.a11y.or, \" \")) : word.solution;\n    var solution = this.makeReadable(solutionText);\n    var ariaExplanation = \"\".concat(answer).concat(answer === '' ? '' : '. ').concat(ariaLabelType[word.type], \".\");\n\n    if (word.type === 'wrong' || word.type === 'typo' || word.type === 'missing') {\n      ariaExplanation += \" \".concat(this.params.a11y.shouldHaveBeen, \". \").concat(solution, \".\");\n    }\n\n    return ariaExplanation;\n  }\n  /**\n   * Replace symbols with a11y readably words.\n   * @param {string} [text=''] Text to make readable.\n   * @return {string} Readable text.\n   */\n  ;\n\n  _proto.makeReadable = function makeReadable(text) {\n    if (text === undefined) {\n      return '';\n    }\n\n    return text.replace(/\\./g, this.params.a11y.period).replace(/!/g, this.params.a11y.exclamationPoint).replace(/\\?/g, this.params.a11y.questionMark).replace(/,/g, this.params.a11y.comma).replace(/'/g, this.params.a11y.singleQuote).replace(/[\"\\u201C\\u201E]/g, this.params.a11y.doubleQuote).replace(/:/g, this.params.a11y.colon).replace(/;/g, this.params.a11y.semicolon).replace(/\\+/g, this.params.a11y.plus).replace(/-/g, this.params.a11y.minus).replace(/\\*/g, this.params.a11y.asterisk).replace(/\\//g, this.params.a11y.forwardSlash);\n  }\n  /**\n   * Create aria score text.\n   * @param {string} type Type of mistake.\n   * @return {string} Aria score text.\n   */\n  ;\n\n  _proto.createAriaScore = function createAriaScore(type) {\n    var ariaScore;\n\n    if (this.params.zeroMistakeMode) {\n      ariaScore = 0;\n\n      if (type === 'match') {\n        ariaScore = 1;\n      } else if (type === 'typo') {\n        ariaScore = 1 - this.params.typoFactor;\n      }\n    } else {\n      ariaScore = -1;\n\n      if (type === 'match') {\n        ariaScore = 0;\n      } else if (type === 'typo') {\n        ariaScore = ariaScore * this.params.typoFactor;\n      }\n    }\n\n    if (ariaScore === 0) {\n      ariaScore = '';\n    } else {\n      var scoreUnit = ariaScore === -1 || ariaScore === 1 ? this.params.a11y.point : this.params.a11y.points;\n      ariaScore = \"\".concat(ariaScore, \" \").concat(scoreUnit, \".\");\n    }\n\n    return ariaScore;\n  }\n  /**\n   * Append explanation to solution.\n   * @param {object} wordDOM Word's DOM element.\n   * @param {object} word Word with type, answer and solution.\n   */\n  ;\n\n  _proto.appendExplanationTo = function appendExplanationTo(wordDOM, word) {\n    // ScorePoints\n    var scorePoints = new H5P.Question.ScorePoints(); // Wrong input\n\n    if (word.type === 'wrong' || word.type === 'added' || word.type === 'typo') {\n      var wrongInput = document.createElement('span');\n      wrongInput.classList.add(\"h5p-answer-\".concat(word.type));\n      wrongInput.innerHTML = word.answer;\n      wordDOM.appendChild(wrongInput);\n    } // Correct solution\n\n\n    if (word.type !== 'added') {\n      var correctSolution = document.createElement('span');\n      correctSolution.classList.add(\"h5p-solution-\".concat(word.type));\n      correctSolution.innerHTML = word.solution;\n      wordDOM.appendChild(correctSolution);\n    } // Score explanation\n\n\n    if (this.params.zeroMistakeMode) {\n      var scoreExplanation = scorePoints.getElement(true);\n\n      if (word.type === 'match') {\n        wordDOM.appendChild(scoreExplanation);\n      }\n\n      if (word.type === 'typo' && this.params.typoFactor === 0.5) {\n        scoreExplanation.classList.remove('h5p-question-minus-one');\n        scoreExplanation.classList.add('h5p-question-plus-one-half');\n      }\n\n      if (word.type === 'typo' && this.params.typoFactor < 1) {\n        wordDOM.appendChild(scoreExplanation);\n      }\n    } else {\n      var _scoreExplanation = scorePoints.getElement(false);\n\n      if (word.type !== 'match') {\n        if (word.type === 'typo' && this.params.typoFactor === 0.5) {\n          _scoreExplanation.classList.remove('h5p-question-minus-one');\n\n          _scoreExplanation.classList.add('h5p-question-minus-one-half');\n        }\n\n        if (word.type !== 'typo' || this.params.typoFactor > 0) {\n          wordDOM.appendChild(_scoreExplanation);\n        }\n      }\n    }\n  }\n  /**\n   * Set current text in InputField.\n   * DOM is not created before to make cheating a little more difficult at least.\n   * @param {object} result - Current DOM element with words.\n   */\n  ;\n\n  _proto.show = function show(result) {\n    var _this4 = this;\n\n    var solutionElements = this.createSolution(result); // Adjust padding around text\n\n    if (solutionElements.length > 0 && result.words[solutionElements.length - 1].type === 'match') {\n      this.words.classList.add('h5p-solution-last-correct');\n    } else {\n      this.words.classList.remove('h5p-solution-last-correct');\n    }\n\n    if (!this.words.firstChild) {\n      solutionElements.forEach(function (element) {\n        _this4.words.appendChild(element);\n\n        _this4.container.classList.remove(Solution.HIDE);\n      });\n    }\n  }\n  /**\n   * Hide solution.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    while (this.words.firstChild) {\n      this.words.removeChild(this.words.firstChild);\n    }\n\n    this.container.classList.add(Solution.HIDE);\n  }\n  /**\n   * Set focus to the sentence solution.\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.words.focus();\n  }\n  /**\n   * Reset solution view.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.wordMarked = undefined;\n    this.words.setAttribute('aria-expanded', 'false');\n  };\n\n  return Solution;\n}(); // CSS Classes\n\n/** @constant {string} */\n\n\nSolution.SOLUTION_CONTAINER = 'h5p-solution-container';\n/** @constant {string} */\n\nSolution.SOLUTION_INNER = 'h5p-solution-inner';\n/** @constant {string} */\n\nSolution.SOLUTION_TEXT = 'h5p-solution-text';\n/** @constant {string} */\n\nSolution.HIDE = 'hide';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Solution);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9oNXAtZGljdGF0aW9uLXNvbHV0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7O0FBR0E7QUFDQTtBQUNBOztBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTs7QUFDQTtBQXJCQTtBQXVCQTs7QUFHQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUdBOztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBR0E7O0FBSUE7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUE7O0FBQ0E7QUFDQTs7QUFDQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTs7QUFDQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTs7QUFDQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUF4Q0E7QUEwQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFRQTs7QUFHQTtBQUdBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQWFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBOztBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFDQTs7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2g1cC1kaWN0YXRpb24vLi9zcmMvc2NyaXB0cy9oNXAtZGljdGF0aW9uLXNvbHV0aW9uLmpzPzM5ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFV0aWwgZnJvbSAnLi9oNXAtZGljdGF0aW9uLXV0aWwnO1xuXG4vKiogQ2xhc3MgcmVwcmVzZW50aW5nIGEgc29sdXRpb24gKi9cbmNsYXNzIFNvbHV0aW9uIHtcbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKi9cbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XG5cbiAgICAvLyBTb2x1dGlvbiB3b3Jkc1xuICAgIHRoaXMud29yZHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0aGlzLndvcmRzLmNsYXNzTGlzdC5hZGQoU29sdXRpb24uU09MVVRJT05fVEVYVCk7XG4gICAgdGhpcy53b3Jkcy5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnbGlzdCcpO1xuICAgIHRoaXMud29yZHMuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGhpcy5wYXJhbXMuYTExeS5zb2x1dGlvbik7XG4gICAgdGhpcy53b3Jkcy5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgICB0aGlzLndvcmRzLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnMCcpO1xuICAgIHRoaXMud29yZHMuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudEV4cGFuZGVkU3RhdGUgPSB0aGlzLndvcmRzLmdldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpO1xuICAgICAgLy8gUmV0cmlldmUgcHJldmlvdXNseSBtYXJrZWQgd29yZFxuICAgICAgY29uc3Qgd29yZEVsZW1lbnQgPSB0aGlzLndvcmRNYXJrZWQgfHxcbiAgICAgICAgKHRoaXMucGFyYW1zLmNvbnRhaW5zUlRMID8gdGhpcy53b3Jkcy5sYXN0Q2hpbGQgOiB0aGlzLndvcmRzLmZpcnN0Q2hpbGQpO1xuXG4gICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSAxMzogLy8gRW50ZXJcbiAgICAgICAgLy8gaW50ZW50aW9uYWwgZmFsbHRocm91Z2hcbiAgICAgICAgY2FzZSAzMjogLy8gU3BhY2VcbiAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgICAvLyBJZ25vcmUgY2hpbGRyZW5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIEV4cGFuZC9jb2xsYXBzZSBncm91cCBmb3IgQVJJQVxuICAgICAgICAgIGlmIChjdXJyZW50RXhwYW5kZWRTdGF0ZSA9PT0gJ2ZhbHNlJykge1xuICAgICAgICAgICAgdGhpcy53b3Jkcy5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpO1xuICAgICAgICAgICAgaWYgKHdvcmRFbGVtZW50KSB7XG4gICAgICAgICAgICAgIC8vIEZvY3VzIG9uIHByZXZpb3VzbHkgdGFiYmVkIGVsZW1lbnRcbiAgICAgICAgICAgICAgd29yZEVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLndvcmRzLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICAgICAgICAgICAgd29yZEVsZW1lbnQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFNvbHV0aW9uIHNlbnRlbmNlXG4gICAgdGhpcy5zb2x1dGlvbklubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5zb2x1dGlvbklubmVyLmNsYXNzTGlzdC5hZGQoU29sdXRpb24uU09MVVRJT05fSU5ORVIpO1xuICAgIHRoaXMuc29sdXRpb25Jbm5lci5hcHBlbmRDaGlsZCh0aGlzLndvcmRzKTtcblxuICAgIC8vIFNvbHV0aW9uIENvbnRhaW5lclxuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZChTb2x1dGlvbi5TT0xVVElPTl9DT05UQUlORVIpO1xuICAgIHRoaXMuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoU29sdXRpb24uSElERSk7XG4gICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5zb2x1dGlvbklubmVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgY29udGVudCBmb3IgSDVQLlF1ZXN0aW9uLlxuICAgKiBAcmV0dXJuIHtvYmplY3R9IERPTSBlbGVtZW50cyBmb3Igc29sdXRpb24gdmlldy5cbiAgICovXG4gIGdldERPTSgpIHtcbiAgICByZXR1cm4gdGhpcy5jb250YWluZXI7XG4gIH1cblxuICAvKipcbiAgICogQnVpbGQgdGhlIHNvbHV0aW9uIGZvciB0aGUgc2VudGVuY2UncyByZXN1bHRzLlxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzdWx0IFJlc3VsdC5cbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc3VsdC5zY29yZSBTY29yZXMuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByZXN1bHQuc2NvcmUuYWRkZWQgTnVtYmVyIG9mIGFkZGVkIHdvcmRzIGFkZGVkLlxuICAgKiBAcGFyYW0ge251bWJlcn0gcmVzdWx0LnNjb3JlLm1pc3NpbmcgTnVtYmVyIG9mIHdvcmRzIG1pc3NpbmcuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByZXN1bHQuc2NvcmUudHlwbyBOdW1iZXIgb2Ygd29yZHMgd2l0aCB0eXBpbmcgZXJyb3JzLlxuICAgKiBAcGFyYW0ge251bWJlcn0gcmVzdWx0LnNjb3JlLndyb25nIE51bWJlciBvZiB3cm9uZyB3b3Jkcy5cbiAgICogQHBhcmFtIHtudW1iZXJ9IHJlc3VsdC5zY29yZS5tYXRjaCBOdW1iZXIgb2YgbWF0aGVzLlxuICAgKiBAcGFyYW0ge29iamVjdFtdfSByZXN1bHQud29yZHMgV29yZHMuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByZXN1bHQud29yZHNbXS5hbnN3ZXIgQW5zd2VyIGdpdmVuLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0LndvcmRzW10uc29sdXRpb24gQ29ycmVjdCB3b3JkLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0LndvcmRzW10udHlwZSBUeXBlIG9mIG1pc3Rha2Ugb3IgbWF0Y2guXG4gICAqIEBwYXJhbSB7Ym9vbGVhbltdfSByZXN1bHQuc3BhY2VzIFNwYWNlcyBmb3IgZ2FwcyBiZXR3ZWVuIHdvcmRzLlxuICAgKiBAcmV0dXJuIHtvYmplY3RbXX0gU29sdXRpb24gd2l0aCBhbGwgZXZlcnkgd29yZCdzIERPTSBlbGVtZW50LlxuICAgKi9cbiAgY3JlYXRlU29sdXRpb24ocmVzdWx0KSB7XG4gICAgLy8gUmV2ZXJ0IG9yZGVyIG9mIHJpZ2h0LXRvLWxlZnQgY2h1bmtzXG4gICAgaWYgKHRoaXMucGFyYW1zLmNvbnRhaW5zUlRMKSB7XG4gICAgICByZXN1bHQud29yZHMgPSBVdGlsLnJldmVydFJUTChyZXN1bHQud29yZHMpO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQud29yZHMubWFwKCh3b3JkLCBpbmRleCkgPT5cbiAgICAgIHRoaXMuY3JlYXRlU29sdXRpb25Xb3JkRE9NKGluZGV4LCB3b3JkLCByZXN1bHQud29yZHMubGVuZ3RoIC0gMSAhPT0gaW5kZXgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBCdWlsZCB3cmFwcGVyIGZvciBzaW5nbGUgd29yZCBvZiBhIHNvbHV0aW9uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXggVGFiaW5kZXggZm9yIEFSSUEuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB3b3JkIFdvcmQgaW5mb3JtYXRpb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB3b3JkLnR5cGUgU3RhdHVzIGFib3V0IG1pc3NpbmcsIHR5cG8sIC4uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gd29yZC5zb2x1dGlvbiBDb3JyZWN0IHNwZWxsaW5nIG9mIHRoZSB3b3JkLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gd29yZC5hbnN3ZXIgVXNlciBpbnB1dCBmb3IgdGhpcyB3b3JkLlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFt0cmFpbmluZ0dhcD10cnVlXSBUcnVlIGlmIHdyYXBwZXIgc2hvdWxkIGhhdmUgdHJhaWxpbmcgZ2FwLlxuICAgKi9cbiAgY3JlYXRlU29sdXRpb25Xb3JkRE9NKGluZGV4LCB3b3JkLCB0cmFpbGluZ0dhcCA9IHRydWUpIHtcbiAgICBpZiAodGhpcy5wYXJhbXMuYWx0ZXJuYXRlU29sdXRpb24gPT09ICdmaXJzdCcgJiYgd29yZC50eXBlICE9PSAnbWF0Y2gnICYmIHdvcmQudHlwZSAhPT0gJ3R5cG8nKSB7XG4gICAgICB3b3JkLnNvbHV0aW9uID0gd29yZC5zb2x1dGlvbiA/IFV0aWwuc3BsaXRXb3JkQWx0ZXJuYXRpdmVzKHdvcmQuc29sdXRpb24pWzBdIDogJyc7XG4gICAgfVxuXG4gICAgLy8gR2VuZXJhbCBzdHVmZlxuICAgIGNvbnN0IHdvcmRET00gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgaWYgKHRoaXMucGFyYW1zLmN1c3RvbVR5cG9EaXNwbGF5ID09PSBmYWxzZSAmJiB3b3JkLnR5cGUgPT09ICd0eXBvJykge1xuICAgICAgLy8gVXNlIFwibWlzdGFrZVwiIHN0eWxlIGluc3RlYWQgb2YgXCJ0eXBvIHN0eWxlXCJcbiAgICAgIHdvcmRET00uY2xhc3NMaXN0LmFkZChgaDVwLXdyYXBwZXItd3JvbmdgKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB3b3JkRE9NLmNsYXNzTGlzdC5hZGQoYGg1cC13cmFwcGVyLSR7d29yZC50eXBlfWApO1xuICAgIH1cblxuICAgIGlmICh0cmFpbGluZ0dhcCkge1xuICAgICAgd29yZERPTS5jbGFzc0xpc3QuYWRkKCdoNXAtc3BhY2VyJyk7XG4gICAgfVxuICAgIHdvcmRET00uc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpO1xuICAgIHdvcmRET00uc2V0QXR0cmlidXRlKCdyb2xlJywgJ2xpc3RpdGVtJyk7XG5cbiAgICAvLyBBZGQgRXZlbnRMaXN0ZW5lcnNcbiAgICB0aGlzLmFkZFNvbHV0aW9uV29yZExpc3RlbmVycyh3b3JkRE9NKTtcblxuICAgIC8vIENyZWF0ZSBhcmlhIExhYmVsXG4gICAgY29uc3QgYXJpYVByZWZpeCA9IGAke3RoaXMucGFyYW1zLmExMXkuaXRlbX0gJHtpbmRleCArIDF9LmA7XG4gICAgY29uc3QgYXJpYUV4cGxhbmF0aW9uID0gdGhpcy5jcmVhdGVBcmlhRXhwbGFuYXRpb24od29yZCk7XG4gICAgY29uc3QgYXJpYVNjb3JlID0gdGhpcy5jcmVhdGVBcmlhU2NvcmUod29yZC50eXBlKTtcbiAgICB3b3JkRE9NLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsIGAke2FyaWFQcmVmaXh9ICR7YXJpYUV4cGxhbmF0aW9ufSAke2FyaWFTY29yZX1gKTtcblxuICAgIC8vIEFkZCBleHBsYW5hdGlvbiB0byBzb2x1dGlvblxuICAgIHRoaXMuYXBwZW5kRXhwbGFuYXRpb25Ubyh3b3JkRE9NLCB3b3JkKTtcblxuICAgIHJldHVybiB3b3JkRE9NO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBFdmVudExpc3RlbmVycyB0byBzb2x1dGlvbnMncyB3b3Jkcy5cbiAgICogQHBhcmFtIHtvYmplY3R9IFdvcmQncyBET00gZWxlbWVudC5cbiAgICovXG4gIGFkZFNvbHV0aW9uV29yZExpc3RlbmVycyh3b3JkRE9NKSB7XG4gICAgLy8gb24gZm9jdXNcbiAgICB3b3JkRE9NLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgZXZlbnQgPT4ge1xuICAgICAgLy8gUmVtZW1iZXIgdGhpcyB3b3JkIGhhZCBmb2N1c1xuICAgICAgdGhpcy53b3JkTWFya2VkID0gZXZlbnQudGFyZ2V0O1xuICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnMCcpO1xuICAgIH0pO1xuXG4gICAgLy8gb24ga2V5ZG93blxuICAgIHdvcmRET00uYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLnBhcmFtcy5jb250YWluc1JUTCA/XG4gICAgICAgIGV2ZW50LnRhcmdldC5wYXJlbnROb2RlLmxhc3RDaGlsZCA6XG4gICAgICAgIGV2ZW50LnRhcmdldC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQ7XG4gICAgICBjb25zdCBsYXN0Q2hpbGQgPSB0aGlzLnBhcmFtcy5jb250YWluc1JUTCA/XG4gICAgICAgIGV2ZW50LnRhcmdldC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQgOlxuICAgICAgICBldmVudC50YXJnZXQucGFyZW50Tm9kZS5sYXN0Q2hpbGQ7XG5cbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuXG4gICAgICAgIC8vIEZvY3VzIHByZXZpb3VzIHNvbHV0aW9uIHdvcmRcbiAgICAgICAgY2FzZSAzNzogLy8gTGVmdFxuICAgICAgICAvLyBpbnRlbnRpb25hbCBmYWxsdGhyb3VnaFxuICAgICAgICBjYXNlIDM4OiAvLyBUb3BcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGlmIChldmVudC50YXJnZXQucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICBldmVudC50YXJnZXQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpO1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnByZXZpb3VzU2libGluZy5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAvLyBGb2N1cyBuZXh0IHNvbHV0aW9uIHdvcmRcbiAgICAgICAgY2FzZSAzOTogLy8gUmlnaHRcbiAgICAgICAgLy8gaW50ZW50aW9uYWwgZmFsbHRocm91Z2hcbiAgICAgICAgY2FzZSA0MDogLy8gRG93blxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgaWYgKGV2ZW50LnRhcmdldC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5uZXh0U2libGluZy5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAvLyBGb2N1cyBmaXJzdCBzb2x1dGlvbiB3b3JkXG4gICAgICAgIGNhc2UgMzY6IC8vIEhvbWVcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGlmIChldmVudC50YXJnZXQgIT09IGZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgICAgICAgICBmaXJzdENoaWxkLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIC8vIEZvY3VzIGxhc3Qgc29sdXRpb24gd29yZFxuICAgICAgICBjYXNlIDM1OiAvLyBFbmRcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGlmIChldmVudC50YXJnZXQgIT09IGxhc3RDaGlsZCkge1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICAgICAgICAgIGxhc3RDaGlsZC5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgZXhwbGFuYXRpb24gdGV4dCBmb3IgYXJpYSBsYWJlbC5cbiAgICogQHBhcmFtIHtvYmplY3R9IHdvcmQgV29yZCB3aXRoIHR5cGUsIGFuc3dlciBhbmQgc29sdXRpb24uXG4gICAqIEByZXR1cm4ge3N0cmluZ30gRXhwbGFuYXRpb24gdGV4dCBmb3IgYXJpYSBsYWJlbC5cbiAgICovXG4gIGNyZWF0ZUFyaWFFeHBsYW5hdGlvbih3b3JkKSB7XG4gICAgY29uc3QgYXJpYUxhYmVsVHlwZSA9IHtcbiAgICAgIG1hdGNoOiB0aGlzLnBhcmFtcy5hMTF5LmNvcnJlY3QsXG4gICAgICB3cm9uZzogdGhpcy5wYXJhbXMuYTExeS53cm9uZyxcbiAgICAgIHR5cG86IHRoaXMucGFyYW1zLmExMXkudHlwbyxcbiAgICAgIG1pc3Npbmc6IHRoaXMucGFyYW1zLmExMXkubWlzc2luZyxcbiAgICAgIGFkZGVkOiB0aGlzLnBhcmFtcy5hMTF5LmFkZGVkXG4gICAgfTtcblxuICAgIGNvbnN0IGFuc3dlciA9IHRoaXMubWFrZVJlYWRhYmxlKHdvcmQuYW5zd2VyKTtcblxuICAgIC8vIEFjY291bnQgZm9yIHVzZSBvZiBcXHxcbiAgICBjb25zdCBzb2x1dGlvblRleHQgPSAod29yZC50eXBlID09PSAnbWF0Y2gnIHx8IHdvcmQudHlwZSA9PT0gJ3R5cG8nKSA/XG4gICAgICBVdGlsLnNwbGl0V29yZEFsdGVybmF0aXZlcyh3b3JkLnNvbHV0aW9uKS5qb2luKGAgJHt0aGlzLnBhcmFtcy5hMTF5Lm9yfSBgKSA6XG4gICAgICB3b3JkLnNvbHV0aW9uO1xuICAgIGNvbnN0IHNvbHV0aW9uID0gdGhpcy5tYWtlUmVhZGFibGUoc29sdXRpb25UZXh0KTtcblxuICAgIGxldCBhcmlhRXhwbGFuYXRpb24gPSBgJHthbnN3ZXJ9JHthbnN3ZXIgPT09ICcnID8gJycgOiAnLiAnfSR7YXJpYUxhYmVsVHlwZVt3b3JkLnR5cGVdfS5gO1xuICAgIGlmICh3b3JkLnR5cGUgPT09ICd3cm9uZycgfHwgd29yZC50eXBlID09PSAndHlwbycgfHwgd29yZC50eXBlID09PSAnbWlzc2luZycpIHtcbiAgICAgIGFyaWFFeHBsYW5hdGlvbiArPSBgICR7dGhpcy5wYXJhbXMuYTExeS5zaG91bGRIYXZlQmVlbn0uICR7c29sdXRpb259LmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFyaWFFeHBsYW5hdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlIHN5bWJvbHMgd2l0aCBhMTF5IHJlYWRhYmx5IHdvcmRzLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gW3RleHQ9JyddIFRleHQgdG8gbWFrZSByZWFkYWJsZS5cbiAgICogQHJldHVybiB7c3RyaW5nfSBSZWFkYWJsZSB0ZXh0LlxuICAgKi9cbiAgbWFrZVJlYWRhYmxlKHRleHQpIHtcbiAgICBpZiAodGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRleHRcbiAgICAgIC5yZXBsYWNlKC9cXC4vZywgdGhpcy5wYXJhbXMuYTExeS5wZXJpb2QpXG4gICAgICAucmVwbGFjZSgvIS9nLCB0aGlzLnBhcmFtcy5hMTF5LmV4Y2xhbWF0aW9uUG9pbnQpXG4gICAgICAucmVwbGFjZSgvXFw/L2csIHRoaXMucGFyYW1zLmExMXkucXVlc3Rpb25NYXJrKVxuICAgICAgLnJlcGxhY2UoLywvZywgdGhpcy5wYXJhbXMuYTExeS5jb21tYSlcbiAgICAgIC5yZXBsYWNlKC8nL2csIHRoaXMucGFyYW1zLmExMXkuc2luZ2xlUXVvdGUpXG4gICAgICAucmVwbGFjZSgvW1wiXFx1MjAxQ1xcdTIwMUVdL2csIHRoaXMucGFyYW1zLmExMXkuZG91YmxlUXVvdGUpXG4gICAgICAucmVwbGFjZSgvOi9nLCB0aGlzLnBhcmFtcy5hMTF5LmNvbG9uKVxuICAgICAgLnJlcGxhY2UoLzsvZywgdGhpcy5wYXJhbXMuYTExeS5zZW1pY29sb24pXG4gICAgICAucmVwbGFjZSgvXFwrL2csIHRoaXMucGFyYW1zLmExMXkucGx1cylcbiAgICAgIC5yZXBsYWNlKC8tL2csIHRoaXMucGFyYW1zLmExMXkubWludXMpXG4gICAgICAucmVwbGFjZSgvXFwqL2csIHRoaXMucGFyYW1zLmExMXkuYXN0ZXJpc2spXG4gICAgICAucmVwbGFjZSgvXFwvL2csIHRoaXMucGFyYW1zLmExMXkuZm9yd2FyZFNsYXNoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYXJpYSBzY29yZSB0ZXh0LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSBUeXBlIG9mIG1pc3Rha2UuXG4gICAqIEByZXR1cm4ge3N0cmluZ30gQXJpYSBzY29yZSB0ZXh0LlxuICAgKi9cbiAgY3JlYXRlQXJpYVNjb3JlKHR5cGUpIHtcbiAgICBsZXQgYXJpYVNjb3JlO1xuXG4gICAgaWYgKHRoaXMucGFyYW1zLnplcm9NaXN0YWtlTW9kZSkge1xuICAgICAgYXJpYVNjb3JlID0gMDtcblxuICAgICAgaWYgKHR5cGUgPT09ICdtYXRjaCcpIHtcbiAgICAgICAgYXJpYVNjb3JlID0gMTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKHR5cGUgPT09ICd0eXBvJykge1xuICAgICAgICBhcmlhU2NvcmUgPSAoMSAtIHRoaXMucGFyYW1zLnR5cG9GYWN0b3IpO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGFyaWFTY29yZSA9IC0xO1xuXG4gICAgICBpZiAodHlwZSA9PT0gJ21hdGNoJykge1xuICAgICAgICBhcmlhU2NvcmUgPSAwO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAodHlwZSA9PT0gJ3R5cG8nKSB7XG4gICAgICAgIGFyaWFTY29yZSA9IGFyaWFTY29yZSAqIHRoaXMucGFyYW1zLnR5cG9GYWN0b3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGFyaWFTY29yZSA9PT0gMCkge1xuICAgICAgYXJpYVNjb3JlID0gJyc7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY29uc3Qgc2NvcmVVbml0ID0gKGFyaWFTY29yZSA9PT0gLTEgfHwgYXJpYVNjb3JlID09PSAxKSA/XG4gICAgICAgIHRoaXMucGFyYW1zLmExMXkucG9pbnQgOlxuICAgICAgICB0aGlzLnBhcmFtcy5hMTF5LnBvaW50cztcbiAgICAgIGFyaWFTY29yZSA9IGAke2FyaWFTY29yZX0gJHtzY29yZVVuaXR9LmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFyaWFTY29yZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBcHBlbmQgZXhwbGFuYXRpb24gdG8gc29sdXRpb24uXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB3b3JkRE9NIFdvcmQncyBET00gZWxlbWVudC5cbiAgICogQHBhcmFtIHtvYmplY3R9IHdvcmQgV29yZCB3aXRoIHR5cGUsIGFuc3dlciBhbmQgc29sdXRpb24uXG4gICAqL1xuICBhcHBlbmRFeHBsYW5hdGlvblRvKHdvcmRET00sIHdvcmQpIHtcbiAgICAvLyBTY29yZVBvaW50c1xuICAgIGNvbnN0IHNjb3JlUG9pbnRzID0gbmV3IEg1UC5RdWVzdGlvbi5TY29yZVBvaW50cygpO1xuXG4gICAgLy8gV3JvbmcgaW5wdXRcbiAgICBpZiAod29yZC50eXBlID09PSAnd3JvbmcnIHx8IHdvcmQudHlwZSA9PT0gJ2FkZGVkJyB8fCB3b3JkLnR5cGUgPT09ICd0eXBvJykge1xuICAgICAgY29uc3Qgd3JvbmdJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgIHdyb25nSW5wdXQuY2xhc3NMaXN0LmFkZChgaDVwLWFuc3dlci0ke3dvcmQudHlwZX1gKTtcbiAgICAgIHdyb25nSW5wdXQuaW5uZXJIVE1MID0gd29yZC5hbnN3ZXI7XG4gICAgICB3b3JkRE9NLmFwcGVuZENoaWxkKHdyb25nSW5wdXQpO1xuICAgIH1cblxuICAgIC8vIENvcnJlY3Qgc29sdXRpb25cbiAgICBpZiAod29yZC50eXBlICE9PSAnYWRkZWQnKSB7XG4gICAgICBjb25zdCBjb3JyZWN0U29sdXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICBjb3JyZWN0U29sdXRpb24uY2xhc3NMaXN0LmFkZChgaDVwLXNvbHV0aW9uLSR7d29yZC50eXBlfWApO1xuICAgICAgY29ycmVjdFNvbHV0aW9uLmlubmVySFRNTCA9IHdvcmQuc29sdXRpb247XG4gICAgICB3b3JkRE9NLmFwcGVuZENoaWxkKGNvcnJlY3RTb2x1dGlvbik7XG4gICAgfVxuXG4gICAgLy8gU2NvcmUgZXhwbGFuYXRpb25cbiAgICBpZiAodGhpcy5wYXJhbXMuemVyb01pc3Rha2VNb2RlKSB7XG4gICAgICBjb25zdCBzY29yZUV4cGxhbmF0aW9uID0gc2NvcmVQb2ludHMuZ2V0RWxlbWVudCh0cnVlKTtcbiAgICAgIGlmICh3b3JkLnR5cGUgPT09ICdtYXRjaCcpIHtcbiAgICAgICAgd29yZERPTS5hcHBlbmRDaGlsZChzY29yZUV4cGxhbmF0aW9uKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHdvcmQudHlwZSA9PT0gJ3R5cG8nICYmIHRoaXMucGFyYW1zLnR5cG9GYWN0b3IgPT09IDAuNSkge1xuICAgICAgICBzY29yZUV4cGxhbmF0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ2g1cC1xdWVzdGlvbi1taW51cy1vbmUnKTtcbiAgICAgICAgc2NvcmVFeHBsYW5hdGlvbi5jbGFzc0xpc3QuYWRkKCdoNXAtcXVlc3Rpb24tcGx1cy1vbmUtaGFsZicpO1xuICAgICAgfVxuXG4gICAgICBpZiAod29yZC50eXBlID09PSAndHlwbycgJiYgdGhpcy5wYXJhbXMudHlwb0ZhY3RvciA8IDEpIHtcbiAgICAgICAgd29yZERPTS5hcHBlbmRDaGlsZChzY29yZUV4cGxhbmF0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCBzY29yZUV4cGxhbmF0aW9uID0gc2NvcmVQb2ludHMuZ2V0RWxlbWVudChmYWxzZSk7XG4gICAgICBpZiAod29yZC50eXBlICE9PSAnbWF0Y2gnKSB7XG4gICAgICAgIGlmICh3b3JkLnR5cGUgPT09ICd0eXBvJyAmJiB0aGlzLnBhcmFtcy50eXBvRmFjdG9yID09PSAwLjUpIHtcbiAgICAgICAgICBzY29yZUV4cGxhbmF0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ2g1cC1xdWVzdGlvbi1taW51cy1vbmUnKTtcbiAgICAgICAgICBzY29yZUV4cGxhbmF0aW9uLmNsYXNzTGlzdC5hZGQoJ2g1cC1xdWVzdGlvbi1taW51cy1vbmUtaGFsZicpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHdvcmQudHlwZSAhPT0gJ3R5cG8nIHx8IHRoaXMucGFyYW1zLnR5cG9GYWN0b3IgPiAwKSB7XG4gICAgICAgICAgd29yZERPTS5hcHBlbmRDaGlsZChzY29yZUV4cGxhbmF0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgY3VycmVudCB0ZXh0IGluIElucHV0RmllbGQuXG4gICAqIERPTSBpcyBub3QgY3JlYXRlZCBiZWZvcmUgdG8gbWFrZSBjaGVhdGluZyBhIGxpdHRsZSBtb3JlIGRpZmZpY3VsdCBhdCBsZWFzdC5cbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc3VsdCAtIEN1cnJlbnQgRE9NIGVsZW1lbnQgd2l0aCB3b3Jkcy5cbiAgICovXG4gIHNob3cocmVzdWx0KSB7XG4gICAgY29uc3Qgc29sdXRpb25FbGVtZW50cyA9IHRoaXMuY3JlYXRlU29sdXRpb24ocmVzdWx0KTtcblxuICAgIC8vIEFkanVzdCBwYWRkaW5nIGFyb3VuZCB0ZXh0XG4gICAgaWYgKHNvbHV0aW9uRWxlbWVudHMubGVuZ3RoID4gMCAmJiByZXN1bHQud29yZHNbc29sdXRpb25FbGVtZW50cy5sZW5ndGggLSAxXS50eXBlID09PSAnbWF0Y2gnKSB7XG4gICAgICB0aGlzLndvcmRzLmNsYXNzTGlzdC5hZGQoJ2g1cC1zb2x1dGlvbi1sYXN0LWNvcnJlY3QnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLndvcmRzLmNsYXNzTGlzdC5yZW1vdmUoJ2g1cC1zb2x1dGlvbi1sYXN0LWNvcnJlY3QnKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMud29yZHMuZmlyc3RDaGlsZCkge1xuICAgICAgc29sdXRpb25FbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICB0aGlzLndvcmRzLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFNvbHV0aW9uLkhJREUpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhpZGUgc29sdXRpb24uXG4gICAqL1xuICBoaWRlKCkge1xuICAgIHdoaWxlICh0aGlzLndvcmRzLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHRoaXMud29yZHMucmVtb3ZlQ2hpbGQodGhpcy53b3Jkcy5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZChTb2x1dGlvbi5ISURFKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgZm9jdXMgdG8gdGhlIHNlbnRlbmNlIHNvbHV0aW9uLlxuICAgKi9cbiAgZm9jdXMoKSB7XG4gICAgdGhpcy53b3Jkcy5mb2N1cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlc2V0IHNvbHV0aW9uIHZpZXcuXG4gICAqL1xuICByZXNldCgpIHtcbiAgICB0aGlzLndvcmRNYXJrZWQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy53b3Jkcy5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgfVxufVxuXG4vLyBDU1MgQ2xhc3Nlc1xuLyoqIEBjb25zdGFudCB7c3RyaW5nfSAqL1xuU29sdXRpb24uU09MVVRJT05fQ09OVEFJTkVSID0gJ2g1cC1zb2x1dGlvbi1jb250YWluZXInO1xuLyoqIEBjb25zdGFudCB7c3RyaW5nfSAqL1xuU29sdXRpb24uU09MVVRJT05fSU5ORVIgPSAnaDVwLXNvbHV0aW9uLWlubmVyJztcbi8qKiBAY29uc3RhbnQge3N0cmluZ30gKi9cblNvbHV0aW9uLlNPTFVUSU9OX1RFWFQgPSAnaDVwLXNvbHV0aW9uLXRleHQnO1xuLyoqIEBjb25zdGFudCB7c3RyaW5nfSAqL1xuU29sdXRpb24uSElERSA9ICdoaWRlJztcblxuZXhwb3J0IGRlZmF1bHQgU29sdXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dictation-solution.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dictation-util.js":
/*!*******************************************!*\
  !*** ./src/scripts/h5p-dictation-util.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/** Class for utility functions */\nvar Util = /*#__PURE__*/function () {\n  function Util() {}\n\n  /**\n   * Extend an array just like JQuery's extend.\n   * @param {object} arguments Objects to be merged.\n   * @return {object} Merged objects.\n   */\n  Util.extend = function extend() {\n    for (var i = 1; i < arguments.length; i++) {\n      for (var key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          if (_typeof(arguments[0][key]) === 'object' && _typeof(arguments[i][key]) === 'object') {\n            this.extend(arguments[0][key], arguments[i][key]);\n          } else {\n            arguments[0][key] = arguments[i][key];\n          }\n        }\n      }\n    }\n\n    return arguments[0];\n  }\n  /**\n   * Retrieve true string from HTML encoded string.\n   * @param {string} input Input string.\n   * @return {string} Output string.\n   */\n  ;\n\n  Util.htmlDecode = function htmlDecode(input) {\n    var dparser = new DOMParser().parseFromString(input, 'text/html');\n    return dparser.documentElement.textContent;\n  }\n  /**\n   * Revert order of right-to-left chunks.\n   *\n   * Words can be mixed as right-to-left and left-to-right, and the\n   * parsed input from the text field will have a different order than the\n   * displayed words. The right-to-left chunks are reversed here.\n   *\n   * @param {object[]} words Words object.\n   * @param {string} word.solution Word to test.\n   * @return {object[]} RTL words reordered.\n   */\n  ;\n\n  Util.revertRTL = function revertRTL(words) {\n    var reversedWords = [];\n    var currentRTL = []; // Reverse RTL blocks, keep LTR\n\n    words.forEach(function (word) {\n      var isRTL = Util.containsRTLCharacters(word.solution);\n\n      if (isRTL) {\n        currentRTL.push(word);\n      } else {\n        reversedWords = reversedWords.concat(currentRTL.reverse());\n        currentRTL = [];\n        reversedWords.push(word);\n      }\n    });\n\n    if (currentRTL.length !== 0) {\n      reversedWords = reversedWords.concat(currentRTL.reverse());\n    }\n\n    return reversedWords;\n  }\n  /**\n   * Split word into alternatives using | but not \\| as delimiter.\n   *\n   * Can be replaced by word.split(/(?<!\\\\)\\|/) as soon as lookbehinds in\n   * regular expressions are commonly available in browsers (mind IE11 though)\n   *\n   * @param {string} word Word to be split.\n   * @param {string[]} Word alternatives.\n   */\n  ;\n\n  Util.splitWordAlternatives = function splitWordAlternatives(word) {\n    var wordReversed = word.split('').reverse().join('');\n    var alternatives = wordReversed.split(/\\|(?!\\\\)/);\n    return alternatives.map(function (alternative) {\n      return alternative.split('').reverse().join('').replace('\\\\|', '|');\n    }).reverse();\n  }\n  /**\n   * Check for right-to-left characters.\n   *\n   * @param {string} input Input to check for right-to-left characters.\n   * @return {boolean} True, if input contains right-to-left characters.\n   */\n  ;\n\n  Util.containsRTLCharacters = function containsRTLCharacters(input) {\n    return new RegExp('^[^' + Util.RTL + ']*?[' + Util.RTL + ']').test(input);\n  }\n  /**\n   * Combine all possible combinations of strings from two sets.\n   *\n   * ['a', 'b', 'c'] and ['d', 'e'] become ['a d', 'a e', 'b d', 'b e', 'c d', 'c e']\n   *\n   * @param {object[]} words1 First set of strings.\n   * @param {object[]} words2 Second set of strings.\n   * @param {string} [delimiter=' '] Delimiter between each string.\n   */\n  ;\n\n  Util.buildCombinations = function buildCombinations(words1, words2) {\n    var delimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';\n    var result = [];\n    words1.forEach(function (word1) {\n      result.push.apply(result, _toConsumableArray(words2.map(function (word2) {\n        return word2 === '' ? word1 : \"\".concat(word2).concat(delimiter).concat(word1);\n      })));\n    });\n    return result;\n  }\n  /**\n   * Format language tag (RFC 5646). Assuming \"language-coutry\". No validation.\n   * Cmp. https://tools.ietf.org/html/rfc5646\n   * @param {string} languageTag Language tag.\n   * @return {string} Formatted language tag.\n   */\n  ;\n\n  Util.formatLanguageCode = function formatLanguageCode(languageCode) {\n    if (typeof languageCode !== 'string') {\n      return languageCode;\n    }\n    /*\n     * RFC 5646 states that language tags are case insensitive, but\n     * recommendations may be followed to improve human interpretation\n     */\n\n\n    var segments = languageCode.split('-');\n    segments[0] = segments[0].toLowerCase(); // ISO 639 recommendation\n\n    if (segments.length > 1) {\n      segments[1] = segments[1].toUpperCase(); // ISO 3166-1 recommendation\n    }\n\n    languageCode = segments.join('-');\n    return languageCode;\n  }\n  /**\n   * Shuffle array.\n   * @param {object[]} array Array.\n   * @return {object[]} Shuffled array.\n   */\n  ;\n\n  Util.shuffleArray = function shuffleArray(array) {\n    var j, x, i;\n\n    for (i = array.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = array[i];\n      array[i] = array[j];\n      array[j] = x;\n    }\n\n    return array;\n  };\n\n  return Util;\n}(); // Regular expression configuration\n\n/** @constant {string} */\n\n\nUtil.RTL = \"\\u0591-\\u08FF\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Util);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9oNXAtZGljdGF0aW9uLXV0aWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7O0FBQ0E7OztBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oNXAtZGljdGF0aW9uLy4vc3JjL3NjcmlwdHMvaDVwLWRpY3RhdGlvbi11dGlsLmpzPzU0MjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIENsYXNzIGZvciB1dGlsaXR5IGZ1bmN0aW9ucyAqL1xuY2xhc3MgVXRpbCB7XG4gIC8qKlxuICAgKiBFeHRlbmQgYW4gYXJyYXkganVzdCBsaWtlIEpRdWVyeSdzIGV4dGVuZC5cbiAgICogQHBhcmFtIHtvYmplY3R9IGFyZ3VtZW50cyBPYmplY3RzIHRvIGJlIG1lcmdlZC5cbiAgICogQHJldHVybiB7b2JqZWN0fSBNZXJnZWQgb2JqZWN0cy5cbiAgICovXG4gIHN0YXRpYyBleHRlbmQoKSB7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGtleSBpbiBhcmd1bWVudHNbaV0pIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1swXVtrZXldID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYXJndW1lbnRzW2ldW2tleV0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB0aGlzLmV4dGVuZChhcmd1bWVudHNbMF1ba2V5XSwgYXJndW1lbnRzW2ldW2tleV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGFyZ3VtZW50c1swXVtrZXldID0gYXJndW1lbnRzW2ldW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhcmd1bWVudHNbMF07XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmUgdHJ1ZSBzdHJpbmcgZnJvbSBIVE1MIGVuY29kZWQgc3RyaW5nLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgSW5wdXQgc3RyaW5nLlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IE91dHB1dCBzdHJpbmcuXG4gICAqL1xuICBzdGF0aWMgaHRtbERlY29kZShpbnB1dCkge1xuICAgIGNvbnN0IGRwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKGlucHV0LCAndGV4dC9odG1sJyk7XG4gICAgcmV0dXJuIGRwYXJzZXIuZG9jdW1lbnRFbGVtZW50LnRleHRDb250ZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldmVydCBvcmRlciBvZiByaWdodC10by1sZWZ0IGNodW5rcy5cbiAgICpcbiAgICogV29yZHMgY2FuIGJlIG1peGVkIGFzIHJpZ2h0LXRvLWxlZnQgYW5kIGxlZnQtdG8tcmlnaHQsIGFuZCB0aGVcbiAgICogcGFyc2VkIGlucHV0IGZyb20gdGhlIHRleHQgZmllbGQgd2lsbCBoYXZlIGEgZGlmZmVyZW50IG9yZGVyIHRoYW4gdGhlXG4gICAqIGRpc3BsYXllZCB3b3Jkcy4gVGhlIHJpZ2h0LXRvLWxlZnQgY2h1bmtzIGFyZSByZXZlcnNlZCBoZXJlLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdFtdfSB3b3JkcyBXb3JkcyBvYmplY3QuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB3b3JkLnNvbHV0aW9uIFdvcmQgdG8gdGVzdC5cbiAgICogQHJldHVybiB7b2JqZWN0W119IFJUTCB3b3JkcyByZW9yZGVyZWQuXG4gICAqL1xuICBzdGF0aWMgcmV2ZXJ0UlRMKHdvcmRzKSB7XG4gICAgbGV0IHJldmVyc2VkV29yZHMgPSBbXTtcbiAgICBsZXQgY3VycmVudFJUTCA9IFtdO1xuXG4gICAgLy8gUmV2ZXJzZSBSVEwgYmxvY2tzLCBrZWVwIExUUlxuICAgIHdvcmRzLmZvckVhY2god29yZCA9PiB7XG4gICAgICBjb25zdCBpc1JUTCA9IFV0aWwuY29udGFpbnNSVExDaGFyYWN0ZXJzKHdvcmQuc29sdXRpb24pO1xuICAgICAgaWYgKGlzUlRMKSB7XG4gICAgICAgIGN1cnJlbnRSVEwucHVzaCh3b3JkKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICByZXZlcnNlZFdvcmRzID0gcmV2ZXJzZWRXb3Jkcy5jb25jYXQoY3VycmVudFJUTC5yZXZlcnNlKCkpO1xuICAgICAgICBjdXJyZW50UlRMID0gW107XG4gICAgICAgIHJldmVyc2VkV29yZHMucHVzaCh3b3JkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoY3VycmVudFJUTC5sZW5ndGggIT09IDApIHtcbiAgICAgIHJldmVyc2VkV29yZHMgPSByZXZlcnNlZFdvcmRzLmNvbmNhdChjdXJyZW50UlRMLnJldmVyc2UoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJldmVyc2VkV29yZHM7XG4gIH1cblxuICAvKipcbiAgICogU3BsaXQgd29yZCBpbnRvIGFsdGVybmF0aXZlcyB1c2luZyB8IGJ1dCBub3QgXFx8IGFzIGRlbGltaXRlci5cbiAgICpcbiAgICogQ2FuIGJlIHJlcGxhY2VkIGJ5IHdvcmQuc3BsaXQoLyg/PCFcXFxcKVxcfC8pIGFzIHNvb24gYXMgbG9va2JlaGluZHMgaW5cbiAgICogcmVndWxhciBleHByZXNzaW9ucyBhcmUgY29tbW9ubHkgYXZhaWxhYmxlIGluIGJyb3dzZXJzIChtaW5kIElFMTEgdGhvdWdoKVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gd29yZCBXb3JkIHRvIGJlIHNwbGl0LlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBXb3JkIGFsdGVybmF0aXZlcy5cbiAgICovXG4gIHN0YXRpYyBzcGxpdFdvcmRBbHRlcm5hdGl2ZXMod29yZCkge1xuICAgIGNvbnN0IHdvcmRSZXZlcnNlZCA9IHdvcmQuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTtcbiAgICBjb25zdCBhbHRlcm5hdGl2ZXMgPSB3b3JkUmV2ZXJzZWQuc3BsaXQoL1xcfCg/IVxcXFwpLyk7XG4gICAgcmV0dXJuIGFsdGVybmF0aXZlc1xuICAgICAgLm1hcChhbHRlcm5hdGl2ZSA9PiBhbHRlcm5hdGl2ZS5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpLnJlcGxhY2UoJ1xcXFx8JywgJ3wnKSlcbiAgICAgIC5yZXZlcnNlKCk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgZm9yIHJpZ2h0LXRvLWxlZnQgY2hhcmFjdGVycy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0IElucHV0IHRvIGNoZWNrIGZvciByaWdodC10by1sZWZ0IGNoYXJhY3RlcnMuXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUsIGlmIGlucHV0IGNvbnRhaW5zIHJpZ2h0LXRvLWxlZnQgY2hhcmFjdGVycy5cbiAgICovXG4gIHN0YXRpYyBjb250YWluc1JUTENoYXJhY3RlcnMoaW5wdXQpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cCgnXlteJyArIFV0aWwuUlRMICsgJ10qP1snICsgVXRpbC5SVEwgKyAnXScpLnRlc3QoaW5wdXQpO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbWJpbmUgYWxsIHBvc3NpYmxlIGNvbWJpbmF0aW9ucyBvZiBzdHJpbmdzIGZyb20gdHdvIHNldHMuXG4gICAqXG4gICAqIFsnYScsICdiJywgJ2MnXSBhbmQgWydkJywgJ2UnXSBiZWNvbWUgWydhIGQnLCAnYSBlJywgJ2IgZCcsICdiIGUnLCAnYyBkJywgJ2MgZSddXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0W119IHdvcmRzMSBGaXJzdCBzZXQgb2Ygc3RyaW5ncy5cbiAgICogQHBhcmFtIHtvYmplY3RbXX0gd29yZHMyIFNlY29uZCBzZXQgb2Ygc3RyaW5ncy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IFtkZWxpbWl0ZXI9JyAnXSBEZWxpbWl0ZXIgYmV0d2VlbiBlYWNoIHN0cmluZy5cbiAgICovXG4gIHN0YXRpYyBidWlsZENvbWJpbmF0aW9ucyh3b3JkczEsIHdvcmRzMiwgZGVsaW1pdGVyID0gJyAnKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG5cbiAgICB3b3JkczEuZm9yRWFjaCh3b3JkMSA9PiB7XG4gICAgICByZXN1bHQucHVzaChcbiAgICAgICAgLi4ud29yZHMyLm1hcCh3b3JkMiA9PiAod29yZDIgPT09ICcnKSA/IHdvcmQxIDogYCR7d29yZDJ9JHtkZWxpbWl0ZXJ9JHt3b3JkMX1gKVxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogRm9ybWF0IGxhbmd1YWdlIHRhZyAoUkZDIDU2NDYpLiBBc3N1bWluZyBcImxhbmd1YWdlLWNvdXRyeVwiLiBObyB2YWxpZGF0aW9uLlxuICAgKiBDbXAuIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1NjQ2XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZVRhZyBMYW5ndWFnZSB0YWcuXG4gICAqIEByZXR1cm4ge3N0cmluZ30gRm9ybWF0dGVkIGxhbmd1YWdlIHRhZy5cbiAgICovXG4gIHN0YXRpYyBmb3JtYXRMYW5ndWFnZUNvZGUobGFuZ3VhZ2VDb2RlKSB7XG4gICAgaWYgKHR5cGVvZiBsYW5ndWFnZUNvZGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gbGFuZ3VhZ2VDb2RlO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogUkZDIDU2NDYgc3RhdGVzIHRoYXQgbGFuZ3VhZ2UgdGFncyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSwgYnV0XG4gICAgICogcmVjb21tZW5kYXRpb25zIG1heSBiZSBmb2xsb3dlZCB0byBpbXByb3ZlIGh1bWFuIGludGVycHJldGF0aW9uXG4gICAgICovXG4gICAgY29uc3Qgc2VnbWVudHMgPSBsYW5ndWFnZUNvZGUuc3BsaXQoJy0nKTtcbiAgICBzZWdtZW50c1swXSA9IHNlZ21lbnRzWzBdLnRvTG93ZXJDYXNlKCk7IC8vIElTTyA2MzkgcmVjb21tZW5kYXRpb25cbiAgICBpZiAoc2VnbWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgc2VnbWVudHNbMV0gPSBzZWdtZW50c1sxXS50b1VwcGVyQ2FzZSgpOyAvLyBJU08gMzE2Ni0xIHJlY29tbWVuZGF0aW9uXG4gICAgfVxuICAgIGxhbmd1YWdlQ29kZSA9IHNlZ21lbnRzLmpvaW4oJy0nKTtcblxuICAgIHJldHVybiBsYW5ndWFnZUNvZGU7XG4gIH1cblxuICAvKipcbiAgICogU2h1ZmZsZSBhcnJheS5cbiAgICogQHBhcmFtIHtvYmplY3RbXX0gYXJyYXkgQXJyYXkuXG4gICAqIEByZXR1cm4ge29iamVjdFtdfSBTaHVmZmxlZCBhcnJheS5cbiAgICovXG4gIHN0YXRpYyBzaHVmZmxlQXJyYXkoYXJyYXkpIHtcbiAgICBsZXQgaiwgeCwgaTtcbiAgICBmb3IgKGkgPSBhcnJheS5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XG4gICAgICBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICB4ID0gYXJyYXlbaV07XG4gICAgICBhcnJheVtpXSA9IGFycmF5W2pdO1xuICAgICAgYXJyYXlbal0gPSB4O1xuICAgIH1cblxuICAgIHJldHVybiBhcnJheTtcbiAgfSAgXG59XG5cbi8vIFJlZ3VsYXIgZXhwcmVzc2lvbiBjb25maWd1cmF0aW9uXG4vKiogQGNvbnN0YW50IHtzdHJpbmd9ICovXG5VdGlsLlJUTCA9ICdcXHUwNTkxLVxcdTA4RkYnO1xuXG5leHBvcnQgZGVmYXVsdCBVdGlsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dictation-util.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dictation.js":
/*!**************************************!*\
  !*** ./src/scripts/h5p-dictation.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _h5p_dictation_sentence__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dictation-sentence */ \"./src/scripts/h5p-dictation-sentence.js\");\n/* harmony import */ var _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h5p-dictation-util */ \"./src/scripts/h5p-dictation-util.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n/** Class for dictation interaction */\n\nvar Dictation = /*#__PURE__*/function (_H5P$Question) {\n  _inheritsLoose(Dictation, _H5P$Question);\n\n  /**\n   * @constructor\n   * @param {object} params Params from semantics.json.\n   * @param {string} contentId ContentId.\n   * @param {object} contentData contentData.\n   */\n  function Dictation(params, contentId, contentData) {\n    var _this;\n\n    _this = _H5P$Question.call(this, 'dictation') || this; // Add defaults\n\n    _this.params = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend({\n      media: {},\n      taskDescription: 'Please listen carefully and write what you hear.',\n      sentences: [],\n      behaviour: {\n        tries: Infinity,\n        triesAlternative: Infinity,\n        shuffleSentences: 'never',\n        scoring: {\n          ignorePunctuation: true,\n          zeroMistakeMode: false,\n          typoFactor: '100'\n        },\n        textual: {\n          wordSeparator: ' ',\n          overrideRTL: 'auto',\n          autosplit: true\n        },\n        feedbackPresentation: {\n          customTypoDisplay: false,\n          alternateSolution: 'first'\n        },\n        enableRetry: true,\n        // @see {@link https://h5p.org/documentation/developers/contracts#guides-header-9}\n        enableSolutionsButton: true,\n        // @see {@link https://h5p.org/documentation/developers/contracts#guides-header-8}\n        enableSolutionOnCheck: false\n      },\n      l10n: {\n        generalFeedback: 'You have made @total mistake(s).',\n        generalFeedbackZeroMistakesMode: 'You have entered @total word(s) correctly and @typo word(s) with minor mistakes.',\n        checkAnswer: 'Check',\n        tryAgain: 'Retry',\n        showSolution: 'Show solution',\n        audioNotSupported: 'Your browser does not support this audio.'\n      },\n      a11y: {\n        check: 'Check the answers. The responses will be marked as correct, incorrect, or unanswered.',\n        showSolution: 'Show the solution. The task will be marked with its correct solution.',\n        retry: 'Retry the task. Reset all responses and start the task over again.',\n        play: 'Play',\n        playSlowly: 'Play slowly',\n        triesLeft: 'Number of tries left: @number',\n        infinite: 'infinite',\n        enterText: 'Enter what you have heard.',\n        yourResult: 'You got @score out of @total points',\n        solution: 'Solution',\n        sentence: 'Sentence',\n        item: 'Item',\n        correct: 'correct',\n        wrong: 'wrong',\n        typo: 'small mistake',\n        missing: 'missing',\n        added: 'added',\n        shouldHaveBeen: 'Should have been',\n        or: 'or',\n        point: 'point',\n        points: 'points',\n        period: 'period',\n        exclamationPoint: 'exclamation point',\n        questionMark: 'question mark',\n        comma: 'comma',\n        singleQuote: 'single quote',\n        doubleQuote: 'double quote',\n        colon: 'colon',\n        semicolon: 'semicolon',\n        plus: 'plus',\n        minus: 'minus',\n        asterisk: 'asterisk',\n        forwardSlash: 'forward slash'\n      }\n    }, params);\n    var defaultLanguage = contentData && contentData.metadata ? contentData.metadata.defaultLanguage || 'en' : 'en';\n    _this.languageTag = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__[\"default\"].formatLanguageCode(defaultLanguage); // Initialize\n\n    if (!params) {\n      return _assertThisInitialized(_this);\n    }\n\n    _this.contentId = contentId;\n    _this.contentData = contentData || {};\n    _this.contextId = 0; // Best guess, no interaction.\n\n    _this.sentences = [];\n    /*\n     * IE11 doesn't support wavs. Remove samples. Generic checking when audios\n     * are created would make code way more complicated given how it's written.\n     */\n\n    if (!!window.MSInputMethodContext && !!document.documentMode) {\n      _this.params.sentences.forEach(function (sentence, index) {\n        if (sentence.sample && sentence.sample[0].mime === 'audio/x-wav') {\n          console.warn(\"\".concat(_this.params.a11y.sentence, \" \").concat(index + 1, \": \").concat(_this.params.l10n.audioNotSupported));\n          delete sentence.sample;\n        }\n\n        if (sentence.sampleAlternative && sentence.sampleAlternative[0].mime === 'audio/x-wav') {\n          console.warn(\"\".concat(_this.params.a11y.sentence, \" \").concat(index + 1, \": \").concat(_this.params.l10n.audioNotSupported));\n          delete sentence.sampleAlternative;\n        }\n      });\n    } // Relevant for building the DOM later (play slowly button)\n\n\n    var hasAlternatives = _this.params.sentences.some(function (sentence) {\n      return sentence.sampleAlternative !== undefined;\n    }); // Proper format for percentage\n\n\n    _this.params.behaviour.scoring.typoFactor = parseInt(_this.params.behaviour.scoring.typoFactor) / 100; // Strip incomplete sentences\n\n    _this.params.sentences = _this.params.sentences.filter(function (sentence) {\n      return sentence.text !== undefined && sentence.sample !== undefined;\n    }); // Set previousState to empty defaults\n\n    _this.previousSentenceStates = _toConsumableArray(Array(_this.params.sentences.length)); // Retrieve previousState\n\n    if (_this.contentData.previousState && Array.isArray(_this.contentData.previousState)) {\n      _this.contentData.previousState.forEach(function (state, index) {\n        if (_this.previousSentenceStates.length > index) {\n          var _state$index;\n\n          state.index = (_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : index; // Accept previous states from former versions\n\n          _this.previousSentenceStates[index] = state;\n        }\n      });\n    } // Create sentence instances\n\n\n    _this.params.sentences = _this.params.sentences.forEach(function (sentence, index) {\n      _this.sentences.push(new _h5p_dictation_sentence__WEBPACK_IMPORTED_MODULE_0__[\"default\"](index, {\n        sentence: sentence,\n        audioNotSupported: _this.params.l10n.audioNotSupported,\n        tries: _this.params.behaviour.tries,\n        triesAlternative: _this.params.behaviour.triesAlternative,\n        ignorePunctuation: _this.params.behaviour.scoring.ignorePunctuation,\n        hasAlternatives: hasAlternatives,\n        a11y: _this.params.a11y,\n        customTypoDisplay: _this.params.behaviour.feedbackPresentation.customTypoDisplay,\n        zeroMistakeMode: _this.params.behaviour.scoring.zeroMistakeMode,\n        typoFactor: _this.params.behaviour.scoring.typoFactor,\n        alternateSolution: _this.params.behaviour.feedbackPresentation.alternateSolution,\n        overrideRTL: _this.params.behaviour.textual.overrideRTL,\n        autosplit: _this.params.behaviour.textual.autosplit,\n        wordSeparator: _this.params.behaviour.textual.wordSeparator,\n        callbacks: {\n          playAudio: function playAudio(button) {\n            _this.handlePlayAudio(button);\n          },\n          onInteracted: function onInteracted() {\n            _this.handleInteracted();\n          },\n          onContextChanged: function onContextChanged(index) {\n            _this.handleContextChanged(index);\n          },\n          resize: function resize() {\n            _this.trigger('resize');\n          }\n        }\n      }, _this.contentId, _this.previousSentenceStates.filter(function (state) {\n        return (state === null || state === void 0 ? void 0 : state.index) === index;\n      }).shift()));\n    }); // Maximum number of possible mistakes for all sentences\n\n    _this.maxMistakes = _this.sentences.map(function (sentence) {\n      return sentence.getMaxMistakes();\n    }).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n    _this.mistakesCapped = 0;\n    _this.isAnswered = false;\n    /**\n     * Register the DOM elements with H5P.Question.\n     */\n\n    _this.registerDomElements = function () {\n      // Set optional media\n      var media = _this.params.media.type;\n\n      if (media && media.library) {\n        var type = media.library.split(' ')[0]; // Image\n\n        if (type === 'H5P.Image') {\n          if (media.params.file) {\n            _this.setImage(media.params.file.path, {\n              disableImageZooming: _this.params.media.disableImageZooming,\n              alt: media.params.alt,\n              title: media.params.title\n            });\n          }\n        } // Video\n        else if (type === 'H5P.Video') {\n          if (media.params.sources) {\n            _this.setVideo(media);\n          }\n        }\n      } // Register task introduction text\n\n\n      if (_this.params.taskDescription) {\n        _this.introduction = document.createElement('div');\n        _this.introduction.innerHTML = _this.params.taskDescription;\n\n        _this.setIntroduction(_this.introduction);\n      } // Build content\n\n\n      _this.content = document.createElement('div');\n\n      _this.content.classList.add('h5p-dictation-sentences'); // Rebuild old order or shuffle sentences if required\n\n\n      if (_this.contentData.previousState) {\n        var oldOrder = _this.previousSentenceStates.reduce(function (result, current, index) {\n          return [].concat(_toConsumableArray(result), [current ? current === null || current === void 0 ? void 0 : current.index : index]);\n        }, []);\n\n        _this.reorderSentences(oldOrder);\n      } else {\n        if (_this.params.behaviour.shuffleSentences !== 'never') {\n          _this.shuffleSentences();\n        }\n      } // Add sentences\n\n\n      _this.addSentences(); // Register content\n\n\n      _this.setContent(_this.content);\n\n      if (_this.sentences.length !== 0) {\n        // Register Buttons\n        _this.addButtons();\n      }\n    };\n    /**\n     * Add all the buttons that shall be passed to H5P.Question\n     */\n\n\n    _this.addButtons = function () {\n      // Show solution button\n      _this.addButton('show-solution', _this.params.l10n.showSolution, function () {\n        _this.showSolutions();\n\n        _this.hideButton('show-solution');\n      }, false, {\n        'aria-label': _this.params.a11y.showSolution\n      }, {}); // Check answer button\n\n\n      _this.addButton('check-answer', _this.params.l10n.checkAnswer, function () {\n        _this.showEvaluation();\n\n        _this.isAnswered = true; // Emit screenshot\n\n        setTimeout(function () {\n          if (H5P && H5P.KLScreenshot) {\n            H5P.KLScreenshot.takeScreenshot(_assertThisInitialized(_this), _this.content.closest('.h5p-container'));\n          }\n        }, 500); // Give result time to appear\n\n        _this.triggerXAPIAnswered();\n\n        if (_this.params.behaviour.enableRetry && !_this.isPassed()) {\n          _this.showButton('try-again');\n        }\n      }, true, {\n        'aria-label': _this.params.a11y.check\n      }, {}); // Retry button\n\n\n      _this.addButton('try-again', _this.params.l10n.tryAgain, function () {\n        _this.resetTask();\n\n        _this.sentences[0].focus();\n      }, false, {\n        'aria-label': _this.params.a11y.retry\n      }, {});\n    };\n    /**\n     * Add sentences to DOM.\n     */\n\n\n    _this.addSentences = function () {\n      // Clean previous sentences\n      _this.content.innerHTML = '';\n\n      if (_this.sentences.length === 0) {\n        // No content was given\n        var message = document.createElement('div');\n        message.classList.add('h5p-dictation-no-content');\n        message.innerHTML = 'I really need at least one sound sample and text for it :-)';\n\n        _this.content.appendChild(message);\n      } else {\n        // Sentences\n        _this.sentences.forEach(function (sentence) {\n          _this.content.appendChild(sentence.getDOM());\n        });\n      }\n    };\n    /**\n     * Shuffle sentences.\n     */\n\n\n    _this.shuffleSentences = function () {\n      _this.sentences = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shuffleArray(_this.sentences);\n\n      _this.sentences.forEach(function (sentence, index) {\n        sentence.setPosition(index + 1);\n      });\n    };\n    /**\n     * Reorder sentences.\n     * @param {number[]} order Order.\n     */\n\n\n    _this.reorderSentences = function (order) {\n      var reorderedSentences = [];\n\n      for (var i = 0; i < order.length; i++) {\n        reorderedSentences.push(_this.sentences[order[i]]);\n      }\n\n      _this.sentences = reorderedSentences;\n    };\n    /**\n     * Handle playing audio.\n     * @param {Button} button Calling button.\n     */\n\n\n    _this.handlePlayAudio = function (button) {\n      _this.sentences.forEach(function (sentence) {\n        sentence.pauseButtons(button);\n      });\n    };\n    /**\n     * Handle user interacted\n     */\n\n\n    _this.handleInteracted = function () {\n      _this.triggerXAPI('interacted');\n    };\n    /**\n     * Handle context changed.\n     */\n\n\n    _this.handleContextChanged = function (contextId) {\n      _this.contextId = contextId;\n    };\n    /**\n     * Show the evaluation for the input in the text input fields.\n     */\n\n\n    _this.showEvaluation = function () {\n      // Update buttons\n      _this.hideButton('check-answer');\n\n      if (_this.params.behaviour.enableSolutionsButton && !_this.params.behaviour.enableSolutionOnCheck) {\n        _this.showButton('show-solution');\n      }\n\n      _this.computedResults = _this.sentences.map(function (sentence) {\n        return sentence.computeResults();\n      });\n\n      _this.sentences.forEach(function (sentence) {\n        sentence.disable();\n      }); // Sum up the scores of all sentences\n\n\n      var scoreTotal = _this.computedResults.map(function (result) {\n        return result.score;\n      }).reduce(function (a, b) {\n        return {\n          added: a.added + b.added,\n          missing: a.missing + b.missing,\n          typo: a.typo + b.typo,\n          wrong: a.wrong + b.wrong,\n          match: a.match + b.match\n        };\n      }, {\n        added: 0,\n        missing: 0,\n        typo: 0,\n        wrong: 0,\n        match: 0\n      }); // Prepare output\n\n\n      var mistakesTotal = scoreTotal.added + scoreTotal.missing + scoreTotal.wrong + scoreTotal.typo * _this.params.behaviour.scoring.typoFactor; // Number of mistakes shall not be higher than number of words.\n\n      _this.mistakesCapped = Math.min(mistakesTotal, _this.maxMistakes);\n      _this.correctTotal = scoreTotal.match + scoreTotal.typo * (1 - _this.params.behaviour.scoring.typoFactor);\n      var generalFeedback;\n\n      if (_this.params.behaviour.scoring.zeroMistakeMode) {\n        generalFeedback = (_this.params.l10n.generalFeedbackZeroMistakesMode || '').replace('@added', scoreTotal.added).replace('@missing', scoreTotal.missing).replace('@wrong', scoreTotal.wrong).replace('@typo', scoreTotal.typo).replace('@matches', scoreTotal.match).replace('@total', scoreTotal.match);\n      } else {\n        generalFeedback = (_this.params.l10n.generalFeedback || '').replace('@added', scoreTotal.added).replace('@missing', scoreTotal.missing).replace('@wrong', scoreTotal.wrong).replace('@typo', scoreTotal.typo).replace('@matches', scoreTotal.match).replace('@total', mistakesTotal).replace('@capped', _this.mistakesCapped);\n      }\n\n      var textScore = H5P.Question.determineOverallFeedback(_this.params.overallFeedback, _this.getScore() / _this.getMaxScore()); // H5P.Question expects ':num' and ':total'\n\n      var ariaMessage = _this.params.a11y.yourResult.replace('@score', ':num').replace('@total', ':total');\n\n      _this.setFeedback(\"\".concat(generalFeedback, \" \").concat(textScore).trim(), _this.getScore(), _this.getMaxScore(), ariaMessage);\n\n      if (_this.params.behaviour.enableSolutionOnCheck) {\n        _this.showSolutions();\n      }\n\n      _this.trigger('resize');\n    };\n    /**\n     * Determine whether the task has been passed by the user.\n     * @return {boolean} True if user passed or task is not scored.\n     */\n\n\n    _this.isPassed = function () {\n      return _this.mistakesCapped === 0;\n    };\n    /**\n     * Check if Dictation has been submitted or input has been given.\n     * @return {boolean} True, if answer was given.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-1}\n     */\n\n\n    _this.getAnswerGiven = function () {\n      return _this.isAnswered || _this.sentences.some(function (sentence) {\n        return sentence.getUserInput().length > 0;\n      });\n    };\n    /**\n     * Get latest score.\n     * @return {number} latest score.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-2}\n     */\n\n\n    _this.getScore = function () {\n      return _this.params.behaviour.scoring.zeroMistakeMode ? Math.round(_this.correctTotal) : Math.round(_this.maxMistakes - _this.mistakesCapped);\n    };\n    /**\n     * Get maximum possible score.\n     * @return {number} Score necessary for mastering.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-3}\n     */\n\n\n    _this.getMaxScore = function () {\n      return _this.maxMistakes;\n    };\n    /**\n     * Show solutions for all sentences.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-4}\n     */\n\n\n    _this.showSolutions = function () {\n      _this.sentences.forEach(function (sentence, index) {\n        sentence.showSolution(_this.computedResults[index]);\n      }); // Focus first solution\n\n\n      _this.sentences[0].focusSolution();\n\n      _this.trigger('resize');\n    };\n    /**\n     * Reset task.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-5}\n     */\n\n\n    _this.resetTask = function () {\n      // Shuffle sentences if they should be\n      if (_this.params.behaviour.shuffleSentences === 'onRetry') {\n        _this.shuffleSentences();\n\n        _this.addSentences();\n      }\n\n      _this.sentences.forEach(function (sentence) {\n        sentence.reset();\n        sentence.enable();\n        sentence.hideSolution();\n      });\n\n      _this.removeFeedback();\n\n      _this.hideButton('try-again');\n\n      _this.hideButton('show-solution');\n\n      _this.showButton('check-answer');\n\n      if (_this.introduction) {\n        _this.introduction.focus();\n      } else {\n        _this.sentences[0].focus();\n      }\n\n      _this.mistakesCapped = 0;\n      _this.isAnswered = false;\n    };\n    /**\n     * Get xAPI data.\n     * @return {object} XAPI statement.\n     * @see contract at {@link https://h5p.org/documentation/developers/contracts#guides-header-6}\n     */\n\n\n    _this.getXAPIData = function () {\n      return {\n        statement: _this.getXAPIAnswerEvent().data.statement\n      };\n    };\n    /**\n     * Trigger all necessary xAPI events after evaluation. Might become more.\n     */\n\n\n    _this.triggerXAPIAnswered = function () {\n      _this.trigger(_this.getXAPIAnswerEvent());\n    };\n    /**\n     * Build xAPI answer event.\n     * @return {H5P.XAPIEvent} XAPI answer event.\n     */\n\n\n    _this.getXAPIAnswerEvent = function () {\n      _this.computedResults = _this.sentences.map(function (sentence) {\n        return sentence.computeResults();\n      });\n\n      var xAPIEvent = _this.createDictationXAPIEvent('answered'); // Set reporting module version if alternative extension is used\n\n\n      var definition = xAPIEvent.getVerifiedStatementValue(['object', 'definition']);\n\n      if (definition.extensions && definition.extensions[Dictation.XAPI_ALTERNATIVE_EXTENSION]) {\n        var context = xAPIEvent.getVerifiedStatementValue(['context']);\n        context.extensions = context.extensions || {};\n        context.extensions[Dictation.XAPI_REPORTING_VERSION_EXTENSION] = Dictation.XAPI_REPORTING_VERSION;\n      }\n\n      xAPIEvent.setScoredResult(_this.getScore(), _this.getMaxScore(), _assertThisInitialized(_this), true, _this.isPassed());\n\n      var response = _this.computedResults.reduce(function (gaps, sentence) {\n        return gaps.concat(sentence.words.reduce(function (answers, word) {\n          return answers.concat(word.answer || '');\n        }, []));\n      }, []).join('[,]'); // Concatenate input from sentences\n\n\n      xAPIEvent.data.statement.result.response = response;\n      return xAPIEvent;\n    };\n    /**\n     * Create an xAPI event for Dictation.\n     * @param {string} verb Short id of the verb we want to trigger.\n     * @return {H5P.XAPIEvent} Event template.\n     */\n\n\n    _this.createDictationXAPIEvent = function (verb) {\n      var xAPIEvent = _this.createXAPIEventTemplate(verb);\n\n      _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(xAPIEvent.getVerifiedStatementValue(['object', 'definition']), _this.getxAPIDefinition());\n      return xAPIEvent;\n    };\n    /**\n     * Get the xAPI definition for the xAPI object.\n     * @return {object} XAPI definition.\n     */\n\n\n    _this.getxAPIDefinition = function () {\n      // We need to build the placeholders dynamically based on user input\n      var placeholders = _this.computedResults.reduce(function (placeholder, result, index) {\n        var description = _this.sentences[index].getXAPIDescription();\n\n        var sentence = result.words.map(function () {\n          return Dictation.FILL_IN_PLACEHOLDER;\n        }).join(' '); // TODO: Use pattern to put punctuation right\n\n        return \"\".concat(placeholder).concat(description, \"<p>\").concat(sentence, \"</p>\");\n      }, '');\n\n      var definition = {};\n      definition.name = {};\n      definition.name[_this.languageTag] = _this.getTitle(); // Fallback for h5p-php-reporting, expects en-US\n\n      definition.name['en-US'] = definition.name[_this.languageTag];\n      definition.description = {};\n      definition.description[_this.languageTag] = \"\".concat(_this.getDescription()).concat(placeholders); // Fallback for h5p-php-reporting, expects en-US\n\n      definition.description['en-US'] = definition.description[_this.languageTag];\n      definition.type = 'http://adlnet.gov/expapi/activities/cmi.interaction';\n      definition.interactionType = 'fill-in'; // Use extension to avoid exponentially growing solution space\n\n      definition.extensions = definition.extensions || {};\n      definition.extensions[Dictation.XAPI_CASE_SENSITIVITY] = true;\n\n      var gapVariations = _this.buildCorrectGapVariations();\n\n      definition.extensions[Dictation.XAPI_ALTERNATIVE_EXTENSION] = gapVariations; // Fallback CRP with only first gap variation\n\n      definition.correctResponsesPattern = _this.buildxAPICRP(gapVariations.slice());\n      return definition;\n    };\n    /**\n     * Build all correct gap variations.\n     * @return {object[]} Correct gap variations.\n     */\n\n\n    _this.buildCorrectGapVariations = function () {\n      return _this.computedResults.reduce(function (gaps, sentence) {\n        return gaps.concat(sentence.words.map(function (word) {\n          return word.solution ? word.solution.split('|') : [];\n        }));\n      }, []);\n    };\n    /**\n     * Build correct responses pattern from gaps.\n     *\n     * This may not be completely true, because we can't sensibly compile all\n     * possible answers for a sentence if we accept small mistakes.\n     *\n     * @param {object[]} gapsVariations Sentences gaps.\n     * @param {boolean} [complete=false] If true, will build complete CRP.\n     * @return {object[]} Correct responses pattern.\n     */\n\n\n    _this.buildxAPICRP = function (gapsVariations) {\n      var complete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var crp = [''];\n\n      if (!gapsVariations) {\n        return crp;\n      }\n\n      if (!complete) {\n        crp = gapsVariations.map(function (sentences) {\n          return sentences[0];\n        }).join('[,]');\n        crp = [\"{case_matters=true}\".concat(crp)];\n      } else {\n        gapsVariations.forEach(function (sentences) {\n          crp = _h5p_dictation_util__WEBPACK_IMPORTED_MODULE_1__[\"default\"].buildCombinations(sentences, crp, '[,]');\n        });\n        crp = crp.map(function (response) {\n          return \"{case_matters=true}\".concat(response);\n        });\n      }\n\n      return crp;\n    };\n    /**\n     * Get current state.\n     * @return {Object} Current state.\n     */\n\n\n    _this.getCurrentState = function () {\n      return _this.sentences.map(function (sentence) {\n        return sentence.getCurrentState();\n      });\n    };\n    /**\n     * Get context data.\n     * Contract used for confusion report.\n     * @return {object} Context data.\n     */\n\n\n    _this.getContext = function () {\n      return {\n        type: 'sentence',\n        value: _this.contextId + 1\n      };\n    };\n    /**\n     * Get tasks title.\n     * @return {string} Title.\n     */\n\n\n    _this.getTitle = function () {\n      var raw;\n\n      if (_this.contentData && _this.contentData.metadata) {\n        raw = _this.contentData.metadata.title;\n      }\n\n      raw = raw || Dictation.DEFAULT_DESCRIPTION;\n      return H5P.createTitle(raw);\n    };\n    /**\n     * Get tasks description.\n     * @return {string} Description.\n     */\n\n\n    _this.getDescription = function () {\n      return _this.params.taskDescription || Dictation.DEFAULT_DESCRIPTION;\n    };\n\n    return _this;\n  }\n\n  return Dictation;\n}(H5P.Question);\n/** @constant {string} */\n\n\nDictation.DEFAULT_DESCRIPTION = 'Dictation';\n/** @constant {string} */\n\nDictation.XAPI_ALTERNATIVE_EXTENSION = 'https://h5p.org/x-api/alternatives';\n/** @constant {string} */\n\nDictation.XAPI_CASE_SENSITIVITY = 'https://h5p.org/x-api/case-sensitivity';\n/** @constant {string} */\n\nDictation.XAPI_REPORTING_VERSION_EXTENSION = 'https://h5p.org/x-api/h5p-reporting-version';\n/** @constant {string} */\n\nDictation.XAPI_REPORTING_VERSION = '1.0.0';\n/** @constant {string}\n * Required to be added to xAPI object description for H5P reporting\n */\n\nDictation.FILL_IN_PLACEHOLDER = '__________';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dictation);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dictation.js\n");

/***/ }),

/***/ "./src/styles/h5p-dictation.css":
/*!**************************************!*\
  !*** ./src/styles/h5p-dictation.css ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2g1cC1kaWN0YXRpb24uY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2g1cC1kaWN0YXRpb24vLi9zcmMvc3R5bGVzL2g1cC1kaWN0YXRpb24uY3NzPzAzYjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/h5p-dictation.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/entries/h5p-dictation.js");
/******/ 	
/******/ })()
;