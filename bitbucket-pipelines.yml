definitions:
  services:
    docker:
      memory: 4096
  caches:
    nodemodules: ./node_modules
  steps:
    - step: &commitlint-check
        name: 'üìù Conventional Commits check'
        image: node:lts
        script:
          - /bin/bash commitlint-pipeline-check.sh
    - step: &fetch-npm-dependencies
        name: "‚ö° Fetch NPM dependencies"
        image: node:lts
        script:
          - npm i
        artifacts:
          - node_modules/**/*
    - step: &alpha-slack-notification
        name: üîî Slack Notification
        script:
          - pipe: docker://cabauman/slack-notify-commits:0.5.0
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: 'üöÄ A new build of H5P has been deployed to *alpha*.'
              BITBUCKET_USER: $BITBUCKET_PIPELINE_READER_USER
              BITBUCKET_APP_PASSWORD: $BITBUCKET_PIPELINE_READER_APP_PASSWORD
    - step: &prod-slack-notification
        name: üîî Slack Notification
        script:
          - pipe: docker://cabauman/slack-notify-commits:0.5.0
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: 'üöÄ A new *production* build of H5P has been pushed to ECR.'
              BITBUCKET_USER: $BITBUCKET_PIPELINE_READER_USER
              BITBUCKET_APP_PASSWORD: $BITBUCKET_PIPELINE_READER_APP_PASSWORD

  script: &build-and-push-to-aws
    - ls -la
    - pip3 install -U awscli

    - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g')
    - export REPO=$DOCKER_REPO_URL/kidsloop-h5p-service      # DOCKER_REPO_URL is workspace wide variable
    - docker build --build-arg SSH_PRIVATE_KEY="$(cat /opt/atlassian/pipelines/agent/ssh/id_rsa)" -t kidsloop-h5p-service .

    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL

    - docker tag kidsloop-h5p-service:latest $REPO:$BRANCH_TAG
    - docker tag kidsloop-h5p-service:latest $REPO:$BRANCH_TAG-latest
    - docker tag kidsloop-h5p-service:latest $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
    - docker tag kidsloop-h5p-service:latest $REPO:$BRANCH_TAG-${BITBUCKET_COMMIT:0:7}
    - docker push $REPO:$BRANCH_TAG
    - docker push $REPO:$BRANCH_TAG-latest
    - docker push $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
    - docker push $REPO:$BRANCH_TAG-${BITBUCKET_COMMIT:0:7}

options:
  docker: true
  size: 2x

pipelines:
  pull-requests:
    '**': # This runs as default for any branch not elsewhere defined.:
      - step: *fetch-npm-dependencies
      - step: *commitlint-check
  branches:
    alpha:
      - step:
          name: Atlassian Security Secrets Scan
          script:
            - pipe: atlassian/git-secrets-scan:0.5.1
      - step: *fetch-npm-dependencies
      - step:
          name: "Push docker image to AWS"
          deployment: alpha
          image: python:3.9-alpine
          services:
            - docker
          size: 2x
          caches:
            - docker
          script: *build-and-push-to-aws
      - step:
          name: "Deploy"
          image: python:3.9-alpine
          script:
            - ls -la
            - pip3 install -U awscli
            - pipe: atlassian/aws-ecs-deploy:1.6.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_ALPHA_OLD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_ALPHA_OLD
                AWS_DEFAULT_REGION: 'ap-northeast-2'
                CLUSTER_NAME: 'kidsloop-alpha'
                SERVICE_NAME: 'kidsloop-alpha-h5p'
                FORCE_NEW_DEPLOYMENT: 'true'
                WAIT: 'true'
            - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_ALPHA_OLD" AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_ALPHA_OLD"
            - aws cloudfront create-invalidation --distribution-id "E2RNE9HGMPLWTO" --paths "/h5p/libraries/*" "/h5p/play/*" # h5p.alpha.kidsloop.net
            - aws cloudfront create-invalidation --distribution-id "E2694SIA1FLALO" --paths "/h5p/libraries/*" "/h5p/play/*" # live.alpha.kidsloop.net
      - step: *alpha-slack-notification
    production:
      - step:
          name: Atlassian Security Secrets Scan
          script:
            - pipe: atlassian/git-secrets-scan:0.5.1
      - step: *fetch-npm-dependencies
      - step:
          name: "Push docker image to AWS"
          deployment: production
          image: python:3.9-alpine
          script: *build-and-push-to-aws
          services:
            - docker
          size: 2x
          caches:
            - docker
      - step: *prod-slack-notification
