name: Create Release

on:
  push:
    branches: [ main ]

jobs:
  npm-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm
          registry-url: https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Find node_modules cache
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: |
          git config --global url."https://${{ secrets.PAT }}@github.com/".insteadOf ssh://git@github.com/
          npm ci
          npm test

  create-release:
    needs: [npm-ci]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm
          registry-url: https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Find node_modules cache
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Set up git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Version bump
        id: version-bump
        run: |
          npm run release
          npm run build
          npm prune --production
          export VERSION_TAG=$(git describe --tags --abbrev=0)
          echo "::set-output name=VERSION_TAG::$VERSION_TAG"

      - name: Configure eu-west-2 AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kidsloop-h5p-service
        run: |
          export BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          export COMMIT_TAG=${GITHUB_SHA::7}
          docker build -t $ECR_REPOSITORY .
          docker run -d --name=check-startup \
            $ECR_REPOSITORY && sleep 5 && docker logs check-startup && docker top check-startup
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG-$COMMIT_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG-$COMMIT_TAG

      - name: Commit changes
        env:
          VERSION_TAG: ${{ steps.version-bump.outputs.VERSION_TAG }}
        run: |
          git push origin $VERSION_TAG
          git push origin main
