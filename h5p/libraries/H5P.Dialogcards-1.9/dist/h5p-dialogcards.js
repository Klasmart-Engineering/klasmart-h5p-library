/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/entries/h5p-dialogcards.js":
/*!****************************************!*\
  !*** ./src/entries/h5p-dialogcards.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_h5p_dialogcards_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/h5p-dialogcards.css */ \"./src/styles/h5p-dialogcards.css\");\n/* harmony import */ var _scripts_h5p_dialogcards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scripts/h5p-dialogcards.js */ \"./src/scripts/h5p-dialogcards.js\");\n\n // Load library\n// H5P = H5P || {};\n\nH5P.Dialogcards = _scripts_h5p_dialogcards_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW50cmllcy9oNXAtZGlhbG9nY2FyZHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUdBOztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaDVwLWRpYWxvZ2NhcmRzLy4vc3JjL2VudHJpZXMvaDVwLWRpYWxvZ2NhcmRzLmpzPzRmNWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vc3R5bGVzL2g1cC1kaWFsb2djYXJkcy5jc3NcIjtcbmltcG9ydCBEaWFsb2djYXJkcyBmcm9tIFwiLi4vc2NyaXB0cy9oNXAtZGlhbG9nY2FyZHMuanNcIjtcblxuLy8gTG9hZCBsaWJyYXJ5XG4vLyBINVAgPSBINVAgfHwge307XG5INVAuRGlhbG9nY2FyZHMgPSBEaWFsb2djYXJkcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/entries/h5p-dialogcards.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards-card-manager.js":
/*!*****************************************************!*\
  !*** ./src/scripts/h5p-dialogcards-card-manager.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _h5p_dialogcards_card_pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dialogcards-card-pool */ \"./src/scripts/h5p-dialogcards-card-pool.js\");\n/* harmony import */ var _h5p_dialogcards_card_pile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h5p-dialogcards-card-pile */ \"./src/scripts/h5p-dialogcards-card-pile.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar CardManager = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   *\n   * @param {object} params Parameters from content type.\n   * @param {number} contentId Id of content.\n   * @param {object} callbacks Callbacks to parent.\n   */\n  function CardManager(params, contentId, callbacks) {\n    this.params = params;\n    this.cardPool = new _h5p_dialogcards_card_pool__WEBPACK_IMPORTED_MODULE_0__[\"default\"](params, contentId, callbacks);\n    this.reset(params.cardPiles);\n    return this;\n  }\n  /**\n   * Create a selection of card ids depending on mode.\n   *\n   * @return {object[]} Selection of card ids.\n   */\n\n\n  var _proto = CardManager.prototype;\n\n  _proto.createSelection = function createSelection() {\n    var selectionIds = [];\n\n    switch (this.params.mode) {\n      case 'repetition':\n        // Repetition mode\n        selectionIds = this.createSelectionRepetition();\n        break;\n\n      default:\n        // Normal mode\n        selectionIds = this.cardPool.getCardIds();\n    }\n\n    return selectionIds;\n  }\n  /**\n   * Create card piles depending on mode.\n   * @param {object} [cardPiles] Piles to set (from previous state).\n   */\n  ;\n\n  _proto.createPiles = function createPiles(cardPiles) {\n    if (cardPiles) {\n      this.cardPiles = cardPiles.map(function (cardPile) {\n        return new _h5p_dialogcards_card_pile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](cardPile.cards);\n      });\n      return;\n    }\n\n    this.cardPiles = [];\n    var pool = this.cardPool.getCardIds();\n\n    switch (this.params.mode) {\n      case 'repetition':\n        // Repetition mode\n        for (var i = 0; i < this.params.behaviour.maxProficiency; i++) {\n          if (i === 0) {\n            this.cardPiles.push(new _h5p_dialogcards_card_pile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](pool));\n          } else {\n            this.cardPiles.push(new _h5p_dialogcards_card_pile__WEBPACK_IMPORTED_MODULE_1__[\"default\"]());\n          }\n        }\n\n        break;\n\n      case 'normal':\n        // Normal mode. One pile only with all cards\n        this.cardPiles.push(new _h5p_dialogcards_card_pile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](pool));\n    }\n  }\n  /**\n   * Update piles.\n   *\n   * Just one \"rule\" for now. Could be amended with more modes.\n   *\n   * @param {object[]} results Results.\n   * @param {number} results.cardId Card that result is reported for.\n   * @param {boolean} results.result Result for that card.\n   * @return {number[]} Card pile sizes.\n   */\n  ;\n\n  _proto.updatePiles = function updatePiles(results) {\n    var _this = this;\n\n    results.forEach(function (result) {\n      // Find card in pile\n      var pileId = _this.find(result.cardId);\n\n      if (pileId === -1) {\n        return;\n      } // Move card to next pile or first pile\n\n\n      var newPileId = result.result === true ? pileId + 1 : 0;\n      newPileId = Math.max(0, Math.min(newPileId, _this.cardPiles.length - 1));\n\n      _this.cardPiles[pileId].remove(result.cardId);\n\n      _this.cardPiles[newPileId].add(result.cardId, 'bottom');\n    });\n    return this.getPileSizes();\n  }\n  /**\n   * Create card selection for repetition mode.\n   *\n   * Draw all cards from first pile with cards, 1/2 of next, 1/3 of next, ...\n   * Don't draw cards from last pile\n   * Get cards from top - will be moved at the bottom of other pile according to results (LIFO)\n   *\n   * @return {object[]} Ids of selected cards from pool.\n   */\n  ;\n\n  _proto.createSelectionRepetition = function createSelectionRepetition() {\n    var selectionIds = [];\n    var firstPileWithCards = null;\n\n    for (var j = 0; j < this.cardPiles.length - 1; j++) {\n      var _selectionIds;\n\n      var pileAmount = this.cardPiles[j].length(); // Skip empty piles\n\n      if (firstPileWithCards === null && pileAmount === 0) {\n        continue;\n      } // Remember first pile with cards\n\n\n      if (firstPileWithCards === null) {\n        firstPileWithCards = j;\n      } // Draw cards favoring those of piles with low id\n\n\n      var drawAmount = Math.ceil(pileAmount * 1 / (1 + j - firstPileWithCards));\n      var cardsDrawn = this.cardPiles[j].peek(0, drawAmount);\n      selectionIds = (_selectionIds = selectionIds).concat.apply(_selectionIds, _toConsumableArray(cardsDrawn));\n    } // Shuffle selection\n\n\n    selectionIds = this.shuffle(selectionIds);\n    return selectionIds;\n  }\n  /**\n   * Shuffle items (not in place).\n   *\n   * @param {object[]} items Items.\n   * @return {object[]} Shuffled items.\n   */\n  ;\n\n  _proto.shuffle = function shuffle(items) {\n    var copies = items.slice();\n\n    for (var i = copies.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [copies[j], copies[i]];\n      copies[i] = _ref[0];\n      copies[j] = _ref[1];\n    }\n\n    return copies;\n  }\n  /**\n   * Find id of pile that contains card with particular id.\n   *\n   * @param {number} id Id of card to be found.\n   * @return {number} Id of pile or -1.\n   */\n  ;\n\n  _proto.find = function find(id) {\n    var found = -1;\n    this.cardPiles.forEach(function (cardPile, index) {\n      if (found !== -1) {\n        return found;\n      }\n\n      if (cardPile.contains(id)) {\n        found = index;\n      }\n    });\n    return found;\n  }\n  /**\n   * Reset Card Manager.\n   * @param {object} [cardPiles] Piles to set (from previous state).\n   */\n  ;\n\n  _proto.reset = function reset(cardPiles) {\n    this.createPiles(cardPiles);\n  }\n  /**\n   * Retrieve card from pool. Will be loaded on call.\n   *\n   * @param {number} id Id of card to be retrieved.\n   */\n  ;\n\n  _proto.getCard = function getCard(id) {\n    return this.cardPool.getCard(id);\n  }\n  /**\n   * Retrieve the total number of cards available.\n   * @return {number} Total number of cards available.\n   */\n  ;\n\n  _proto.getSize = function getSize() {\n    return this.cardPool.getCardIds().length;\n  }\n  /**\n   * Retrieve all piles.\n   * @return {object[]} Piles.\n   */\n  ;\n\n  _proto.getPiles = function getPiles() {\n    return this.cardPiles;\n  }\n  /**\n   * Retrieve the size of each pile.\n   * @return {object[]} Pile sizes.\n   */\n  ;\n\n  _proto.getPileSizes = function getPileSizes() {\n    return this.cardPiles.map(function (pile) {\n      return pile.length();\n    });\n  };\n\n  return CardManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CardManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards-card-manager.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards-card-pile.js":
/*!**************************************************!*\
  !*** ./src/scripts/h5p-dialogcards-card-pile.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar CardPile = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   *\n   * @params {object[]} cards Card Ids.\n   */\n  function CardPile() {\n    var cards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    // Only use unique values\n    this.cards = cards.filter(function (item, index) {\n      return cards.indexOf(item) >= index;\n    });\n    return this;\n  }\n  /**\n   * Get complete card pile.\n   */\n\n\n  var _proto = CardPile.prototype;\n\n  _proto.getCards = function getCards() {\n    return this.cards;\n  }\n  /**\n   * Peek at card in pile.\n   *\n   * @param {number|string} position Position to peek at.\n   * @param {number} [amount=1] Number of cards to peek at.\n   */\n  ;\n\n  _proto.peek = function peek(position) {\n    var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    amount = Math.max(0, amount);\n\n    if (position === 'top') {\n      position = 0;\n    }\n\n    if (position === 'bottom') {\n      position = this.cards.length - amount;\n    }\n\n    if (position < 0 || position > this.cards.length - 1) {\n      return [];\n    }\n\n    return this.cards.slice(position, position + amount);\n  }\n  /**\n   * Add cards to the pile.\n   *\n   * @param {number|object[]} ids Id or array of card ids to be added.\n   * @param {number|string} [position='top'] Position to add cards to (top|bottom), can be amended.\n   */\n  ;\n\n  _proto.add = function add(ids) {\n    var _this = this;\n\n    var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n    if (typeof ids === 'number') {\n      ids = [ids];\n    }\n\n    ids.forEach(function (id) {\n      var _this$cards;\n\n      if (_this.cards.indexOf(id) !== -1) {\n        return;\n      }\n\n      if (position === 'top') {\n        position = 0;\n      } else if (position === 'bottom') {\n        position = _this.cards.length;\n      } else if (position === 'random') {\n        position = Math.floor(Math.random() * _this.cards.length);\n      }\n\n      (_this$cards = _this.cards).splice.apply(_this$cards, [position, 0].concat(_toConsumableArray(ids)));\n    });\n  }\n  /**\n   * Shorthand for adding cards to top.\n   *\n   * @param {number|object[]} ids Id or array of card ids to be added.\n   */\n  ;\n\n  _proto.push = function push(ids) {\n    this.add(ids, 'top');\n  }\n  /**\n   * Pull consecutive cards from the pile.\n   *\n   * @param {number} [amount=1] Amount of cards to be pulled.\n   * @param {number|string} [position='top'] Position to take cards from. Default top.\n   */\n  ;\n\n  _proto.pull = function pull() {\n    var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    amount = Math.max(1, Math.min(amount, this.cards.length));\n\n    if (position === 'top') {\n      position = 0;\n    }\n\n    if (position === 'bottom') {\n      position = -amount;\n    }\n\n    position = Math.max(0, Math.min(position, this.cards.length - 1));\n    return this.cards.splice(position, amount);\n  }\n  /**\n   * Remove cards from the pile.\n   *\n   * @param {number|object[]} ids Id or array of card ids to be removed.\n   */\n  ;\n\n  _proto.remove = function remove(ids) {\n    var _this2 = this;\n\n    if (typeof ids === 'number') {\n      ids = [ids];\n    }\n\n    ids.forEach(function (id) {\n      var position = _this2.cards.indexOf(id);\n\n      if (position > -1) {\n        _this2.cards.splice(position, 1);\n      }\n    });\n  }\n  /**\n   * Shuffle pile in place.\n   *\n   * @return {object[]} Shuffled cards.\n   */\n  ;\n\n  _proto.shuffle = function shuffle() {\n    for (var i = this.cards.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [this.cards[j], this.cards[i]];\n      this.cards[i] = _ref[0];\n      this.cards[j] = _ref[1];\n    }\n\n    return this.cards;\n  }\n  /**\n   * Check if id is in pile.\n   *\n   * @return {boolean} True, if card is in pile.\n   */\n  ;\n\n  _proto.contains = function contains(id) {\n    return this.cards.indexOf(id) !== -1;\n  }\n  /**\n   * Get amount of cards on pile.\n   *\n   * @return {number} Amount of cards on pile.\n   */\n  ;\n\n  _proto.length = function length() {\n    return this.cards.length;\n  };\n\n  return CardPile;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CardPile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9oNXAtZGlhbG9nY2FyZHMtY2FyZC1waWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQUE7O0FBQUE7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUVBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBOzs7OztBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaDVwLWRpYWxvZ2NhcmRzLy4vc3JjL3NjcmlwdHMvaDVwLWRpYWxvZ2NhcmRzLWNhcmQtcGlsZS5qcz8xODlmIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhcmRQaWxlIHtcbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKlxuICAgKiBAcGFyYW1zIHtvYmplY3RbXX0gY2FyZHMgQ2FyZCBJZHMuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihjYXJkcyA9IFtdKSB7XG4gICAgLy8gT25seSB1c2UgdW5pcXVlIHZhbHVlc1xuICAgIHRoaXMuY2FyZHMgPSBjYXJkcy5maWx0ZXIoKGl0ZW0sIGluZGV4KSA9PiBjYXJkcy5pbmRleE9mKGl0ZW0pID49IGluZGV4KTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBjb21wbGV0ZSBjYXJkIHBpbGUuXG4gICAqL1xuICBnZXRDYXJkcygpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJkcztcbiAgfVxuXG4gIC8qKlxuICAgKiBQZWVrIGF0IGNhcmQgaW4gcGlsZS5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBwb3NpdGlvbiBQb3NpdGlvbiB0byBwZWVrIGF0LlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2Ftb3VudD0xXSBOdW1iZXIgb2YgY2FyZHMgdG8gcGVlayBhdC5cbiAgICovXG4gIHBlZWsocG9zaXRpb24sIGFtb3VudCA9IDEpIHtcbiAgICBhbW91bnQgPSBNYXRoLm1heCgwLCBhbW91bnQpO1xuICAgIGlmIChwb3NpdGlvbiA9PT0gJ3RvcCcpIHtcbiAgICAgIHBvc2l0aW9uID0gMDtcbiAgICB9XG4gICAgaWYgKHBvc2l0aW9uID09PSAnYm90dG9tJykge1xuICAgICAgcG9zaXRpb24gPSB0aGlzLmNhcmRzLmxlbmd0aCAtIGFtb3VudDtcbiAgICB9XG4gICAgaWYgKHBvc2l0aW9uIDwgMCB8fCBwb3NpdGlvbiA+IHRoaXMuY2FyZHMubGVuZ3RoIC0gMSkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmNhcmRzLnNsaWNlKHBvc2l0aW9uLCBwb3NpdGlvbiArIGFtb3VudCk7XG4gIH1cblxuICAvKipcbiAgICogQWRkIGNhcmRzIHRvIHRoZSBwaWxlLlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcnxvYmplY3RbXX0gaWRzIElkIG9yIGFycmF5IG9mIGNhcmQgaWRzIHRvIGJlIGFkZGVkLlxuICAgKiBAcGFyYW0ge251bWJlcnxzdHJpbmd9IFtwb3NpdGlvbj0ndG9wJ10gUG9zaXRpb24gdG8gYWRkIGNhcmRzIHRvICh0b3B8Ym90dG9tKSwgY2FuIGJlIGFtZW5kZWQuXG4gICAqL1xuICBhZGQoaWRzLCBwb3NpdGlvbiA9ICd0b3AnKSB7XG4gICAgaWYgKHR5cGVvZiBpZHMgPT09ICdudW1iZXInKSB7XG4gICAgICBpZHMgPSBbaWRzXTtcbiAgICB9XG5cbiAgICBpZHMuZm9yRWFjaChpZCA9PiB7XG4gICAgICBpZiAodGhpcy5jYXJkcy5pbmRleE9mKGlkKSAhPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAocG9zaXRpb24gPT09ICd0b3AnKSB7XG4gICAgICAgIHBvc2l0aW9uID0gMDtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKHBvc2l0aW9uID09PSAnYm90dG9tJykge1xuICAgICAgICBwb3NpdGlvbiA9IHRoaXMuY2FyZHMubGVuZ3RoO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAocG9zaXRpb24gPT09ICdyYW5kb20nKSB7XG4gICAgICAgIHBvc2l0aW9uID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuY2FyZHMubGVuZ3RoKSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY2FyZHMuc3BsaWNlKHBvc2l0aW9uLCAwLCAuLi5pZHMpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3J0aGFuZCBmb3IgYWRkaW5nIGNhcmRzIHRvIHRvcC5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ8b2JqZWN0W119IGlkcyBJZCBvciBhcnJheSBvZiBjYXJkIGlkcyB0byBiZSBhZGRlZC5cbiAgICovXG4gIHB1c2goaWRzKSB7XG4gICAgdGhpcy5hZGQoaWRzLCAndG9wJyk7XG4gIH1cblxuICAvKipcbiAgICogUHVsbCBjb25zZWN1dGl2ZSBjYXJkcyBmcm9tIHRoZSBwaWxlLlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2Ftb3VudD0xXSBBbW91bnQgb2YgY2FyZHMgdG8gYmUgcHVsbGVkLlxuICAgKiBAcGFyYW0ge251bWJlcnxzdHJpbmd9IFtwb3NpdGlvbj0ndG9wJ10gUG9zaXRpb24gdG8gdGFrZSBjYXJkcyBmcm9tLiBEZWZhdWx0IHRvcC5cbiAgICovXG4gIHB1bGwoYW1vdW50ID0gMSwgcG9zaXRpb24gPSAndG9wJykge1xuICAgIGFtb3VudCA9IE1hdGgubWF4KDEsIE1hdGgubWluKGFtb3VudCwgdGhpcy5jYXJkcy5sZW5ndGgpKTtcblxuICAgIGlmIChwb3NpdGlvbiA9PT0gJ3RvcCcpIHtcbiAgICAgIHBvc2l0aW9uID0gMDtcbiAgICB9XG4gICAgaWYgKHBvc2l0aW9uID09PSAnYm90dG9tJykge1xuICAgICAgcG9zaXRpb24gPSAtYW1vdW50O1xuICAgIH1cbiAgICBwb3NpdGlvbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKHBvc2l0aW9uLCB0aGlzLmNhcmRzLmxlbmd0aCAtIDEpKTtcblxuICAgIHJldHVybiB0aGlzLmNhcmRzLnNwbGljZShwb3NpdGlvbiwgYW1vdW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgY2FyZHMgZnJvbSB0aGUgcGlsZS5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ8b2JqZWN0W119IGlkcyBJZCBvciBhcnJheSBvZiBjYXJkIGlkcyB0byBiZSByZW1vdmVkLlxuICAgKi9cbiAgcmVtb3ZlKGlkcykge1xuICAgIGlmICh0eXBlb2YgaWRzID09PSAnbnVtYmVyJykge1xuICAgICAgaWRzID0gW2lkc107XG4gICAgfVxuXG4gICAgaWRzLmZvckVhY2goaWQgPT4ge1xuICAgICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmNhcmRzLmluZGV4T2YoaWQpO1xuICAgICAgaWYgKHBvc2l0aW9uID4gLTEpIHtcbiAgICAgICAgdGhpcy5jYXJkcy5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNodWZmbGUgcGlsZSBpbiBwbGFjZS5cbiAgICpcbiAgICogQHJldHVybiB7b2JqZWN0W119IFNodWZmbGVkIGNhcmRzLlxuICAgKi9cbiAgc2h1ZmZsZSgpIHtcbiAgICBmb3IgKGxldCBpID0gdGhpcy5jYXJkcy5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XG4gICAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICBbdGhpcy5jYXJkc1tpXSwgdGhpcy5jYXJkc1tqXV0gPSBbdGhpcy5jYXJkc1tqXSwgdGhpcy5jYXJkc1tpXV07XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuY2FyZHM7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgaWQgaXMgaW4gcGlsZS5cbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSwgaWYgY2FyZCBpcyBpbiBwaWxlLlxuICAgKi9cbiAgY29udGFpbnMoaWQpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJkcy5pbmRleE9mKGlkKSAhPT0gLTE7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFtb3VudCBvZiBjYXJkcyBvbiBwaWxlLlxuICAgKlxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IEFtb3VudCBvZiBjYXJkcyBvbiBwaWxlLlxuICAgKi9cbiAgbGVuZ3RoKCkge1xuICAgIHJldHVybiB0aGlzLmNhcmRzLmxlbmd0aDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYXJkUGlsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards-card-pile.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards-card-pool.js":
/*!**************************************************!*\
  !*** ./src/scripts/h5p-dialogcards-card-pool.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _h5p_dialogcards_card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dialogcards-card */ \"./src/scripts/h5p-dialogcards-card.js\");\n\n\nvar CardPool = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   *\n   * @param {object} params Parameters from content type.\n   * @param {number} contentId Id of content.\n   * @param {object} callbacks Callbacks to main component.\n   */\n  function CardPool(params, contentId, callbacks) {\n    var _this = this;\n\n    this.params = params;\n    this.contentId = contentId;\n    this.callbacks = callbacks;\n    this.cards = [];\n    this.params.dialogs.forEach(function (dialog, index) {\n      dialog.id = index;\n\n      _this.cards.push(index);\n    });\n    return this;\n  }\n  /**\n   * Retrieve a card.\n   *\n   * @param {number} id Id of card to retrieve.\n   */\n\n\n  var _proto = CardPool.prototype;\n\n  _proto.getCard = function getCard(id) {\n    if (id < 0 || id > this.cards.length) {\n      return;\n    } // Replace id with card object if necessary.\n\n\n    if (typeof this.cards[id] === 'number') {\n      this.loadCard(id);\n    }\n\n    return this.cards[id];\n  }\n  /**\n   * Get initial card ids.\n   *\n   * @return {object[]} Card ids.\n   */\n  ;\n\n  _proto.getCardIds = function getCardIds() {\n    return this.cards.map(function (card, index) {\n      return index;\n    });\n  }\n  /**\n   * Load a card if not loaded yet.\n   *\n   * @param {number} id Id of card to load.\n   */\n  ;\n\n  _proto.loadCard = function loadCard(id) {\n    if (id < 0 || id > this.cards.length) {\n      return;\n    }\n\n    if (typeof this.cards[id] === 'number') {\n      this.cards[id] = new _h5p_dialogcards_card__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.params.dialogs[id], this.params, id, this.contentId, this.callbacks);\n    }\n  };\n\n  return CardPool;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CardPool);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9oNXAtZGlhbG9nY2FyZHMtY2FyZC1wb29sLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBSUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oNXAtZGlhbG9nY2FyZHMvLi9zcmMvc2NyaXB0cy9oNXAtZGlhbG9nY2FyZHMtY2FyZC1wb29sLmpzP2UwNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcmQgZnJvbSAnLi9oNXAtZGlhbG9nY2FyZHMtY2FyZCc7XG5cbmNsYXNzIENhcmRQb29sIHtcbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIFBhcmFtZXRlcnMgZnJvbSBjb250ZW50IHR5cGUuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb250ZW50SWQgSWQgb2YgY29udGVudC5cbiAgICogQHBhcmFtIHtvYmplY3R9IGNhbGxiYWNrcyBDYWxsYmFja3MgdG8gbWFpbiBjb21wb25lbnQuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihwYXJhbXMsIGNvbnRlbnRJZCwgY2FsbGJhY2tzKSB7XG4gICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XG4gICAgdGhpcy5jb250ZW50SWQgPSBjb250ZW50SWQ7XG4gICAgdGhpcy5jYWxsYmFja3MgPSBjYWxsYmFja3M7XG4gICAgdGhpcy5jYXJkcyA9IFtdO1xuXG4gICAgdGhpcy5wYXJhbXMuZGlhbG9ncy5mb3JFYWNoKChkaWFsb2csIGluZGV4KSA9PiB7XG4gICAgICBkaWFsb2cuaWQgPSBpbmRleDtcbiAgICAgIHRoaXMuY2FyZHMucHVzaChpbmRleCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZSBhIGNhcmQuXG4gICAqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpZCBJZCBvZiBjYXJkIHRvIHJldHJpZXZlLlxuICAgKi9cbiAgZ2V0Q2FyZChpZCkge1xuICAgIGlmIChpZCA8IDAgfHwgaWQgPiB0aGlzLmNhcmRzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFJlcGxhY2UgaWQgd2l0aCBjYXJkIG9iamVjdCBpZiBuZWNlc3NhcnkuXG4gICAgaWYgKHR5cGVvZiB0aGlzLmNhcmRzW2lkXSA9PT0gJ251bWJlcicpIHtcbiAgICAgIHRoaXMubG9hZENhcmQoaWQpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmNhcmRzW2lkXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgaW5pdGlhbCBjYXJkIGlkcy5cbiAgICpcbiAgICogQHJldHVybiB7b2JqZWN0W119IENhcmQgaWRzLlxuICAgKi9cbiAgZ2V0Q2FyZElkcygpICB7XG4gICAgcmV0dXJuIHRoaXMuY2FyZHMubWFwKChjYXJkLCBpbmRleCkgPT4gaW5kZXgpO1xuICB9XG5cbiAgLyoqXG4gICAqIExvYWQgYSBjYXJkIGlmIG5vdCBsb2FkZWQgeWV0LlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0gaWQgSWQgb2YgY2FyZCB0byBsb2FkLlxuICAgKi9cbiAgbG9hZENhcmQoaWQpIHtcbiAgICBpZiAoaWQgPCAwIHx8IGlkID4gdGhpcy5jYXJkcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHRoaXMuY2FyZHNbaWRdID09PSAnbnVtYmVyJykge1xuICAgICAgdGhpcy5jYXJkc1tpZF0gPSBuZXcgQ2FyZCh0aGlzLnBhcmFtcy5kaWFsb2dzW2lkXSwgdGhpcy5wYXJhbXMsIGlkLCB0aGlzLmNvbnRlbnRJZCwgdGhpcy5jYWxsYmFja3MpO1xuICAgIH1cbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRQb29sO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards-card-pool.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards-card.js":
/*!*********************************************!*\
  !*** ./src/scripts/h5p-dialogcards-card.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar $ = H5P.jQuery;\n\nvar Card = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   *\n   * @param {object} card Card parameters\n   * @param {object} params Parent's params\n   * @param {number} id Card number in order of appearance\n   * @param {object} [callbacks] Callbacks.\n   * @param {function} [callbacks.onCardSize] Call when card needs resize.\n   * @param {function} [callbacks.onCardTurned] Call when card was turned.\n   */\n  function Card(card, params, id, contentId) {\n    var callbacks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    this.card = card;\n    this.params = params || {};\n    this.id = id;\n    this.contentId = contentId;\n    this.callbacks = callbacks; // Check if to use front settings for back, too\n\n    if (this.card.back.useImageFromFront) {\n      this.card.back.image = this.card.front.image;\n      this.card.back.imageAltText = this.card.front.imageAltText;\n    }\n\n    if (this.card.back.useAudioFromFront) {\n      this.card.back.audio = this.card.front.audio;\n    }\n\n    this.audios = {};\n    this.$audioWrappers = {};\n    this.$cardWrapper = $('<div>', {\n      'class': 'h5p-dialogcards-cardwrap',\n      'role': 'group',\n      'tabindex': '-1'\n    });\n\n    if (this.params.mode !== 'repetition') {\n      this.$cardWrapper.attr('aria-labelledby', 'h5p-dialogcards-progress-' + H5P.Dialogcards.idCounter);\n    }\n\n    this.$cardHolder = $('<div>', {\n      'class': 'h5p-dialogcards-cardholder'\n    }).appendTo(this.$cardWrapper);\n    this.createCardContent(card).appendTo(this.$cardHolder);\n    return this;\n  }\n  /**\n   * Create content for a card\n   *\n   * @param {object} card Card parameters\n   * @returns {*|jQuery|HTMLElement} Card content wrapper\n   */\n\n\n  var _proto = Card.prototype;\n\n  _proto.createCardContent = function createCardContent(card) {\n    var $cardContent = $('<div>', {\n      'class': 'h5p-dialogcards-card-content'\n    }); // Images\n\n    this.$imageWrapper = $('<div>', {\n      'class': 'h5p-dialogcards-image-wrapper'\n    });\n    this.createCardImage(card, 'front').appendTo(this.$imageWrapper);\n    this.createCardImage(card, 'back').appendTo(this.$imageWrapper);\n    this.$imageWrapper.appendTo($cardContent);\n    var $cardTextWrapper = $('<div>', {\n      'class': 'h5p-dialogcards-card-text-wrapper'\n    }).appendTo($cardContent);\n    var $cardTextInner = $('<div>', {\n      'class': 'h5p-dialogcards-card-text-inner'\n    }).appendTo($cardTextWrapper);\n    var $cardTextInnerContent = $('<div>', {\n      'class': 'h5p-dialogcards-card-text-inner-content'\n    }).appendTo($cardTextInner); // Front audio\n\n    this.$audioWrappers.front = this.createCardAudio(card, 'front').appendTo($cardTextInnerContent); // Back audio\n\n    this.$audioWrappers.back = this.createCardAudio(card, 'back').appendTo($cardTextInnerContent);\n    var $cardText = $('<div>', {\n      'class': 'h5p-dialogcards-card-text'\n    }).appendTo($cardTextInnerContent);\n    this.$cardTextArea = $('<div>', {\n      'class': 'h5p-dialogcards-card-text-area',\n      'tabindex': '-1',\n      'html': card.front.text\n    }).appendTo($cardText);\n    this.createCardFooter().appendTo($cardTextWrapper);\n    return $cardContent;\n  }\n  /**\n   * Create card image\n   *\n   * @param {object} card Card parameters\n   * @param {string} side Side, either front or back.\n   * @returns {*|jQuery|HTMLElement} Card image wrapper\n   */\n  ;\n\n  _proto.createCardImage = function createCardImage(card, side) {\n    var $image;\n\n    if (card[side].image !== undefined) {\n      $image = $('<img class=\"h5p-dialogcards-image\" src=\"' + H5P.getPath(card[side].image.path, this.contentId) + '\"/>');\n      $image.addClass(\"h5p-dialogcards-image-\".concat(side));\n\n      if (card[side].imageAltText) {\n        $image.attr('alt', card[side].imageAltText);\n      }\n    } else {\n      $image = $('<div class=\"h5p-dialogcards-image\"></div>');\n    }\n\n    return $image;\n  }\n  /**\n   * Create card audio.\n   *\n   * @param {object} card Card parameters.\n   * @param {string} side Side, either front or back.\n   * @returns {*|jQuery|HTMLElement} Card audio element.\n   */\n  ;\n\n  _proto.createCardAudio = function createCardAudio(card) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'front';\n    var $audioWrapper = $('<div>').addClass('h5p-dialogcards-audio-wrapper').addClass(\"h5p-dialogcards-audio-wrapper-\".concat(side));\n\n    if (!card[side].text || card[side].text === '') {\n      $audioWrapper.addClass('h5p-no-text');\n    }\n\n    if (card[side].audio !== undefined) {\n      var audioDefaults = {\n        files: card[side].audio,\n        audioNotSupported: this.params.audioNotSupported\n      };\n      var audio = new H5P.Audio(audioDefaults, this.contentId);\n      this.audios[side] = audio;\n      audio.attach($audioWrapper); // Have to stop else audio will take up a socket pending forever in chrome.\n\n      if (audio.audio && audio.audio.preload) {\n        audio.audio.preload = 'none';\n      }\n    } else {\n      $audioWrapper.addClass('hide');\n    }\n\n    return $audioWrapper;\n  }\n  /**\n   * Create card footer\n   *\n   * @returns {*|jQuery|HTMLElement} Card footer element\n   */\n  ;\n\n  _proto.createCardFooter = function createCardFooter() {\n    var $cardFooter = $('<div>', {\n      'class': 'h5p-dialogcards-card-footer'\n    });\n    var classesRepetition = 'h5p-dialogcards-button-hidden';\n    var attributeTabindex = '-1';\n\n    if (this.params.mode === 'repetition') {\n      classesRepetition = '';\n\n      if (this.params.behaviour.quickProgression) {\n        classesRepetition = 'h5p-dialogcards-quick-progression';\n        attributeTabindex = '0';\n      }\n\n      $cardFooter.addClass('h5p-repetition');\n    }\n\n    this.$buttonTurn = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-turn',\n      'html': this.params.answer\n    }).appendTo($cardFooter);\n    this.$buttonShowSummary = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-show-summary h5p-dialogcards-button-gone',\n      'html': this.params.showSummary\n    }).appendTo($cardFooter);\n    this.$buttonIncorrect = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-answer-button',\n      'html': this.params.incorrectAnswer\n    }).addClass('incorrect').addClass(classesRepetition).attr('tabindex', attributeTabindex).appendTo($cardFooter);\n    this.$buttonCorrect = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-answer-button',\n      'html': this.params.correctAnswer\n    }).addClass('correct').addClass(classesRepetition).attr('tabindex', attributeTabindex).appendTo($cardFooter);\n    return $cardFooter;\n  }\n  /**\n   * Create button listeners.\n   * Will be lost when the element is removed from DOM.\n   */\n  ;\n\n  _proto.createButtonListeners = function createButtonListeners() {\n    var _this = this;\n\n    this.$buttonIncorrect.unbind('click').click(function (event) {\n      if (!event.target.classList.contains('h5p-dialogcards-quick-progression')) {\n        return;\n      }\n\n      _this.callbacks.onNextCard({\n        cardId: _this.id,\n        result: false\n      });\n    });\n    this.$buttonTurn.unbind('click').click(function () {\n      _this.turnCard();\n    });\n    this.$buttonCorrect.unbind('click').click(function (event) {\n      if (!event.target.classList.contains('h5p-dialogcards-quick-progression')) {\n        return;\n      }\n\n      _this.callbacks.onNextCard({\n        cardId: _this.id,\n        result: true\n      });\n    });\n  }\n  /**\n   * Show summary button on last card.\n   *\n   * @param {function} callback Callback called on button click.\n   */\n  ;\n\n  _proto.showSummaryButton = function showSummaryButton(callback) {\n    // Hide answer buttons\n    this.getDOM().find('.h5p-dialogcards-answer-button').addClass('h5p-dialogcards-button-hidden').attr('tabindex', '-1'); // Swap turn button with show summary button\n\n    this.$buttonTurn.addClass('h5p-dialogcards-button-gone');\n    this.$buttonShowSummary.click(function () {\n      return callback();\n    }).removeClass('h5p-dialogcards-button-gone').focus();\n  }\n  /**\n   * Hide summary button and show answer buttons again.\n   */\n  ;\n\n  _proto.hideSummaryButton = function hideSummaryButton() {\n    if (this.params.mode === 'normal') {\n      return;\n    }\n\n    this.getDOM().find('.h5p-dialogcards-answer-button').removeClass('h5p-dialogcards-button-hidden').attr('tabindex', '0'); // Swap turn button with show summary button\n\n    this.$buttonTurn.removeClass('h5p-dialogcards-button-gone');\n    this.$buttonShowSummary.addClass('h5p-dialogcards-button-gone');\n  }\n  /**\n   * Show the opposite side of the card.\n   */\n  ;\n\n  _proto.turnCard = function turnCard() {\n    var _this2 = this;\n\n    var $card = this.getDOM();\n    var $c = $card.find('.h5p-dialogcards-card-content');\n    var $ch = $card.find('.h5p-dialogcards-cardholder').addClass('h5p-dialogcards-collapse'); // Removes tip, since it destroys the animation:\n\n    $c.find('.joubel-tip-container').remove();\n    setTimeout(function () {\n      // Check if card has been turned before\n      var turned = _this2.isTurned(); // Update HTML class for card\n\n\n      $c.toggleClass('h5p-dialogcards-turned', !turned);\n      $ch.removeClass('h5p-dialogcards-collapse');\n\n      _this2.changeText(turned ? _this2.getText() : _this2.getAnswer()); // Image shown/hidden via CSS\n      // Audio buttons shown/hidden via CSS\n\n\n      _this2.stopAudio(); // Toggle state for knowledge confirmation buttons\n\n\n      if (_this2.params.mode === 'repetition' && !_this2.params.behaviour.quickProgression) {\n        var $answerButtons = $card.find('.h5p-dialogcards-answer-button'); // Don't revoke quick progression after card was turned.\n\n        if ($answerButtons.hasClass('h5p-dialogcards-quick-progression') === false) {\n          $answerButtons.addClass('h5p-dialogcards-quick-progression').attr('tabindex', 0);\n        }\n      } // Add backside tip\n      // Had to wait a little, if not Chrome will displace tip icon\n\n\n      setTimeout(function () {\n        _this2.addTipToCard($c, turned ? 'front' : 'back');\n\n        if (typeof _this2.callbacks.onCardTurned === 'function') {\n          _this2.callbacks.onCardTurned(turned);\n        }\n      }, 200);\n\n      _this2.resizeOverflowingText(); // Focus text\n\n\n      _this2.$cardTextArea.focus();\n    }, 200);\n  }\n  /**\n   * Change text of card, used when turning cards.\n   *\n   * @param {string} text Text to set.\n   */\n  ;\n\n  _proto.changeText = function changeText(text) {\n    this.$cardTextArea.html(text);\n    this.$cardTextArea.toggleClass('hide', !text || !text.length);\n  }\n  /**\n   * Set progress for assistive technologies.\n   * @param {number} position Position.\n   * @param {number} max Maximum position.\n   */\n  ;\n\n  _proto.setProgressText = function setProgressText(position, total) {\n    if (this.params.mode !== 'repetition') {\n      return;\n    }\n\n    var progressText = this.params.progressText.replace('@card', position.toString()).replace('@total', total.toString());\n    this.$cardWrapper.attr('aria-label', progressText);\n  }\n  /**\n   * Resize the font-size of text areas that tend to overflow when dialog cards\n   * is squeezed into a tiny container.\n   */\n  ;\n\n  _proto.resizeOverflowingText = function resizeOverflowingText() {\n    if (!this.params.behaviour.scaleTextNotCard) {\n      return; // No text scaling today\n    } // Resize card text if needed\n\n\n    var $textContainer = this.getDOM().find('.h5p-dialogcards-card-text');\n    var $text = $textContainer.children();\n    this.resizeTextToFitContainer($textContainer, $text);\n  }\n  /**\n   * Increase or decrease font size so text wil fit inside container.\n   *\n   * @param {jQuery} $textContainer Outer container, must have a set size.\n   * @param {jQuery} $text Inner text container\n   */\n  ;\n\n  _proto.resizeTextToFitContainer = function resizeTextToFitContainer($textContainer, $text) {\n    // Reset text size\n    $text.css('font-size', '');\n\n    if (window.orientation === 90) {\n      var textInner = this.getDOM().find('.h5p-dialogcards-card-text-inner').get(0);\n\n      if (textInner.clientHeight < textInner.scrollHeight) {\n        var fontSize = parseFloat($text.css('font-size'));\n\n        while (fontSize > Card.MINSCALE && textInner.clientHeight < textInner.scrollHeight) {\n          fontSize -= Card.SCALEINTERVAL;\n          $text.css('font-size', \"\".concat(fontSize, \"px\"));\n        }\n      }\n    } else {\n      // Measure container and text height\n      var currentTextContainerHeight = $textContainer.get(0).getBoundingClientRect().height;\n      var currentTextHeight = $text.get(0).getBoundingClientRect().height;\n      var parentFontSize = parseFloat($textContainer.css('font-size'));\n\n      var _fontSize = parseFloat($text.css('font-size'));\n\n      var $inner = this.getDOM().closest('.h5p-container');\n      var mainFontSize = parseFloat($inner.css('font-size')); // Decrease font size\n\n      if (currentTextHeight > currentTextContainerHeight) {\n        var decreaseFontSize = true;\n\n        while (decreaseFontSize) {\n          _fontSize -= Card.SCALEINTERVAL;\n\n          if (_fontSize < Card.MINSCALE) {\n            decreaseFontSize = false;\n            break;\n          }\n\n          $text.css('font-size', _fontSize / parentFontSize + 'em');\n          currentTextHeight = $text.get(0).getBoundingClientRect().height;\n\n          if (currentTextHeight <= currentTextContainerHeight) {\n            decreaseFontSize = false;\n          }\n        }\n      } else {\n        // Increase font size\n        var increaseFontSize = true;\n\n        while (increaseFontSize) {\n          _fontSize += Card.SCALEINTERVAL; // Cap at  16px\n\n          if (_fontSize > mainFontSize) {\n            increaseFontSize = false;\n            break;\n          } // Set relative font size to scale with full screen.\n\n\n          $text.css('font-size', _fontSize / parentFontSize + 'em');\n          currentTextHeight = $text.get(0).getBoundingClientRect().height;\n\n          if (currentTextHeight >= currentTextContainerHeight) {\n            increaseFontSize = false;\n            _fontSize = _fontSize - Card.SCALEINTERVAL;\n            $text.css('font-size', _fontSize / parentFontSize + 'em');\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Adds tip to a card\n   *\n   * @param {jQuery} $card The card\n   * @param {String} [side=front] Which side of the card\n   * @param {Number} [index] Index of card\n   */\n  ;\n\n  _proto.addTipToCard = function addTipToCard($card, side, index) {\n    // Make sure we have a side\n    if (side !== 'back') {\n      side = 'front';\n    } // Make sure we have an index\n\n\n    if (index === undefined) {\n      index = this.id;\n    } // Remove any old tips\n\n\n    $card.find('.joubel-tip-container').remove(); // Add new tip if set and has length after trim\n\n    var tip = (this.card[side].tip || '').trim();\n\n    if (tip.length) {\n      $card.find('.h5p-dialogcards-card-text-wrapper .h5p-dialogcards-card-text-inner').after(H5P.JoubelUI.createTip(tip, {\n        tipLabel: this.params.tipButtonLabel\n      }));\n    }\n  }\n  /**\n   * Set focus to a given card.\n   * @param {boolean} force If true, don't wait for transition.\n   */\n  ;\n\n  _proto.setCardFocus = function setCardFocus(force) {\n    if (force === true) {\n      this.$cardTextArea.focus();\n    } else {\n      // Wait for transition, then set focus\n      var $card = this.getDOM();\n      $card.one('transitionend', function () {\n        $card.focus();\n      });\n    }\n  }\n  /**\n   * Stop audio of card.\n   */\n  ;\n\n  _proto.stopAudio = function stopAudio() {\n    var _this3 = this;\n\n    var sides = ['front', 'back'];\n    sides.forEach(function (side) {\n      if (!_this3.audios[side] || !_this3.audios[side].audio) {\n        return;\n      }\n      /*\n       * We need to reset the audio button to its initial visual state, but it\n       * doesn't have a function to to that -> force ended event and reload.\n       */\n\n\n      if (_this3.audios[side].audio.duration > 0) {\n        _this3.audios[side].audio.pause();\n\n        _this3.audios[side].audio.currentTime = Math.floor(_this3.audios[side].audio.duration);\n      }\n\n      if (_this3.audios[side].audio.load) {\n        setTimeout(function () {\n          _this3.audios[side].audio.load();\n        }, 100);\n      }\n    });\n  }\n  /**\n   * Get card's DOM\n   *\n   * @return {jQuery} Card's DOM.\n   */\n  ;\n\n  _proto.getDOM = function getDOM() {\n    return this.$cardWrapper;\n  }\n  /**\n   * Set no text mode.\n   */\n  ;\n\n  _proto.setNoText = function setNoText() {\n    this.getDOM().addClass('h5p-no-text');\n  }\n  /**\n   * Get card's text.\n   *\n   * @return {string} Card's text.\n   */\n  ;\n\n  _proto.getText = function getText() {\n    return this.card.front.text;\n  }\n  /**\n   * Get card's answer.\n   *\n   * @return {string} Card's answer.\n   */\n  ;\n\n  _proto.getAnswer = function getAnswer() {\n    return this.card.back.text;\n  }\n  /**\n   * Get card's image wrapper.\n   *\n   * @return {jQuery} Card's image.\n   */\n  ;\n\n  _proto.getImageWrapper = function getImageWrapper() {\n    return this.$imageWrapper;\n  }\n  /**\n   * Set card image height.\n   * @param {string} height CSS height value.\n   */\n  ;\n\n  _proto.setImageHeight = function setImageHeight(height) {\n    this.$imageWrapper.css('height', height);\n  }\n  /**\n   * Get card's Audio.\n   *\n   * @return {Element} Card's audio.\n   */\n  ;\n\n  _proto.getAudio = function getAudio() {\n    return this.isTurned() ? this.$audioWrappers.back : this.$audioWrappers.front;\n  }\n  /**\n   * Detect whether card is turned.\n   * @return {boolean} True, if card is turned.\n   */\n  ;\n\n  _proto.isTurned = function isTurned() {\n    return this.getDOM().find('.h5p-dialogcards-card-content').hasClass('h5p-dialogcards-turned');\n  }\n  /**\n   * Reset card.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var $card = this.getDOM();\n    $card.removeClass('h5p-dialogcards-previous');\n    $card.removeClass('h5p-dialogcards-current');\n    this.changeText(this.getText());\n    var $cardContent = $card.find('.h5p-dialogcards-card-content');\n    $cardContent.removeClass('h5p-dialogcards-turned');\n    this.addTipToCard($cardContent, 'front', this.id);\n\n    if (!this.params.behaviour.quickProgression) {\n      $card.find('.h5p-dialogcards-answer-button').removeClass('h5p-dialogcards-quick-progression');\n    }\n\n    this.hideSummaryButton();\n  };\n\n  return Card;\n}(); // Constants\n\n\nCard.SCALEINTERVAL = 0.2;\nCard.MAXSCALE = 16;\nCard.MINSCALE = 4;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Card);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9oNXAtZGlhbG9nY2FyZHMtY2FyZC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTs7QUFLQTtBQUNBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBR0E7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQURBOztBQUtBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFEQTs7QUFLQTs7QUFJQTtBQUdBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFJQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBRkE7QUFRQTtBQUNBO0FBQ0E7QUFGQTtBQVFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTs7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBOztBQU1BO0FBR0E7QUFDQTtBQUFBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQU1BO0FBR0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBRUE7O0FBQ0E7QUFJQTs7O0FBQ0E7OztBQUdBO0FBQ0E7O0FBR0E7QUFDQTtBQUdBO0FBQ0E7QUFHQTs7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUVBO0FBQ0E7O0FBR0E7QUFDQTs7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBSUE7QUFDQTtBQUNBOzs7QUFHQTs7QUFHQTs7QUFDQTtBQUNBO0FBRUE7QUFEQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7OztBQUdBOzs7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2g1cC1kaWFsb2djYXJkcy8uL3NyYy9zY3JpcHRzL2g1cC1kaWFsb2djYXJkcy1jYXJkLmpzP2UwODIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgJCA9IEg1UC5qUXVlcnk7XG5cbmNsYXNzIENhcmQge1xuICAvKipcbiAgICogQGNvbnN0cnVjdG9yXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBjYXJkIENhcmQgcGFyYW1ldGVyc1xuICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIFBhcmVudCdzIHBhcmFtc1xuICAgKiBAcGFyYW0ge251bWJlcn0gaWQgQ2FyZCBudW1iZXIgaW4gb3JkZXIgb2YgYXBwZWFyYW5jZVxuICAgKiBAcGFyYW0ge29iamVjdH0gW2NhbGxiYWNrc10gQ2FsbGJhY2tzLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBbY2FsbGJhY2tzLm9uQ2FyZFNpemVdIENhbGwgd2hlbiBjYXJkIG5lZWRzIHJlc2l6ZS5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gW2NhbGxiYWNrcy5vbkNhcmRUdXJuZWRdIENhbGwgd2hlbiBjYXJkIHdhcyB0dXJuZWQuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihjYXJkLCBwYXJhbXMsIGlkLCBjb250ZW50SWQsIGNhbGxiYWNrcyA9IHt9KSB7XG4gICAgdGhpcy5jYXJkID0gY2FyZDtcbiAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcyB8fCB7fTtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5jb250ZW50SWQgPSBjb250ZW50SWQ7XG4gICAgdGhpcy5jYWxsYmFja3MgPSBjYWxsYmFja3M7XG5cbiAgICAvLyBDaGVjayBpZiB0byB1c2UgZnJvbnQgc2V0dGluZ3MgZm9yIGJhY2ssIHRvb1xuICAgIGlmICh0aGlzLmNhcmQuYmFjay51c2VJbWFnZUZyb21Gcm9udCkge1xuICAgICAgdGhpcy5jYXJkLmJhY2suaW1hZ2UgPSB0aGlzLmNhcmQuZnJvbnQuaW1hZ2U7XG4gICAgICB0aGlzLmNhcmQuYmFjay5pbWFnZUFsdFRleHQgPSB0aGlzLmNhcmQuZnJvbnQuaW1hZ2VBbHRUZXh0O1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNhcmQuYmFjay51c2VBdWRpb0Zyb21Gcm9udCkge1xuICAgICAgdGhpcy5jYXJkLmJhY2suYXVkaW8gPSB0aGlzLmNhcmQuZnJvbnQuYXVkaW87XG4gICAgfVxuXG4gICAgdGhpcy5hdWRpb3MgPSB7fTtcbiAgICB0aGlzLiRhdWRpb1dyYXBwZXJzID0ge307XG5cbiAgICB0aGlzLiRjYXJkV3JhcHBlciA9ICQoJzxkaXY+Jywge1xuICAgICAgJ2NsYXNzJzogJ2g1cC1kaWFsb2djYXJkcy1jYXJkd3JhcCcsXG4gICAgICAncm9sZSc6ICdncm91cCcsXG4gICAgICAndGFiaW5kZXgnOiAnLTEnXG4gICAgfSk7XG4gICAgaWYgKHRoaXMucGFyYW1zLm1vZGUgIT09ICdyZXBldGl0aW9uJykge1xuICAgICAgdGhpcy4kY2FyZFdyYXBwZXIuYXR0cignYXJpYS1sYWJlbGxlZGJ5JywgJ2g1cC1kaWFsb2djYXJkcy1wcm9ncmVzcy0nICsgSDVQLkRpYWxvZ2NhcmRzLmlkQ291bnRlcik7XG4gICAgfVxuXG4gICAgdGhpcy4kY2FyZEhvbGRlciA9ICQoJzxkaXY+JywgeydjbGFzcyc6ICdoNXAtZGlhbG9nY2FyZHMtY2FyZGhvbGRlcid9KVxuICAgICAgLmFwcGVuZFRvKHRoaXMuJGNhcmRXcmFwcGVyKTtcblxuICAgIHRoaXMuY3JlYXRlQ2FyZENvbnRlbnQoY2FyZClcbiAgICAgIC5hcHBlbmRUbyh0aGlzLiRjYXJkSG9sZGVyKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBjb250ZW50IGZvciBhIGNhcmRcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGNhcmQgQ2FyZCBwYXJhbWV0ZXJzXG4gICAqIEByZXR1cm5zIHsqfGpRdWVyeXxIVE1MRWxlbWVudH0gQ2FyZCBjb250ZW50IHdyYXBwZXJcbiAgICovXG4gIGNyZWF0ZUNhcmRDb250ZW50KGNhcmQpIHtcbiAgICBjb25zdCAkY2FyZENvbnRlbnQgPSAkKCc8ZGl2PicsIHtcbiAgICAgICdjbGFzcyc6ICdoNXAtZGlhbG9nY2FyZHMtY2FyZC1jb250ZW50J1xuICAgIH0pO1xuXG4gICAgLy8gSW1hZ2VzXG4gICAgdGhpcy4kaW1hZ2VXcmFwcGVyID0gJCgnPGRpdj4nLCB7XG4gICAgICAnY2xhc3MnOiAnaDVwLWRpYWxvZ2NhcmRzLWltYWdlLXdyYXBwZXInXG4gICAgfSk7XG4gICAgdGhpcy5jcmVhdGVDYXJkSW1hZ2UoY2FyZCwgJ2Zyb250JykuYXBwZW5kVG8odGhpcy4kaW1hZ2VXcmFwcGVyKTtcbiAgICB0aGlzLmNyZWF0ZUNhcmRJbWFnZShjYXJkLCAnYmFjaycpLmFwcGVuZFRvKHRoaXMuJGltYWdlV3JhcHBlcik7XG4gICAgdGhpcy4kaW1hZ2VXcmFwcGVyLmFwcGVuZFRvKCRjYXJkQ29udGVudCk7XG5cbiAgICBjb25zdCAkY2FyZFRleHRXcmFwcGVyID0gJCgnPGRpdj4nLCB7XG4gICAgICAnY2xhc3MnOiAnaDVwLWRpYWxvZ2NhcmRzLWNhcmQtdGV4dC13cmFwcGVyJ1xuICAgIH0pLmFwcGVuZFRvKCRjYXJkQ29udGVudCk7XG5cbiAgICBjb25zdCAkY2FyZFRleHRJbm5lciA9ICQoJzxkaXY+Jywge1xuICAgICAgJ2NsYXNzJzogJ2g1cC1kaWFsb2djYXJkcy1jYXJkLXRleHQtaW5uZXInXG4gICAgfSkuYXBwZW5kVG8oJGNhcmRUZXh0V3JhcHBlcik7XG5cbiAgICBjb25zdCAkY2FyZFRleHRJbm5lckNvbnRlbnQgPSAkKCc8ZGl2PicsIHtcbiAgICAgICdjbGFzcyc6ICdoNXAtZGlhbG9nY2FyZHMtY2FyZC10ZXh0LWlubmVyLWNvbnRlbnQnXG4gICAgfSkuYXBwZW5kVG8oJGNhcmRUZXh0SW5uZXIpO1xuXG4gICAgLy8gRnJvbnQgYXVkaW9cbiAgICB0aGlzLiRhdWRpb1dyYXBwZXJzLmZyb250ID0gdGhpcy5jcmVhdGVDYXJkQXVkaW8oY2FyZCwgJ2Zyb250JylcbiAgICAgIC5hcHBlbmRUbygkY2FyZFRleHRJbm5lckNvbnRlbnQpO1xuXG4gICAgLy8gQmFjayBhdWRpb1xuICAgIHRoaXMuJGF1ZGlvV3JhcHBlcnMuYmFjayA9IHRoaXMuY3JlYXRlQ2FyZEF1ZGlvKGNhcmQsICdiYWNrJylcbiAgICAgIC5hcHBlbmRUbygkY2FyZFRleHRJbm5lckNvbnRlbnQpO1xuXG4gICAgY29uc3QgJGNhcmRUZXh0ID0gJCgnPGRpdj4nLCB7XG4gICAgICAnY2xhc3MnOiAnaDVwLWRpYWxvZ2NhcmRzLWNhcmQtdGV4dCdcbiAgICB9KS5hcHBlbmRUbygkY2FyZFRleHRJbm5lckNvbnRlbnQpO1xuXG4gICAgdGhpcy4kY2FyZFRleHRBcmVhID0gJCgnPGRpdj4nLCB7XG4gICAgICAnY2xhc3MnOiAnaDVwLWRpYWxvZ2NhcmRzLWNhcmQtdGV4dC1hcmVhJyxcbiAgICAgICd0YWJpbmRleCc6ICctMScsXG4gICAgICAnaHRtbCc6IGNhcmQuZnJvbnQudGV4dFxuICAgIH0pLmFwcGVuZFRvKCRjYXJkVGV4dCk7XG5cbiAgICB0aGlzLmNyZWF0ZUNhcmRGb290ZXIoKVxuICAgICAgLmFwcGVuZFRvKCRjYXJkVGV4dFdyYXBwZXIpO1xuXG4gICAgcmV0dXJuICRjYXJkQ29udGVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgY2FyZCBpbWFnZVxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gY2FyZCBDYXJkIHBhcmFtZXRlcnNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHNpZGUgU2lkZSwgZWl0aGVyIGZyb250IG9yIGJhY2suXG4gICAqIEByZXR1cm5zIHsqfGpRdWVyeXxIVE1MRWxlbWVudH0gQ2FyZCBpbWFnZSB3cmFwcGVyXG4gICAqL1xuICBjcmVhdGVDYXJkSW1hZ2UoY2FyZCwgc2lkZSkge1xuICAgIGxldCAkaW1hZ2U7XG5cbiAgICBpZiAoY2FyZFtzaWRlXS5pbWFnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAkaW1hZ2UgPSAkKCc8aW1nIGNsYXNzPVwiaDVwLWRpYWxvZ2NhcmRzLWltYWdlXCIgc3JjPVwiJyArIEg1UC5nZXRQYXRoKGNhcmRbc2lkZV0uaW1hZ2UucGF0aCwgdGhpcy5jb250ZW50SWQpICsgJ1wiLz4nKTtcbiAgICAgICRpbWFnZS5hZGRDbGFzcyhgaDVwLWRpYWxvZ2NhcmRzLWltYWdlLSR7c2lkZX1gKTtcblxuICAgICAgaWYgKGNhcmRbc2lkZV0uaW1hZ2VBbHRUZXh0KSB7XG4gICAgICAgICRpbWFnZS5hdHRyKCdhbHQnLCBjYXJkW3NpZGVdLmltYWdlQWx0VGV4dCk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgJGltYWdlID0gJCgnPGRpdiBjbGFzcz1cImg1cC1kaWFsb2djYXJkcy1pbWFnZVwiPjwvZGl2PicpO1xuICAgIH1cblxuICAgIHJldHVybiAkaW1hZ2U7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGNhcmQgYXVkaW8uXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBjYXJkIENhcmQgcGFyYW1ldGVycy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHNpZGUgU2lkZSwgZWl0aGVyIGZyb250IG9yIGJhY2suXG4gICAqIEByZXR1cm5zIHsqfGpRdWVyeXxIVE1MRWxlbWVudH0gQ2FyZCBhdWRpbyBlbGVtZW50LlxuICAgKi9cbiAgY3JlYXRlQ2FyZEF1ZGlvKGNhcmQsIHNpZGUgPSAnZnJvbnQnKSB7XG4gICAgY29uc3QgJGF1ZGlvV3JhcHBlciA9ICQoJzxkaXY+JylcbiAgICAgIC5hZGRDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWF1ZGlvLXdyYXBwZXInKVxuICAgICAgLmFkZENsYXNzKGBoNXAtZGlhbG9nY2FyZHMtYXVkaW8td3JhcHBlci0ke3NpZGV9YCk7XG5cbiAgICBpZiAoIWNhcmRbc2lkZV0udGV4dCB8fCBjYXJkW3NpZGVdLnRleHQgPT09ICcnKSB7XG4gICAgICAkYXVkaW9XcmFwcGVyLmFkZENsYXNzKCdoNXAtbm8tdGV4dCcpO1xuICAgIH1cblxuICAgIGlmIChjYXJkW3NpZGVdLmF1ZGlvICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IGF1ZGlvRGVmYXVsdHMgPSB7XG4gICAgICAgIGZpbGVzOiBjYXJkW3NpZGVdLmF1ZGlvLFxuICAgICAgICBhdWRpb05vdFN1cHBvcnRlZDogdGhpcy5wYXJhbXMuYXVkaW9Ob3RTdXBwb3J0ZWRcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEg1UC5BdWRpbyhhdWRpb0RlZmF1bHRzLCB0aGlzLmNvbnRlbnRJZCk7XG4gICAgICB0aGlzLmF1ZGlvc1tzaWRlXSA9IGF1ZGlvO1xuICAgICAgYXVkaW8uYXR0YWNoKCRhdWRpb1dyYXBwZXIpO1xuXG4gICAgICAvLyBIYXZlIHRvIHN0b3AgZWxzZSBhdWRpbyB3aWxsIHRha2UgdXAgYSBzb2NrZXQgcGVuZGluZyBmb3JldmVyIGluIGNocm9tZS5cbiAgICAgIGlmIChhdWRpby5hdWRpbyAmJiBhdWRpby5hdWRpby5wcmVsb2FkKSB7XG4gICAgICAgIGF1ZGlvLmF1ZGlvLnByZWxvYWQgPSAnbm9uZSc7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgJGF1ZGlvV3JhcHBlci5hZGRDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIHJldHVybiAkYXVkaW9XcmFwcGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBjYXJkIGZvb3RlclxuICAgKlxuICAgKiBAcmV0dXJucyB7KnxqUXVlcnl8SFRNTEVsZW1lbnR9IENhcmQgZm9vdGVyIGVsZW1lbnRcbiAgICovXG4gIGNyZWF0ZUNhcmRGb290ZXIoKSB7XG4gICAgY29uc3QgJGNhcmRGb290ZXIgPSAkKCc8ZGl2PicsIHtcbiAgICAgICdjbGFzcyc6ICdoNXAtZGlhbG9nY2FyZHMtY2FyZC1mb290ZXInXG4gICAgfSk7XG5cbiAgICBsZXQgY2xhc3Nlc1JlcGV0aXRpb24gPSAnaDVwLWRpYWxvZ2NhcmRzLWJ1dHRvbi1oaWRkZW4nO1xuICAgIGxldCBhdHRyaWJ1dGVUYWJpbmRleCA9ICctMSc7XG5cbiAgICBpZiAodGhpcy5wYXJhbXMubW9kZSA9PT0gJ3JlcGV0aXRpb24nKSB7XG4gICAgICBjbGFzc2VzUmVwZXRpdGlvbiA9ICcnO1xuICAgICAgaWYgKHRoaXMucGFyYW1zLmJlaGF2aW91ci5xdWlja1Byb2dyZXNzaW9uKSB7XG4gICAgICAgIGNsYXNzZXNSZXBldGl0aW9uID0gJ2g1cC1kaWFsb2djYXJkcy1xdWljay1wcm9ncmVzc2lvbic7XG4gICAgICAgIGF0dHJpYnV0ZVRhYmluZGV4ID0gJzAnO1xuICAgICAgfVxuXG4gICAgICAkY2FyZEZvb3Rlci5hZGRDbGFzcygnaDVwLXJlcGV0aXRpb24nKTtcbiAgICB9XG5cbiAgICB0aGlzLiRidXR0b25UdXJuID0gSDVQLkpvdWJlbFVJLmNyZWF0ZUJ1dHRvbih7XG4gICAgICAnY2xhc3MnOiAnaDVwLWRpYWxvZ2NhcmRzLXR1cm4nLFxuICAgICAgJ2h0bWwnOiB0aGlzLnBhcmFtcy5hbnN3ZXJcbiAgICB9KS5hcHBlbmRUbygkY2FyZEZvb3Rlcik7XG5cbiAgICB0aGlzLiRidXR0b25TaG93U3VtbWFyeSA9IEg1UC5Kb3ViZWxVSS5jcmVhdGVCdXR0b24oe1xuICAgICAgJ2NsYXNzJzogJ2g1cC1kaWFsb2djYXJkcy1zaG93LXN1bW1hcnkgaDVwLWRpYWxvZ2NhcmRzLWJ1dHRvbi1nb25lJyxcbiAgICAgICdodG1sJzogdGhpcy5wYXJhbXMuc2hvd1N1bW1hcnlcbiAgICB9KS5hcHBlbmRUbygkY2FyZEZvb3Rlcik7XG5cbiAgICB0aGlzLiRidXR0b25JbmNvcnJlY3QgPSBINVAuSm91YmVsVUkuY3JlYXRlQnV0dG9uKHtcbiAgICAgICdjbGFzcyc6ICdoNXAtZGlhbG9nY2FyZHMtYW5zd2VyLWJ1dHRvbicsXG4gICAgICAnaHRtbCc6IHRoaXMucGFyYW1zLmluY29ycmVjdEFuc3dlclxuICAgIH0pLmFkZENsYXNzKCdpbmNvcnJlY3QnKVxuICAgICAgLmFkZENsYXNzKGNsYXNzZXNSZXBldGl0aW9uKVxuICAgICAgLmF0dHIoJ3RhYmluZGV4JywgYXR0cmlidXRlVGFiaW5kZXgpXG4gICAgICAuYXBwZW5kVG8oJGNhcmRGb290ZXIpO1xuXG4gICAgdGhpcy4kYnV0dG9uQ29ycmVjdCA9IEg1UC5Kb3ViZWxVSS5jcmVhdGVCdXR0b24oe1xuICAgICAgJ2NsYXNzJzogJ2g1cC1kaWFsb2djYXJkcy1hbnN3ZXItYnV0dG9uJyxcbiAgICAgICdodG1sJzogdGhpcy5wYXJhbXMuY29ycmVjdEFuc3dlclxuICAgIH0pLmFkZENsYXNzKCdjb3JyZWN0JylcbiAgICAgIC5hZGRDbGFzcyhjbGFzc2VzUmVwZXRpdGlvbilcbiAgICAgIC5hdHRyKCd0YWJpbmRleCcsIGF0dHJpYnV0ZVRhYmluZGV4KVxuICAgICAgLmFwcGVuZFRvKCRjYXJkRm9vdGVyKTtcblxuICAgIHJldHVybiAkY2FyZEZvb3RlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYnV0dG9uIGxpc3RlbmVycy5cbiAgICogV2lsbCBiZSBsb3N0IHdoZW4gdGhlIGVsZW1lbnQgaXMgcmVtb3ZlZCBmcm9tIERPTS5cbiAgICovXG4gIGNyZWF0ZUJ1dHRvbkxpc3RlbmVycygpIHtcbiAgICB0aGlzLiRidXR0b25JbmNvcnJlY3RcbiAgICAgIC51bmJpbmQoJ2NsaWNrJylcbiAgICAgIC5jbGljayhldmVudCA9PiB7XG4gICAgICAgIGlmICghZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnaDVwLWRpYWxvZ2NhcmRzLXF1aWNrLXByb2dyZXNzaW9uJykpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYWxsYmFja3Mub25OZXh0Q2FyZCh7Y2FyZElkOiB0aGlzLmlkLCByZXN1bHQ6IGZhbHNlfSk7XG4gICAgICB9KTtcblxuICAgIHRoaXMuJGJ1dHRvblR1cm5cbiAgICAgIC51bmJpbmQoJ2NsaWNrJylcbiAgICAgIC5jbGljaygoKSA9PiB7XG4gICAgICAgIHRoaXMudHVybkNhcmQoKTtcbiAgICAgIH0pO1xuXG4gICAgdGhpcy4kYnV0dG9uQ29ycmVjdFxuICAgICAgLnVuYmluZCgnY2xpY2snKVxuICAgICAgLmNsaWNrKGV2ZW50ID0+IHtcbiAgICAgICAgaWYgKCFldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdoNXAtZGlhbG9nY2FyZHMtcXVpY2stcHJvZ3Jlc3Npb24nKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNhbGxiYWNrcy5vbk5leHRDYXJkKHtjYXJkSWQ6IHRoaXMuaWQsIHJlc3VsdDogdHJ1ZX0pO1xuICAgICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2hvdyBzdW1tYXJ5IGJ1dHRvbiBvbiBsYXN0IGNhcmQuXG4gICAqXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIGNhbGxlZCBvbiBidXR0b24gY2xpY2suXG4gICAqL1xuICBzaG93U3VtbWFyeUJ1dHRvbihjYWxsYmFjaykge1xuICAgIC8vIEhpZGUgYW5zd2VyIGJ1dHRvbnNcbiAgICB0aGlzLmdldERPTSgpXG4gICAgICAuZmluZCgnLmg1cC1kaWFsb2djYXJkcy1hbnN3ZXItYnV0dG9uJylcbiAgICAgIC5hZGRDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWJ1dHRvbi1oaWRkZW4nKVxuICAgICAgLmF0dHIoJ3RhYmluZGV4JywgJy0xJyk7XG5cbiAgICAvLyBTd2FwIHR1cm4gYnV0dG9uIHdpdGggc2hvdyBzdW1tYXJ5IGJ1dHRvblxuICAgIHRoaXMuJGJ1dHRvblR1cm5cbiAgICAgIC5hZGRDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWJ1dHRvbi1nb25lJyk7XG5cbiAgICB0aGlzLiRidXR0b25TaG93U3VtbWFyeVxuICAgICAgLmNsaWNrKCgpID0+IGNhbGxiYWNrKCkpXG4gICAgICAucmVtb3ZlQ2xhc3MoJ2g1cC1kaWFsb2djYXJkcy1idXR0b24tZ29uZScpXG4gICAgICAuZm9jdXMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIaWRlIHN1bW1hcnkgYnV0dG9uIGFuZCBzaG93IGFuc3dlciBidXR0b25zIGFnYWluLlxuICAgKi9cbiAgaGlkZVN1bW1hcnlCdXR0b24oKSB7XG4gICAgaWYgKHRoaXMucGFyYW1zLm1vZGUgPT09ICdub3JtYWwnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5nZXRET00oKVxuICAgICAgLmZpbmQoJy5oNXAtZGlhbG9nY2FyZHMtYW5zd2VyLWJ1dHRvbicpXG4gICAgICAucmVtb3ZlQ2xhc3MoJ2g1cC1kaWFsb2djYXJkcy1idXR0b24taGlkZGVuJylcbiAgICAgIC5hdHRyKCd0YWJpbmRleCcsICcwJyk7XG5cbiAgICAvLyBTd2FwIHR1cm4gYnV0dG9uIHdpdGggc2hvdyBzdW1tYXJ5IGJ1dHRvblxuICAgIHRoaXMuJGJ1dHRvblR1cm5cbiAgICAgIC5yZW1vdmVDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWJ1dHRvbi1nb25lJyk7XG5cbiAgICB0aGlzLiRidXR0b25TaG93U3VtbWFyeVxuICAgICAgLmFkZENsYXNzKCdoNXAtZGlhbG9nY2FyZHMtYnV0dG9uLWdvbmUnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93IHRoZSBvcHBvc2l0ZSBzaWRlIG9mIHRoZSBjYXJkLlxuICAgKi9cbiAgdHVybkNhcmQoKSB7XG4gICAgY29uc3QgJGNhcmQgPSB0aGlzLmdldERPTSgpO1xuICAgIGNvbnN0ICRjID0gJGNhcmQuZmluZCgnLmg1cC1kaWFsb2djYXJkcy1jYXJkLWNvbnRlbnQnKTtcbiAgICBjb25zdCAkY2ggPSAkY2FyZC5maW5kKCcuaDVwLWRpYWxvZ2NhcmRzLWNhcmRob2xkZXInKS5hZGRDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWNvbGxhcHNlJyk7XG5cbiAgICAvLyBSZW1vdmVzIHRpcCwgc2luY2UgaXQgZGVzdHJveXMgdGhlIGFuaW1hdGlvbjpcbiAgICAkYy5maW5kKCcuam91YmVsLXRpcC1jb250YWluZXInKS5yZW1vdmUoKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgLy8gQ2hlY2sgaWYgY2FyZCBoYXMgYmVlbiB0dXJuZWQgYmVmb3JlXG4gICAgICBjb25zdCB0dXJuZWQgPSB0aGlzLmlzVHVybmVkKCk7XG5cbiAgICAgIC8vIFVwZGF0ZSBIVE1MIGNsYXNzIGZvciBjYXJkXG4gICAgICAkYy50b2dnbGVDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLXR1cm5lZCcsICF0dXJuZWQpO1xuXG4gICAgICAkY2gucmVtb3ZlQ2xhc3MoJ2g1cC1kaWFsb2djYXJkcy1jb2xsYXBzZScpO1xuICAgICAgdGhpcy5jaGFuZ2VUZXh0KHR1cm5lZCA/IHRoaXMuZ2V0VGV4dCgpIDogdGhpcy5nZXRBbnN3ZXIoKSk7XG5cbiAgICAgIC8vIEltYWdlIHNob3duL2hpZGRlbiB2aWEgQ1NTXG5cbiAgICAgIC8vIEF1ZGlvIGJ1dHRvbnMgc2hvd24vaGlkZGVuIHZpYSBDU1NcbiAgICAgIHRoaXMuc3RvcEF1ZGlvKCk7XG5cbiAgICAgIC8vIFRvZ2dsZSBzdGF0ZSBmb3Iga25vd2xlZGdlIGNvbmZpcm1hdGlvbiBidXR0b25zXG4gICAgICBpZiAodGhpcy5wYXJhbXMubW9kZSA9PT0gJ3JlcGV0aXRpb24nICYmICF0aGlzLnBhcmFtcy5iZWhhdmlvdXIucXVpY2tQcm9ncmVzc2lvbikge1xuICAgICAgICBjb25zdCAkYW5zd2VyQnV0dG9ucyA9ICRjYXJkLmZpbmQoJy5oNXAtZGlhbG9nY2FyZHMtYW5zd2VyLWJ1dHRvbicpO1xuXG4gICAgICAgIC8vIERvbid0IHJldm9rZSBxdWljayBwcm9ncmVzc2lvbiBhZnRlciBjYXJkIHdhcyB0dXJuZWQuXG4gICAgICAgIGlmICgkYW5zd2VyQnV0dG9ucy5oYXNDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLXF1aWNrLXByb2dyZXNzaW9uJykgPT09IGZhbHNlKSB7XG4gICAgICAgICAgJGFuc3dlckJ1dHRvbnNcbiAgICAgICAgICAgIC5hZGRDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLXF1aWNrLXByb2dyZXNzaW9uJylcbiAgICAgICAgICAgIC5hdHRyKCd0YWJpbmRleCcsIDApO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEFkZCBiYWNrc2lkZSB0aXBcbiAgICAgIC8vIEhhZCB0byB3YWl0IGEgbGl0dGxlLCBpZiBub3QgQ2hyb21lIHdpbGwgZGlzcGxhY2UgdGlwIGljb25cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmFkZFRpcFRvQ2FyZCgkYywgdHVybmVkID8gJ2Zyb250JyA6ICdiYWNrJyk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmNhbGxiYWNrcy5vbkNhcmRUdXJuZWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5vbkNhcmRUdXJuZWQodHVybmVkKTtcbiAgICAgICAgfVxuICAgICAgfSwgMjAwKTtcblxuICAgICAgdGhpcy5yZXNpemVPdmVyZmxvd2luZ1RleHQoKTtcblxuICAgICAgLy8gRm9jdXMgdGV4dFxuICAgICAgdGhpcy4kY2FyZFRleHRBcmVhLmZvY3VzKCk7XG4gICAgfSwgMjAwKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdGV4dCBvZiBjYXJkLCB1c2VkIHdoZW4gdHVybmluZyBjYXJkcy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgVGV4dCB0byBzZXQuXG4gICAqL1xuICBjaGFuZ2VUZXh0KHRleHQpIHtcbiAgICB0aGlzLiRjYXJkVGV4dEFyZWEuaHRtbCh0ZXh0KTtcbiAgICB0aGlzLiRjYXJkVGV4dEFyZWEudG9nZ2xlQ2xhc3MoJ2hpZGUnLCAoIXRleHQgfHwgIXRleHQubGVuZ3RoKSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHByb2dyZXNzIGZvciBhc3Npc3RpdmUgdGVjaG5vbG9naWVzLlxuICAgKiBAcGFyYW0ge251bWJlcn0gcG9zaXRpb24gUG9zaXRpb24uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBtYXggTWF4aW11bSBwb3NpdGlvbi5cbiAgICovXG4gIHNldFByb2dyZXNzVGV4dChwb3NpdGlvbiwgdG90YWwpIHtcbiAgICBpZiAodGhpcy5wYXJhbXMubW9kZSAhPT0gJ3JlcGV0aXRpb24nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcHJvZ3Jlc3NUZXh0ID0gdGhpcy5wYXJhbXMucHJvZ3Jlc3NUZXh0XG4gICAgICAucmVwbGFjZSgnQGNhcmQnLCAocG9zaXRpb24pLnRvU3RyaW5nKCkpXG4gICAgICAucmVwbGFjZSgnQHRvdGFsJywgKHRvdGFsKS50b1N0cmluZygpKTtcblxuICAgIHRoaXMuJGNhcmRXcmFwcGVyLmF0dHIoJ2FyaWEtbGFiZWwnLCBwcm9ncmVzc1RleHQpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlc2l6ZSB0aGUgZm9udC1zaXplIG9mIHRleHQgYXJlYXMgdGhhdCB0ZW5kIHRvIG92ZXJmbG93IHdoZW4gZGlhbG9nIGNhcmRzXG4gICAqIGlzIHNxdWVlemVkIGludG8gYSB0aW55IGNvbnRhaW5lci5cbiAgICovXG4gIHJlc2l6ZU92ZXJmbG93aW5nVGV4dCgpIHtcbiAgICBpZiAoIXRoaXMucGFyYW1zLmJlaGF2aW91ci5zY2FsZVRleHROb3RDYXJkKSB7XG4gICAgICByZXR1cm47IC8vIE5vIHRleHQgc2NhbGluZyB0b2RheVxuICAgIH1cblxuICAgIC8vIFJlc2l6ZSBjYXJkIHRleHQgaWYgbmVlZGVkXG4gICAgY29uc3QgJHRleHRDb250YWluZXIgPSB0aGlzLmdldERPTSgpLmZpbmQoJy5oNXAtZGlhbG9nY2FyZHMtY2FyZC10ZXh0Jyk7XG4gICAgY29uc3QgJHRleHQgPSAkdGV4dENvbnRhaW5lci5jaGlsZHJlbigpO1xuICAgIHRoaXMucmVzaXplVGV4dFRvRml0Q29udGFpbmVyKCR0ZXh0Q29udGFpbmVyLCAkdGV4dCk7XG4gIH1cblxuICAvKipcbiAgICogSW5jcmVhc2Ugb3IgZGVjcmVhc2UgZm9udCBzaXplIHNvIHRleHQgd2lsIGZpdCBpbnNpZGUgY29udGFpbmVyLlxuICAgKlxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJHRleHRDb250YWluZXIgT3V0ZXIgY29udGFpbmVyLCBtdXN0IGhhdmUgYSBzZXQgc2l6ZS5cbiAgICogQHBhcmFtIHtqUXVlcnl9ICR0ZXh0IElubmVyIHRleHQgY29udGFpbmVyXG4gICAqL1xuICByZXNpemVUZXh0VG9GaXRDb250YWluZXIoJHRleHRDb250YWluZXIsICR0ZXh0KSB7XG4gICAgLy8gUmVzZXQgdGV4dCBzaXplXG4gICAgJHRleHQuY3NzKCdmb250LXNpemUnLCAnJyk7XG5cbiAgICBpZiAod2luZG93Lm9yaWVudGF0aW9uID09PSA5MCkge1xuICAgICAgY29uc3QgdGV4dElubmVyID0gdGhpcy5nZXRET00oKS5maW5kKCcuaDVwLWRpYWxvZ2NhcmRzLWNhcmQtdGV4dC1pbm5lcicpLmdldCgwKTtcblxuICAgICAgaWYgKHRleHRJbm5lci5jbGllbnRIZWlnaHQgPCB0ZXh0SW5uZXIuc2Nyb2xsSGVpZ2h0KSB7XG4gICAgICAgIGxldCBmb250U2l6ZSA9IHBhcnNlRmxvYXQoJHRleHQuY3NzKCdmb250LXNpemUnKSk7XG4gICAgICAgIHdoaWxlIChmb250U2l6ZSA+IENhcmQuTUlOU0NBTEUgJiYgdGV4dElubmVyLmNsaWVudEhlaWdodCA8IHRleHRJbm5lci5zY3JvbGxIZWlnaHQpIHtcbiAgICAgICAgICBmb250U2l6ZSAtPSBDYXJkLlNDQUxFSU5URVJWQUw7XG4gICAgICAgICAgJHRleHQuY3NzKCdmb250LXNpemUnLCBgJHtmb250U2l6ZX1weGApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgLy8gTWVhc3VyZSBjb250YWluZXIgYW5kIHRleHQgaGVpZ2h0XG4gICAgICBjb25zdCBjdXJyZW50VGV4dENvbnRhaW5lckhlaWdodCA9ICR0ZXh0Q29udGFpbmVyLmdldCgwKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgICBsZXQgY3VycmVudFRleHRIZWlnaHQgPSAkdGV4dC5nZXQoMCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuICAgICAgY29uc3QgcGFyZW50Rm9udFNpemUgPSBwYXJzZUZsb2F0KCR0ZXh0Q29udGFpbmVyLmNzcygnZm9udC1zaXplJykpO1xuICAgICAgbGV0IGZvbnRTaXplID0gcGFyc2VGbG9hdCgkdGV4dC5jc3MoJ2ZvbnQtc2l6ZScpKTtcblxuICAgICAgY29uc3QgJGlubmVyID0gdGhpcy5nZXRET00oKS5jbG9zZXN0KCcuaDVwLWNvbnRhaW5lcicpO1xuICAgICAgY29uc3QgbWFpbkZvbnRTaXplID0gcGFyc2VGbG9hdCgkaW5uZXIuY3NzKCdmb250LXNpemUnKSk7XG5cbiAgICAgIC8vIERlY3JlYXNlIGZvbnQgc2l6ZVxuICAgICAgaWYgKGN1cnJlbnRUZXh0SGVpZ2h0ID4gY3VycmVudFRleHRDb250YWluZXJIZWlnaHQpIHtcbiAgICAgICAgbGV0IGRlY3JlYXNlRm9udFNpemUgPSB0cnVlO1xuICAgICAgICB3aGlsZSAoZGVjcmVhc2VGb250U2l6ZSkge1xuXG4gICAgICAgICAgZm9udFNpemUgLT0gQ2FyZC5TQ0FMRUlOVEVSVkFMO1xuXG4gICAgICAgICAgaWYgKGZvbnRTaXplIDwgQ2FyZC5NSU5TQ0FMRSkge1xuICAgICAgICAgICAgZGVjcmVhc2VGb250U2l6ZSA9IGZhbHNlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJHRleHQuY3NzKCdmb250LXNpemUnLCAoZm9udFNpemUgLyBwYXJlbnRGb250U2l6ZSkgKyAnZW0nKTtcblxuICAgICAgICAgIGN1cnJlbnRUZXh0SGVpZ2h0ID0gJHRleHQuZ2V0KDApLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgICBpZiAoY3VycmVudFRleHRIZWlnaHQgPD0gY3VycmVudFRleHRDb250YWluZXJIZWlnaHQpIHtcbiAgICAgICAgICAgIGRlY3JlYXNlRm9udFNpemUgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgfVxuICAgICAgZWxzZSB7IC8vIEluY3JlYXNlIGZvbnQgc2l6ZVxuICAgICAgICBsZXQgaW5jcmVhc2VGb250U2l6ZSA9IHRydWU7XG4gICAgICAgIHdoaWxlIChpbmNyZWFzZUZvbnRTaXplKSB7XG4gICAgICAgICAgZm9udFNpemUgKz0gQ2FyZC5TQ0FMRUlOVEVSVkFMO1xuXG4gICAgICAgICAgLy8gQ2FwIGF0ICAxNnB4XG4gICAgICAgICAgaWYgKGZvbnRTaXplID4gbWFpbkZvbnRTaXplKSB7XG4gICAgICAgICAgICBpbmNyZWFzZUZvbnRTaXplID0gZmFsc2U7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBTZXQgcmVsYXRpdmUgZm9udCBzaXplIHRvIHNjYWxlIHdpdGggZnVsbCBzY3JlZW4uXG4gICAgICAgICAgJHRleHQuY3NzKCdmb250LXNpemUnLCBmb250U2l6ZSAvIHBhcmVudEZvbnRTaXplICsgJ2VtJyk7XG4gICAgICAgICAgY3VycmVudFRleHRIZWlnaHQgPSAkdGV4dC5nZXQoMCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuICAgICAgICAgIGlmIChjdXJyZW50VGV4dEhlaWdodCA+PSBjdXJyZW50VGV4dENvbnRhaW5lckhlaWdodCkge1xuICAgICAgICAgICAgaW5jcmVhc2VGb250U2l6ZSA9IGZhbHNlO1xuICAgICAgICAgICAgZm9udFNpemUgPSBmb250U2l6ZSAtIENhcmQuU0NBTEVJTlRFUlZBTDtcbiAgICAgICAgICAgICR0ZXh0LmNzcygnZm9udC1zaXplJywgZm9udFNpemUgLyBwYXJlbnRGb250U2l6ZSArICdlbScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIHRpcCB0byBhIGNhcmRcbiAgICpcbiAgICogQHBhcmFtIHtqUXVlcnl9ICRjYXJkIFRoZSBjYXJkXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbc2lkZT1mcm9udF0gV2hpY2ggc2lkZSBvZiB0aGUgY2FyZFxuICAgKiBAcGFyYW0ge051bWJlcn0gW2luZGV4XSBJbmRleCBvZiBjYXJkXG4gICAqL1xuICBhZGRUaXBUb0NhcmQoJGNhcmQsIHNpZGUsIGluZGV4KSB7XG4gICAgLy8gTWFrZSBzdXJlIHdlIGhhdmUgYSBzaWRlXG4gICAgaWYgKHNpZGUgIT09ICdiYWNrJykge1xuICAgICAgc2lkZSA9ICdmcm9udCc7XG4gICAgfVxuXG4gICAgLy8gTWFrZSBzdXJlIHdlIGhhdmUgYW4gaW5kZXhcblxuICAgIGlmIChpbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBpbmRleCA9IHRoaXMuaWQ7XG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIGFueSBvbGQgdGlwc1xuICAgICRjYXJkLmZpbmQoJy5qb3ViZWwtdGlwLWNvbnRhaW5lcicpLnJlbW92ZSgpO1xuXG4gICAgLy8gQWRkIG5ldyB0aXAgaWYgc2V0IGFuZCBoYXMgbGVuZ3RoIGFmdGVyIHRyaW1cbiAgICBjb25zdCB0aXAgPSAodGhpcy5jYXJkW3NpZGVdLnRpcCB8fCAnJykudHJpbSgpO1xuICAgIGlmICh0aXAubGVuZ3RoKSB7XG4gICAgICAkY2FyZC5maW5kKCcuaDVwLWRpYWxvZ2NhcmRzLWNhcmQtdGV4dC13cmFwcGVyIC5oNXAtZGlhbG9nY2FyZHMtY2FyZC10ZXh0LWlubmVyJylcbiAgICAgICAgLmFmdGVyKEg1UC5Kb3ViZWxVSS5jcmVhdGVUaXAodGlwLCB7XG4gICAgICAgICAgdGlwTGFiZWw6IHRoaXMucGFyYW1zLnRpcEJ1dHRvbkxhYmVsXG4gICAgICAgIH0pKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2V0IGZvY3VzIHRvIGEgZ2l2ZW4gY2FyZC5cbiAgICogQHBhcmFtIHtib29sZWFufSBmb3JjZSBJZiB0cnVlLCBkb24ndCB3YWl0IGZvciB0cmFuc2l0aW9uLlxuICAgKi9cbiAgc2V0Q2FyZEZvY3VzKGZvcmNlKSB7XG4gICAgaWYgKGZvcmNlID09PSB0cnVlKSB7XG4gICAgICB0aGlzLiRjYXJkVGV4dEFyZWEuZm9jdXMoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAvLyBXYWl0IGZvciB0cmFuc2l0aW9uLCB0aGVuIHNldCBmb2N1c1xuICAgICAgY29uc3QgJGNhcmQgPSB0aGlzLmdldERPTSgpO1xuICAgICAgJGNhcmQub25lKCd0cmFuc2l0aW9uZW5kJywgKCkgPT4ge1xuICAgICAgICAkY2FyZC5mb2N1cygpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFN0b3AgYXVkaW8gb2YgY2FyZC5cbiAgICovXG4gIHN0b3BBdWRpbygpIHtcbiAgICBjb25zdCBzaWRlcyA9IFsnZnJvbnQnLCAnYmFjayddO1xuICAgIHNpZGVzLmZvckVhY2goc2lkZSA9PiB7XG4gICAgICBpZiAoIXRoaXMuYXVkaW9zW3NpZGVdIHx8ICF0aGlzLmF1ZGlvc1tzaWRlXS5hdWRpbykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8qXG4gICAgICAgKiBXZSBuZWVkIHRvIHJlc2V0IHRoZSBhdWRpbyBidXR0b24gdG8gaXRzIGluaXRpYWwgdmlzdWFsIHN0YXRlLCBidXQgaXRcbiAgICAgICAqIGRvZXNuJ3QgaGF2ZSBhIGZ1bmN0aW9uIHRvIHRvIHRoYXQgLT4gZm9yY2UgZW5kZWQgZXZlbnQgYW5kIHJlbG9hZC5cbiAgICAgICAqL1xuICAgICAgaWYgKHRoaXMuYXVkaW9zW3NpZGVdLmF1ZGlvLmR1cmF0aW9uID4gMCkge1xuICAgICAgICB0aGlzLmF1ZGlvc1tzaWRlXS5hdWRpby5wYXVzZSgpO1xuICAgICAgICB0aGlzLmF1ZGlvc1tzaWRlXS5hdWRpby5jdXJyZW50VGltZSA9IE1hdGguZmxvb3IodGhpcy5hdWRpb3Nbc2lkZV0uYXVkaW8uZHVyYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5hdWRpb3Nbc2lkZV0uYXVkaW8ubG9hZCkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmF1ZGlvc1tzaWRlXS5hdWRpby5sb2FkKCk7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGNhcmQncyBET01cbiAgICpcbiAgICogQHJldHVybiB7alF1ZXJ5fSBDYXJkJ3MgRE9NLlxuICAgKi9cbiAgZ2V0RE9NKCkge1xuICAgIHJldHVybiB0aGlzLiRjYXJkV3JhcHBlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgbm8gdGV4dCBtb2RlLlxuICAgKi9cbiAgc2V0Tm9UZXh0KCkge1xuICAgIHRoaXMuZ2V0RE9NKCkuYWRkQ2xhc3MoJ2g1cC1uby10ZXh0Jyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGNhcmQncyB0ZXh0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IENhcmQncyB0ZXh0LlxuICAgKi9cbiAgZ2V0VGV4dCgpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJkLmZyb250LnRleHQ7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGNhcmQncyBhbnN3ZXIuXG4gICAqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gQ2FyZCdzIGFuc3dlci5cbiAgICovXG4gIGdldEFuc3dlcigpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJkLmJhY2sudGV4dDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgY2FyZCdzIGltYWdlIHdyYXBwZXIuXG4gICAqXG4gICAqIEByZXR1cm4ge2pRdWVyeX0gQ2FyZCdzIGltYWdlLlxuICAgKi9cbiAgZ2V0SW1hZ2VXcmFwcGVyKCkge1xuICAgIHJldHVybiB0aGlzLiRpbWFnZVdyYXBwZXI7XG4gIH1cblxuICAvKipcbiAgICogU2V0IGNhcmQgaW1hZ2UgaGVpZ2h0LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaGVpZ2h0IENTUyBoZWlnaHQgdmFsdWUuXG4gICAqL1xuICBzZXRJbWFnZUhlaWdodChoZWlnaHQpIHtcbiAgICB0aGlzLiRpbWFnZVdyYXBwZXIuY3NzKCdoZWlnaHQnLCBoZWlnaHQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBjYXJkJ3MgQXVkaW8uXG4gICAqXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9IENhcmQncyBhdWRpby5cbiAgICovXG4gIGdldEF1ZGlvKCkge1xuICAgIHJldHVybiB0aGlzLmlzVHVybmVkKCkgPyB0aGlzLiRhdWRpb1dyYXBwZXJzLmJhY2sgOiB0aGlzLiRhdWRpb1dyYXBwZXJzLmZyb250O1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVjdCB3aGV0aGVyIGNhcmQgaXMgdHVybmVkLlxuICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlLCBpZiBjYXJkIGlzIHR1cm5lZC5cbiAgICovXG4gIGlzVHVybmVkKCkge1xuICAgIHJldHVybiB0aGlzLmdldERPTSgpXG4gICAgICAuZmluZCgnLmg1cC1kaWFsb2djYXJkcy1jYXJkLWNvbnRlbnQnKVxuICAgICAgLmhhc0NsYXNzKCdoNXAtZGlhbG9nY2FyZHMtdHVybmVkJyk7XG4gIH1cblxuICAvKipcbiAgICogUmVzZXQgY2FyZC5cbiAgICovXG4gIHJlc2V0KCkge1xuICAgIGNvbnN0ICRjYXJkID0gdGhpcy5nZXRET00oKTtcblxuICAgICRjYXJkLnJlbW92ZUNsYXNzKCdoNXAtZGlhbG9nY2FyZHMtcHJldmlvdXMnKTtcbiAgICAkY2FyZC5yZW1vdmVDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLWN1cnJlbnQnKTtcblxuICAgIHRoaXMuY2hhbmdlVGV4dCh0aGlzLmdldFRleHQoKSk7XG5cbiAgICBjb25zdCAkY2FyZENvbnRlbnQgPSAkY2FyZC5maW5kKCcuaDVwLWRpYWxvZ2NhcmRzLWNhcmQtY29udGVudCcpO1xuICAgICRjYXJkQ29udGVudC5yZW1vdmVDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLXR1cm5lZCcpO1xuICAgIHRoaXMuYWRkVGlwVG9DYXJkKCRjYXJkQ29udGVudCwgJ2Zyb250JywgdGhpcy5pZCk7XG5cbiAgICBpZiAoIXRoaXMucGFyYW1zLmJlaGF2aW91ci5xdWlja1Byb2dyZXNzaW9uKSB7XG4gICAgICAkY2FyZC5maW5kKCcuaDVwLWRpYWxvZ2NhcmRzLWFuc3dlci1idXR0b24nKS5yZW1vdmVDbGFzcygnaDVwLWRpYWxvZ2NhcmRzLXF1aWNrLXByb2dyZXNzaW9uJyk7XG4gICAgfVxuICAgIHRoaXMuaGlkZVN1bW1hcnlCdXR0b24oKTtcbiAgfVxufVxuXG4vLyBDb25zdGFudHNcbkNhcmQuU0NBTEVJTlRFUlZBTCA9IDAuMjtcbkNhcmQuTUFYU0NBTEUgPSAxNjtcbkNhcmQuTUlOU0NBTEUgPSA0O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards-card.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards-summary-screen.js":
/*!*******************************************************!*\
  !*** ./src/scripts/h5p-dialogcards-summary-screen.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar SummaryScreen = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   */\n  function SummaryScreen(params, callbacks) {\n    var _this = this;\n\n    this.params = params;\n    this.callbacks = callbacks;\n    this.currentCallback = callbacks.nextRound;\n    this.fields = [];\n    this.container = document.createElement('div');\n    this.container.classList.add('h5p-dialogcards-summary-screen');\n    var containerRound = this.createContainerDOM(params.summary);\n    this.fields['round'] = containerRound.getElementsByClassName('h5p-dialogcards-summary-subheader')[0];\n    this.fields['h5p-dialogcards-round-cards-right'] = this.addTableRow(containerRound, {\n      category: this.params.summaryCardsRight,\n      symbol: 'h5p-dialogcards-check'\n    });\n    this.fields['h5p-dialogcards-round-cards-wrong'] = this.addTableRow(containerRound, {\n      category: this.params.summaryCardsWrong,\n      symbol: 'h5p-dialogcards-times'\n    });\n    this.fields['h5p-dialogcards-round-cards-not-shown'] = this.addTableRow(containerRound, {\n      category: this.params.summaryCardsNotShown\n    });\n    var containerOverall = this.createContainerDOM(params.summaryOverallScore);\n    this.fields['h5p-dialogcards-overall-cards-completed'] = this.addTableRow(containerOverall, {\n      category: this.params.summaryCardsCompleted,\n      symbol: 'h5p-dialogcards-check'\n    });\n    this.fields['h5p-dialogcards-overall-completed-rounds'] = this.addTableRow(containerOverall, {\n      category: this.params.summaryCompletedRounds,\n      symbol: ''\n    });\n    var message = document.createElement('div');\n    message.classList.add('h5p-dialogcards-summary-message');\n    this.fields['message'] = message;\n    var buttonNextRound = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-buttonNextRound',\n      'title': this.params.nextRound.replace('@round', 2),\n      'html': this.params.nextRound.replace('@round', 2)\n    }).click(this.currentCallback).get(0);\n    this.fields['button'] = buttonNextRound; // Button to start over including confirmation dialog\n\n    var buttonStartOver = H5P.JoubelUI.createButton({\n      'class': 'h5p-dialogcards-button-restart',\n      'title': this.params.startOver,\n      'html': this.params.startOver\n    }).get(0);\n    var confirmationDialog = this.createConfirmationDialog({\n      l10n: this.params.confirmStartingOver,\n      instance: this\n    }, function () {\n      // Stop interference with confirm dialog animation and goto animation\n      setTimeout(function () {\n        _this.callbacks.retry();\n      }, 100);\n    });\n    /*\n     * For some reason, using $.click to add the listener in the line above\n     * leads to losing the listener when button reappears on next summary screen\n     */\n\n    buttonStartOver.addEventListener('click', function (event) {\n      confirmationDialog.show(event.target.offsetTop);\n    });\n    this.fields['buttonStartOver'] = buttonStartOver; // Footer\n\n    var footer = document.createElement('div');\n    footer.classList.add('h5p-dialogcards-summary-footer');\n    footer.appendChild(buttonStartOver);\n    footer.appendChild(buttonNextRound);\n    this.container.appendChild(containerRound);\n    this.container.appendChild(containerOverall);\n    this.container.appendChild(message);\n    this.container.appendChild(footer);\n    this.hide();\n    return this;\n  }\n  /**\n   * Get DOM of summary screen.\n   * @return {object} Summary screen DOM.\n   */\n\n\n  var _proto = SummaryScreen.prototype;\n\n  _proto.getDOM = function getDOM() {\n    return this.container;\n  }\n  /**\n   * Create container DOM.\n   * @param {string} headerText Header text.\n   * @param {string} [subheaderText=''] Sub-Header text.\n   * @return {object} Container DOM.\n   */\n  ;\n\n  _proto.createContainerDOM = function createContainerDOM(headerText) {\n    var subheaderText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var container = document.createElement('div');\n    container.classList.add('h5p-dialogcards-summary-container');\n    var header = document.createElement('div');\n    header.classList.add('h5p-dialogcards-summary-header');\n    header.innerHTML = headerText;\n    container.appendChild(header);\n    var subheader = document.createElement('div');\n    subheader.classList.add('h5p-dialogcards-summary-subheader');\n    subheader.innerHTML = subheaderText;\n    container.appendChild(subheader);\n    var table = document.createElement('table');\n    table.classList.add('h5p-dialogcards-summary-table');\n    container.appendChild(table);\n    return container;\n  }\n  /**\n   * Add row to a table.\n   * @param {object} container Container to add table to.\n   * @param {object} cols Columns.\n   * @param {string} cols.category Category text.\n   * @param {string} [cols.symbol=''] Symbol.\n   * @param {object} [cols.score] Score value and maximum value.\n   * @param {number|string} [cols.score.value=''] Value.\n   * @param {number|string} [cols.score.max] Maximum value.\n   * @return {object} Score field for updating later.\n   */\n  ;\n\n  _proto.addTableRow = function addTableRow(container, cols) {\n    var table = container.getElementsByClassName('h5p-dialogcards-summary-table')[0];\n    var row = document.createElement('tr');\n    var category = document.createElement('td');\n    category.classList.add('h5p-dialogcards-summary-table-row-category');\n    category.innerHTML = cols.category;\n    row.appendChild(category);\n    var symbol = document.createElement('td');\n    symbol.classList.add('h5p-dialogcards-summary-table-row-symbol');\n\n    if (cols.symbol !== undefined && cols.symbol !== '') {\n      symbol.classList.add(cols.symbol);\n    }\n\n    row.appendChild(symbol);\n    var score = document.createElement('td');\n    score.classList.add('h5p-dialogcards-summary-table-row-score');\n    row.appendChild(score);\n    table.appendChild(row);\n    return score;\n  }\n  /**\n   * Update fields.\n   * @param {object} [args] Arguments.\n   * @param {boolean} [args.done] If true, learner is done.\n   * @param {number} [args.round] Round number.\n   * @param {string} [args.message] Message text.\n   * @param {object[]} [args.results] Results.\n   * @param {string} [args.results.field] Field identifier.\n   * @param {object} [args.results.score] Score for field.\n   * @param {number} [args.results.score.value] Score value for field.\n   * @param {number} [args.results.score.max] Score max value for field.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$done = _ref.done,\n        done = _ref$done === void 0 ? false : _ref$done,\n        _ref$round = _ref.round,\n        round = _ref$round === void 0 ? undefined : _ref$round,\n        _ref$message = _ref.message,\n        message = _ref$message === void 0 ? undefined : _ref$message,\n        _ref$results = _ref.results,\n        results = _ref$results === void 0 ? [] : _ref$results;\n\n    if (done === true) {\n      this.fields['buttonStartOver'].classList.add('h5p-dialogcards-button-gone');\n\n      if (this.params.behaviour.enableRetry) {\n        this.fields['button'].classList.remove('h5p-dialogcards-button-next-round');\n        this.fields['button'].classList.add('h5p-dialogcards-button-restart');\n        this.fields['button'].innerHTML = this.params.retry;\n        this.fields['button'].title = this.params.retry;\n        this.currentCallback = this.callbacks.retry;\n      } else {\n        this.fields['button'].classList.add('h5p-dialogcards-button-gone');\n      }\n    } else {\n      this.fields['buttonStartOver'].classList.remove('h5p-dialogcards-button-gone');\n      this.fields['button'].classList.add('h5p-dialogcards-button-next-round');\n      this.fields['button'].classList.remove('h5p-dialogcards-button-restart');\n      this.fields['button'].innerHTML = this.params.nextRound;\n      this.fields['button'].title = this.params.nextRound;\n      this.currentCallback = this.callbacks.nextRound;\n    }\n\n    H5P.jQuery(this.fields['button']).unbind('click').click(this.currentCallback);\n    this.fields['round'].innerHTML = this.params.round.replace('@round', round);\n\n    if (!done && round !== undefined) {\n      this.fields['button'].innerHTML = this.params.nextRound.replace('@round', round + 1);\n      this.fields['button'].title = this.params.nextRound.replace('@round', round + 1);\n    }\n\n    if (done && message !== undefined && message !== '') {\n      this.fields['message'].classList.remove('h5p-dialogcards-gone');\n      this.fields['message'].innerHTML = message;\n    } else {\n      this.fields['message'].classList.add('h5p-dialogcards-gone');\n    }\n\n    results.forEach(function (result) {\n      var scoreHTML = result.score.value !== undefined ? result.score.value : '';\n\n      if (result.score.max !== undefined) {\n        scoreHTML = \"\".concat(scoreHTML, \"&nbsp;<span class=\\\"h5p-dialogcards-summary-table-row-score-divider\\\">/</span>&nbsp;\").concat(result.score.max);\n      }\n\n      _this2.fields[result.field].innerHTML = scoreHTML;\n    });\n  }\n  /**\n   * Show DOM.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.container.classList.remove('h5p-dialogcards-gone');\n    this.fields['button'].focus();\n  }\n  /**\n   * Hide DOM.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.container.classList.add('h5p-dialogcards-gone');\n  }\n  /**\n   * Add confirmation dialog to button.\n   * @param {object} options Dialog options.\n   * @param {function} clicked Callback for confirmation button.\n   * @return {H5P.ConfirmationDialog|undefined} Confirmation dialog.\n   */\n  ;\n\n  _proto.createConfirmationDialog = function createConfirmationDialog(options, clicked) {\n    options = options || {};\n    var confirmationDialog = new H5P.ConfirmationDialog({\n      instance: options.instance,\n      headerText: options.l10n.header,\n      dialogText: options.l10n.body,\n      cancelText: options.l10n.cancelLabel,\n      confirmText: options.l10n.confirmLabel\n    });\n    confirmationDialog.on('confirmed', function () {\n      clicked();\n    });\n    confirmationDialog.appendTo(this.getContainer());\n    return confirmationDialog;\n  }\n  /**\n   * Find container to attach dialogs to.\n   * @return {HTMLElement} Container to attach dialogs to.\n   */\n  ;\n\n  _proto.getContainer = function getContainer() {\n    var $content = H5P.jQuery('[data-content-id=\"' + self.contentId + '\"].h5p-content');\n    var $containerParents = $content.parents('.h5p-container');\n    var $container;\n\n    if ($containerParents.length !== 0) {\n      // use parent highest up if any\n      $container = $containerParents.last();\n    } else if ($content.length !== 0) {\n      $container = $content;\n    } else {\n      $container = H5P.jQuery(document.body);\n    }\n\n    return $container.get(0);\n  };\n\n  return SummaryScreen;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SummaryScreen);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards-summary-screen.js\n");

/***/ }),

/***/ "./src/scripts/h5p-dialogcards.js":
/*!****************************************!*\
  !*** ./src/scripts/h5p-dialogcards.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _h5p_dialogcards_card_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h5p-dialogcards-card-manager */ \"./src/scripts/h5p-dialogcards-card-manager.js\");\n/* harmony import */ var _h5p_dialogcards_summary_screen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h5p-dialogcards-summary-screen */ \"./src/scripts/h5p-dialogcards-summary-screen.js\");\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar $ = H5P.jQuery;\nvar JoubelUI = H5P.JoubelUI;\n\nvar Dialogcards = /*#__PURE__*/function (_H5P$EventDispatcher) {\n  _inheritsLoose(Dialogcards, _H5P$EventDispatcher);\n\n  /**\n   * Initialize module.\n   *\n   * @constructor\n   *\n   * @param {Object} params Parameters.\n   * @param {Number} id Content id.\n   * @param {Object} contentData Content data, e.g. for saveContentState\n   * @returns {DialogCards} self\n   */\n  function Dialogcards(params, id, contentData) {\n    var _this;\n\n    Dialogcards.idCounter++;\n    _this = _H5P$EventDispatcher.call(this) || this;\n    _this.contentId = _this.id = id;\n    _this.previousState = contentData.previousState || {}; // Var cardOrder stores order of cards to allow resuming of card set.\n    // Var progress stores current card index.\n\n    _this.contentData = contentData || {}; // Strip cards with empty sides\n\n    params.dialogs = params.dialogs || [];\n    params.dialogs = params.dialogs.filter(function (dialog) {\n      if (!dialog.front || !dialog.back) {\n        return false;\n      } // Empty front?\n\n\n      if (!dialog.front.text && !dialog.front.image && !dialog.front.audio) {\n        return false;\n      } // Empty back?\n\n\n      var noBackText = !dialog.back.text;\n      var noBackImage = dialog.back.useImageFromFront && !dialog.front.image || !dialog.back.useImageFromFront && !dialog.back.image;\n      var noBackAudio = dialog.back.useAudioFromFront && !dialog.front.audio || !dialog.back.useAudioFromFront && !dialog.back.audio;\n\n      if (noBackText && noBackImage && noBackAudio) {\n        return false;\n      }\n\n      return true;\n    }); // Set default behavior.\n\n    _this.params = $.extend(true, {\n      title: '',\n      mode: 'normal',\n      description: \"Sit in pairs and make up sentences where you include the expressions below.<br/>Example: I should have said yes, HOWEVER I kept my mouth shut.\",\n      next: \"Next\",\n      prev: \"Previous\",\n      retry: \"Retry\",\n      answer: \"Turn\",\n      correctAnswer: 'I got it right!',\n      incorrectAnswer: 'I got it wrong',\n      round: 'Round @round',\n      cardsLeft: 'Cards left: @number',\n      nextRound: 'Proceed to round @round',\n      startOver: 'Start over',\n      showSummary: 'Next',\n      summary: 'Summary',\n      summaryCardsRight: 'Cards you got right:',\n      summaryCardsWrong: 'Cards you got wrong:',\n      summaryCardsNotShown: 'Cards in pool not shown:',\n      summaryOverallScore: 'Overall Score',\n      summaryCardsCompleted: 'Cards you have completed learning:',\n      summaryCompletedRounds: 'Completed rounds:',\n      summaryAllDone: 'Well done! You got all @cards cards correct @max times in a row each!',\n      progressText: \"Card @card of @total\",\n      cardFrontLabel: \"Card front\",\n      cardBackLabel: \"Card back\",\n      tipButtonLabel: 'Show tip',\n      audioNotSupported: 'Your browser does not support this audio',\n      confirmStartingOver: {\n        header: 'Start over?',\n        body: 'All progress will be lost. Are you sure you want to start over?',\n        cancelLabel: 'Cancel',\n        confirmLabel: 'Start over'\n      },\n      dialogs: [{\n        front: {\n          text: 'Horse'\n        },\n        back: {\n          text: 'Hest',\n          useImageFromFront: true,\n          useAudioFromFront: false\n        }\n      } // {\n      //   front: {\n      //     text: 'Cow'\n      //   },\n      //   back: {\n      //     text: 'Ku',\n      //     useImageFromFront: true,\n      //     useAudioFromFront: false\n      //   }\n      // }\n      ],\n      behaviour: {\n        enableRetry: true,\n        disableBackwardsNavigation: false,\n        scaleTextNotCard: false,\n        randomCards: false,\n        maxProficiency: 5,\n        quickProgression: false\n      }\n    }, params); // Check for no texts at all\n\n    _this.hasNoTexts = _this.params.dialogs.every(function (dialog) {\n      return dialog.front.text === '' && dialog.back.text === '';\n    }); // Check for no audios at all\n\n    _this.hasNoAudios = !_this.params.dialogs.some(function (dialog) {\n      return dialog.front.audio || dialog.back.audio && !dialog.back.useAudioFromFront;\n    }); // TODO: Translations\n\n    _this.cards = [];\n    _this.currentCardId = 0;\n    _this.round = 0; // 0 indicates that DOM needs to be set up\n\n    _this.results = _this.previousState.results || []; // Workaround for iOS\n\n    if (screen.orientation) {\n      screen.orientation.addEventListener('change', function () {\n        _this.handleOrientationChange();\n      });\n    } else {\n      window.addEventListener('orientationchange', function () {\n        _this.handleOrientationChange();\n      });\n    }\n    /*\n     * Workaround (hopefully temporary) for KidsLoopLive that for whatever\n     * reason does not use h5p-resizer.js.\n     */\n\n\n    window.addEventListener('resize', function () {\n      _this.resize();\n    });\n    /**\n     * Attach h5p inside the given container.\n     *\n     * @param {jQuery} $container Container.\n     */\n\n    _this.attach = function ($container) {\n      _this.$inner = $container.addClass('h5p-dialogcards');\n\n      if (_this.params.behaviour.scaleTextNotCard) {\n        $container.addClass('h5p-text-scaling');\n      } // Only pass what's necessary\n\n\n      var managerParams = {\n        mode: _this.params.mode,\n        dialogs: _this.params.dialogs,\n        audioNotSupported: _this.params.audioNotSupported,\n        answer: _this.params.answer,\n        showSummary: _this.params.showSummary,\n        incorrectAnswer: _this.params.incorrectAnswer,\n        correctAnswer: _this.params.correctAnswer,\n        progressText: _this.params.progressText,\n        tipButtonLabel: _this.params.tipButtonLabel,\n        behaviour: {\n          scaleTextNotCard: _this.params.behaviour.scaleTextNotCard,\n          maxProficiency: _this.params.behaviour.maxProficiency,\n          quickProgression: _this.params.behaviour.quickProgression\n        },\n        cardPiles: _this.previousState.cardPiles\n      };\n      _this.cardManager = new _h5p_dialogcards_card_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"](managerParams, _this.id, {\n        onCardTurned: _this.handleCardTurned,\n        onNextCard: _this.nextCard\n      });\n\n      _this.createDOM(_this.round === 0);\n      /*\n       * Goto previously viewed card. It was possible to also recover the turned\n       * state, but it feels sensible to let the previously viewed card be\n       * reviewed starting with the front.\n       */\n\n\n      if (_this.previousState.currentCardId !== undefined) {\n        _this.gotoCard(_this.previousState.currentCardId); // Show summary if previous round was completed but next round not started.\n\n\n        if (_this.params.mode === 'repetition' && _this.results.length === _this.cardIds.length) {\n          _this.showSummary(true);\n        }\n      }\n\n      _this.updateNavigation();\n\n      _this.trigger('resize');\n    };\n    /**\n     * Create DOM.\n     * @param {boolean} firstCall Is first call?\n     */\n\n\n    _this.createDOM = function (firstCall) {\n      _this.cardIds = firstCall && _this.previousState.cardIds ? _this.previousState.cardIds : _this.cardManager.createSelection();\n      _this.cardPoolSize = _this.cardPoolSize || _this.cardManager.getSize();\n\n      if (firstCall === true) {\n        var title = $('<div>' + _this.params.title + '</div>').text().trim();\n        _this.$header = $((title ? '<div class=\"h5p-dialogcards-title\"><div class=\"h5p-dialogcards-title-inner\">' + _this.params.title + '</div></div>' : '') + '<div class=\"h5p-dialogcards-description\">' + _this.params.description + '</div>');\n        _this.summaryScreen = new _h5p_dialogcards_summary_screen__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_this.params, {\n          nextRound: _this.nextRound,\n          retry: _this.restartRepetition\n        });\n      }\n\n      if (firstCall === true) {\n        _this.$cardwrapperSet = _this.initCards(_this.cardIds);\n      } else {\n        _this.$cardwrapperSet.detach();\n\n        _this.$cardwrapperSet = _this.initCards(_this.cardIds);\n\n        _this.$cardSideAnnouncer.before(_this.$cardwrapperSet);\n      }\n\n      _this.$cardwrapperSet.prepend(_this.summaryScreen.getDOM());\n\n      if (firstCall === true) {\n        _this.$cardSideAnnouncer = $('<div>', {\n          html: _this.params.cardFrontLabel,\n          'class': 'h5p-dialogcards-card-side-announcer',\n          'aria-live': 'polite',\n          'aria-hidden': 'true'\n        });\n        _this.$footer = _this.createFooter();\n        _this.$mainContent = $('<div>').append(_this.$header).append(_this.$cardwrapperSet).append(_this.$cardSideAnnouncer).append(_this.$footer).appendTo(_this.$inner); // No card has texts\n\n        if (_this.hasNoTexts) {\n          _this.cards.forEach(function (card) {\n            card.setNoText();\n          });\n        }\n\n        _this.on('reset', function () {\n          this.reset();\n        });\n\n        _this.on('resize', _this.resize); // Set round to previous state if available\n\n\n        _this.round = _this.previousState.round !== undefined ? _this.previousState.round : 1;\n      }\n    };\n    /**\n     * Create footer/navigation line\n     *\n     * @returns {*|jQuery|HTMLElement} Footer element\n     */\n\n\n    _this.createFooter = function () {\n      var $footer = $('<nav>', {\n        'class': 'h5p-dialogcards-footer',\n        'role': 'navigation'\n      });\n\n      if (_this.params.mode === 'normal') {\n        _this.$prev = JoubelUI.createButton({\n          'class': 'h5p-dialogcards-footer-button h5p-dialogcards-prev truncated',\n          'aria-label': _this.params.prev,\n          'title': _this.params.prev\n        }).click(function () {\n          _this.prevCard();\n        }).appendTo($footer);\n        _this.$next = JoubelUI.createButton({\n          'class': 'h5p-dialogcards-footer-button h5p-dialogcards-next truncated',\n          'aria-label': _this.params.next,\n          'title': _this.params.next\n        }).click(function () {\n          _this.nextCard();\n        }).appendTo($footer);\n        _this.$retry = JoubelUI.createButton({\n          'class': 'h5p-dialogcards-footer-button h5p-dialogcards-retry h5p-dialogcards-disabled',\n          'title': _this.params.retry,\n          'html': _this.params.retry\n        }).click(function () {\n          _this.trigger('reset');\n        }).appendTo($footer);\n        _this.$progress = $('<div>', {\n          'id': 'h5p-dialogcards-progress-' + Dialogcards.idCounter,\n          'class': 'h5p-dialogcards-progress',\n          'aria-live': 'assertive'\n        }).appendTo($footer);\n      } else {\n        _this.$round = $('<div>', {\n          'class': 'h5p-dialogcards-round'\n        }).appendTo($footer);\n        _this.$progress = $('<div>', {\n          'class': 'h5p-dialogcards-cards-left',\n          'aria-live': 'assertive'\n        }).appendTo($footer);\n      }\n\n      return $footer;\n    };\n    /**\n     * Called when all cards has been loaded.\n     */\n\n\n    _this.updateImageSize = function () {\n      // Find highest card content\n      var relativeHeightCap = 15;\n      var height = 0;\n\n      var $currentCardContent = _this.cards[_this.currentCardId].getDOM().find('.h5p-dialogcards-card-content');\n\n      _this.params.dialogs.forEach(function (dialog) {\n        var imageHeight;\n\n        if (dialog.front.image) {\n          imageHeight = dialog.front.image.height / dialog.front.image.width * $currentCardContent.get(0).getBoundingClientRect().width;\n\n          if (imageHeight > height) {\n            height = imageHeight;\n          }\n        }\n\n        if (dialog.back.image) {\n          imageHeight = dialog.back.image.height / dialog.back.image.width * $currentCardContent.get(0).getBoundingClientRect().width;\n\n          if (imageHeight > height) {\n            height = imageHeight;\n          }\n        }\n      });\n\n      if (height > 0) {\n        var relativeImageHeight = height / parseFloat(_this.$inner.css('font-size'));\n\n        if (relativeImageHeight > relativeHeightCap) {\n          relativeImageHeight = relativeHeightCap;\n        }\n\n        _this.cards.forEach(function (card) {\n          card.setImageHeight(\"\".concat(relativeImageHeight, \"em\"));\n        });\n      }\n    };\n    /**\n     * Creates all cards and appends them to card wrapper.\n     *\n     * @param {object[]} cardIds Card ids.\n     * @returns {*|jQuery|HTMLElement} Card wrapper set\n     */\n\n\n    _this.initCards = function (cardIds) {\n      var initLoad = 2;\n      _this.cards = [];\n      _this.currentCardId = 0; // Randomize cards order\n\n      if (_this.params.behaviour.randomCards) {\n        cardIds = H5P.shuffleArray(cardIds);\n      }\n\n      var $cardwrapperSet = $('<div>', {\n        'class': 'h5p-dialogcards-cardwrap-set'\n      });\n\n      for (var i = 0; i < cardIds.length; i++) {\n        // Load cards progressively\n        if (i >= initLoad) {\n          break;\n        }\n\n        var card = _this.getCard(cardIds[i]);\n\n        card.setProgressText(i + 1, cardIds.length);\n\n        _this.cards.push(card);\n\n        var $cardWrapper = card.getDOM(); // Set current card\n\n        if (i === _this.currentCardId) {\n          $cardWrapper.addClass('h5p-dialogcards-current');\n          _this.$current = $cardWrapper;\n        }\n\n        card.addTipToCard($cardWrapper.find('.h5p-dialogcards-card-content'), 'front', i);\n        $cardwrapperSet.append($cardWrapper);\n      }\n\n      return $cardwrapperSet;\n    };\n    /**\n     * Handle card turned.\n     *\n     * @param {boolean} turned - True, if card is turned.\n     */\n\n\n    _this.handleCardTurned = function (turned) {\n      // a11y notification\n      _this.$cardSideAnnouncer.html(turned ? _this.params.cardFrontLabel : _this.params.cardBackLabel); // retry button\n\n\n      if (_this.params.behaviour.enableRetry && _this.currentCardId + 1 === _this.cardIds.length) {\n        if (_this.$retry) {\n          _this.$retry.removeClass('h5p-dialogcards-disabled');\n\n          _this.truncateRetryButton();\n        }\n      }\n    };\n    /**\n     * Update navigation text and show or hide buttons.\n     */\n\n\n    _this.updateNavigation = function () {\n      if (_this.params.mode === 'normal') {\n        // Final card\n        if (_this.getCurrentSelectionIndex() < _this.cardIds.length - 1) {\n          _this.$next.removeClass('h5p-dialogcards-disabled');\n\n          _this.$retry.addClass('h5p-dialogcards-disabled');\n        } else {\n          _this.$next.addClass('h5p-dialogcards-disabled');\n        } // First card\n\n\n        if (_this.currentCardId > 0 && !_this.params.behaviour.disableBackwardsNavigation) {\n          _this.$prev.removeClass('h5p-dialogcards-disabled');\n        } else {\n          _this.$prev.addClass('h5p-dialogcards-disabled');\n        }\n\n        _this.$progress.text(_this.params.progressText.replace('@card', _this.getCurrentSelectionIndex() + 1).replace('@total', _this.cardIds.length)); // Looks strange, but the Ids get mixed up elsewhere\n\n\n        _this.cards[_this.findCardPosition(_this.cards[_this.currentCardId].id)].resizeOverflowingText();\n      } else {\n        _this.$round.text(_this.params.round.replace('@round', _this.round));\n\n        var selectionIndex = _this.getCurrentSelectionIndex();\n\n        _this.$progress.text(_this.params.cardsLeft.replace('@number', _this.cardIds.length - selectionIndex));\n      }\n\n      _this.trigger('resize');\n    };\n    /**\n     * Show summary screen.\n     * @param {boolean} [previousState = false] If true, piles will not be updated.\n     */\n\n\n    _this.showSummary = function () {\n      var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      // Update piles and retrieve the new pile sizes\n      var newPileSizes = previousState ? _this.cardManager.getPileSizes() : _this.cardManager.updatePiles(_this.results);\n\n      var right = _this.results.filter(function (result) {\n        return result.result === true;\n      }).length;\n\n      var wrong = _this.results.length - right;\n      var notShown = _this.cardPoolSize - right - wrong;\n      var completed = newPileSizes.slice(-1)[0];\n      var done = completed === _this.cardPoolSize;\n      var summary = {\n        round: _this.round,\n        results: [{\n          field: 'h5p-dialogcards-round-cards-right',\n          score: {\n            value: right,\n            max: wrong + right\n          }\n        }, {\n          field: 'h5p-dialogcards-round-cards-wrong',\n          score: {\n            value: wrong,\n            max: wrong + right\n          }\n        }, {\n          field: 'h5p-dialogcards-round-cards-not-shown',\n          score: {\n            value: notShown\n          }\n        }, {\n          field: 'h5p-dialogcards-overall-cards-completed',\n          score: {\n            value: completed,\n            max: _this.cardPoolSize\n          }\n        }, {\n          field: 'h5p-dialogcards-overall-completed-rounds',\n          score: {\n            value: _this.round\n          }\n        }]\n      };\n\n      if (done) {\n        summary.done = true;\n        summary.message = _this.params.summaryAllDone.replace('@cards', _this.cardPoolSize).replace('@max', _this.params.behaviour.maxProficiency - 1);\n      }\n\n      _this.summaryScreen.update(summary);\n\n      _this.summaryScreen.show();\n\n      _this.hideCards();\n\n      _this.trigger('resize');\n    };\n    /**\n     * Show main content.\n     */\n\n\n    _this.showCards = function () {\n      _this.$cardwrapperSet.find('.h5p-dialogcards-cardwrap').removeClass('h5p-dialogcards-gone');\n\n      _this.$footer.removeClass('h5p-dialogcards-gone');\n\n      _this.cardsShown = true;\n    };\n    /**\n     * Hide main content.\n     */\n\n\n    _this.hideCards = function () {\n      _this.$cardwrapperSet.find('.h5p-dialogcards-cardwrap').addClass('h5p-dialogcards-gone');\n\n      _this.$footer.addClass('h5p-dialogcards-gone');\n\n      _this.cardsShown = false;\n    };\n    /**\n     * Show next card.\n     *\n     * @param {object} [result] Optional result of repetition mode.\n     */\n\n\n    _this.nextCard = function (result) {\n      if (typeof result !== 'undefined') {\n        _this.results.push(result);\n      }\n\n      _this.cards[_this.currentCardId].stopAudio(); // On final card\n\n\n      if (_this.cardIds.length - _this.getCurrentSelectionIndex() === 1) {\n        if (_this.params.mode === 'repetition') {\n          _this.$progress.text(_this.params.cardsLeft.replace('@number', 0));\n\n          _this.cards[_this.currentCardId].showSummaryButton(_this.showSummary);\n        }\n\n        return;\n      }\n\n      _this.gotoCard(_this.getCurrentSelectionIndex() + 1);\n    };\n    /**\n     * Get card from card manager.\n     * @param {number} id Card's Id.\n     * @return {object} Card.\n     */\n\n\n    _this.getCard = function (id) {\n      var card = _this.cardManager.getCard(id);\n\n      card.createButtonListeners();\n      return card;\n    };\n    /**\n     * Find the position of a loaded card.\n     * @param {number} cardId CardId to look for.\n     * @return {number} Position or undefined.\n     */\n\n\n    _this.findCardPosition = function (cardId) {\n      var position;\n\n      _this.cards.forEach(function (card, index) {\n        if (!position && card.id === cardId) {\n          position = index;\n        }\n      });\n\n      return position;\n    };\n    /**\n     * Insert a card into the DOM.\n     * @param {Card} card Card to insert.\n     * @param {number} [index] Position to insert card at.\n     */\n\n\n    _this.insertCardToDOM = function (card, index) {\n      var $node = card.getDOM(); // Put at appropriate position.\n\n      if (index === undefined) {\n        $node.appendTo(_this.$cardwrapperSet);\n      } else if (index === 0) {\n        _this.$cardwrapperSet.prepend($node);\n      } else {\n        _this.$cardwrapperSet.children().eq(index).after($node);\n      } // Add hints\n\n\n      card.addTipToCard($node.find('.h5p-dialogcards-card-content'), 'front', index);\n    };\n    /**\n     * Go to a specific card in the selection. Cards may need to be loaded.\n     * @param {number} targetPosition Target card position.\n     */\n\n\n    _this.gotoCard = function (targetPosition) {\n      if (targetPosition < 0 || targetPosition >= _this.cardIds.length) {\n        return;\n      } // Stop action on current card\n\n\n      var currentCard = _this.cards[_this.currentCardId];\n      currentCard.stopAudio();\n      currentCard.getDOM().removeClass('h5p-dialogcards-current'); // Get card positions to check for being loaded\n\n      var checkLoaded = [];\n\n      if (targetPosition > 0) {\n        checkLoaded.push(targetPosition - 1);\n      }\n\n      checkLoaded.push(targetPosition);\n\n      if (targetPosition + 1 < _this.cardIds.length) {\n        checkLoaded.push(targetPosition + 1);\n      } // Load and insert target card, predecessor and successor if required.\n\n\n      checkLoaded.forEach(function (position) {\n        var loadedPosition = _this.findCardPosition(_this.cardIds[position]);\n\n        if (loadedPosition === undefined) {\n          // Card has not been loaded. Load now.\n          var card = _this.getCard(_this.cardIds[position]);\n\n          card.setProgressText(position + 1, _this.cardIds.length);\n          /*\n           * Try to find successor card in loaded pile and insert before\n           * or put to the end of the loaded pile.\n           */\n\n          var successorId = Math.min(position + 1, _this.cardIds.length - 1);\n\n          var successor = _this.findCardPosition(_this.cardIds[successorId]);\n\n          var insertPosition = successor || _this.cards.length;\n\n          _this.cards.splice(insertPosition, 0, card);\n\n          _this.insertCardToDOM(card, insertPosition);\n        }\n      });\n\n      _this.resize(); // Retrieve position of id now in *loaded cards*\n\n\n      targetPosition = _this.findCardPosition(_this.cardIds[targetPosition]); // Set classes for card order/display\n\n      _this.cards.forEach(function (card, index) {\n        if (index < targetPosition) {\n          card.getDOM().addClass('h5p-dialogcards-previous');\n        } else {\n          card.getDOM().removeClass('h5p-dialogcards-previous');\n\n          if (index === targetPosition) {\n            card.getDOM().addClass('h5p-dialogcards-current');\n          }\n        }\n      });\n\n      _this.currentCardId = targetPosition;\n\n      _this.updateNavigation();\n\n      _this.cards[_this.currentCardId].setCardFocus();\n    };\n    /**\n     * Show previous card.\n     */\n\n\n    _this.prevCard = function () {\n      _this.gotoCard(_this.getCurrentSelectionIndex() - 1);\n    };\n    /**\n     * Show all audio buttons\n     */\n\n\n    _this.showAllAudio = function () {\n      _this.$cardwrapperSet.find('.h5p-audio-inner').removeClass('hide');\n    };\n\n    _this.restartRepetition = function () {\n      _this.cardManager.reset();\n\n      _this.round = 0;\n\n      _this.nextRound();\n    };\n\n    _this.nextRound = function () {\n      _this.round++;\n\n      _this.summaryScreen.hide();\n\n      _this.showCards();\n\n      _this.reset();\n\n      _this.createDOM();\n\n      _this.updateNavigation();\n\n      _this.cards[_this.currentCardId].setCardFocus(true);\n\n      _this.trigger('resize');\n    };\n    /**\n     * Reset the task so that the user can do it again.\n     */\n\n\n    _this.reset = function () {\n      _this.results = [];\n\n      _this.cards[_this.currentCardId].stopAudio(_this.$current.index()); // Turn all cards to front\n\n\n      _this.cards.forEach(function (card) {\n        card.reset();\n      }); // Show first card\n\n\n      _this.currentCardId = 0;\n\n      if (_this.params.mode === 'normal') {\n        _this.cards[_this.currentCardId].getDOM().addClass('h5p-dialogcards-current');\n      }\n\n      _this.updateNavigation();\n\n      if (_this.$retry) {\n        _this.$retry.addClass('h5p-dialogcards-disabled');\n      }\n\n      _this.showAllAudio();\n\n      _this.cards[_this.currentCardId].resizeOverflowingText();\n\n      _this.cards[_this.currentCardId].setCardFocus();\n    };\n    /**\n     * Update the dimensions of the task when resizing the task.\n     */\n\n\n    _this.resize = function () {\n      var _displayLimits4;\n\n      _this.handleOrientationChange();\n\n      var displayLimits = null;\n      var titleHeight = _this.$inner.find('.h5p-dialogcards-title').outerHeight() || 0;\n      var descriptionHeight = _this.$inner.find('.h5p-dialogcards-description').outerHeight(true) || 0;\n      var footerHeight = _this.$footer.outerHeight() || 0;\n      var nonCardHeight = titleHeight + descriptionHeight + footerHeight; // Change landscape layout on mobile\n\n      if (typeof window.orientation === 'number' && _this.$cardwrapperSet.find('.h5p-dialogcards-summary-screen').hasClass('h5p-dialogcards-gone') && _this.params.behaviour.scaleTextNotCard) {\n        _this.$inner.toggleClass('h5p-landscape', window.orientation === 90);\n\n        if (window.orientation === 90) {\n          var _displayLimits, _displayLimits2, _displayLimits3;\n\n          displayLimits = _this.isRoot() ? _this.computeDisplayLimitsKLL() : null;\n          var screenHeight = _this.isIOS() && window.orientation === 90 ? screen.width : screen.height;\n\n          if (((_displayLimits = displayLimits) === null || _displayLimits === void 0 ? void 0 : _displayLimits.height) === 1) {\n            displayLimits.height = screenHeight;\n          } // Just a heuristic\n\n\n          if (((_displayLimits2 = displayLimits) === null || _displayLimits2 === void 0 ? void 0 : _displayLimits2.height) < 360) {\n            _this.$inner.css('font-size', '0.5em');\n          }\n\n          if ((_displayLimits3 = displayLimits) !== null && _displayLimits3 !== void 0 && _displayLimits3.height) {\n            _this.$cardwrapperSet.css('max-height', \"\".concat(displayLimits.height - nonCardHeight, \"px\"));\n          } else {\n            _this.$cardwrapperSet.css('max-height', '');\n          }\n        }\n      } else {\n        _this.$cardwrapperSet.css('max-height', '');\n      }\n\n      var maxHeight = 0;\n\n      if (!displayLimits || window.orientation !== 90 || !_this.params.behaviour.scaleTextNotCard) {\n        _this.updateImageSize();\n      } else {\n        _this.cards.forEach(function (card) {\n          card.setImageHeight('');\n        });\n      }\n\n      if (!_this.params.behaviour.scaleTextNotCard && _this.cardsShown !== false) {\n        _this.determineCardSizes();\n      }\n\n      if (!_this.params.behaviour.scaleTextNotCard || window.orientation !== 90 || !((_displayLimits4 = displayLimits) !== null && _displayLimits4 !== void 0 && _displayLimits4.height) || !_this.$cardwrapperSet.find('.h5p-dialogcards-summary-screen').hasClass('h5p-dialogcards-gone')) {\n        // Reset card-wrapper-set height\n        _this.$cardwrapperSet.css('height', 'auto'); // Find max required height for all cards\n\n\n        _this.$cardwrapperSet.children(':not(.h5p-dialogcards-gone)').each(function () {\n          var wrapperHeight = $(this).css('height', 'initial').outerHeight();\n          $(this).css('height', 'inherit');\n          maxHeight = Math.max(wrapperHeight, maxHeight); // Check height\n\n          if (!$(this).next('.h5p-dialogcards-cardwrap').length) {\n            var initialHeight = $(this).find('.h5p-dialogcards-cardholder').css('height', 'initial').outerHeight();\n            maxHeight = Math.max(initialHeight, maxHeight);\n            $(this).find('.h5p-dialogcards-cardholder').css('height', 'inherit');\n          }\n        });\n\n        var relativeMaxHeight = maxHeight / parseFloat(_this.$cardwrapperSet.css('font-size'));\n\n        _this.$cardwrapperSet.css('height', relativeMaxHeight + 'em');\n      } else {\n        var _displayLimits5;\n\n        if (((_displayLimits5 = displayLimits) === null || _displayLimits5 === void 0 ? void 0 : _displayLimits5.height) - nonCardHeight > 1) {\n          var _displayLimits6;\n\n          _this.$cardwrapperSet.css('height', \"\".concat(((_displayLimits6 = displayLimits) === null || _displayLimits6 === void 0 ? void 0 : _displayLimits6.height) - nonCardHeight, \"px\"));\n        }\n      }\n\n      _this.scaleToFitHeight();\n\n      _this.truncateRetryButton();\n\n      _this.cards[_this.currentCardId].resizeOverflowingText();\n    };\n    /**\n     * Resizes each card to fit its text\n     */\n\n\n    _this.determineCardSizes = function () {\n      var self = _assertThisInitialized(_this);\n\n      if (_this.cardSizeDetermined === undefined) {\n        // Keep track of which cards we've already determined size for\n        _this.cardSizeDetermined = [];\n      } // Go through each card\n\n\n      _this.$cardwrapperSet.children(':visible').each(function (i) {\n        var cardId = self.cards[i].id;\n\n        if (self.cardSizeDetermined.indexOf(cardId) !== -1) {\n          return; // Already determined, no need to determine again.\n        }\n\n        self.cardSizeDetermined.push(cardId); // Here \"this\" references the jQuery object\n\n        var $content = $('.h5p-dialogcards-card-content', this);\n        var $text = $('.h5p-dialogcards-card-text-inner-content', $content); // Grab size with text\n\n        var textHeight = $text[0].getBoundingClientRect().height; // Change to answer\n\n        var currentCard = self.cards[i];\n        currentCard.changeText(currentCard.getAnswer()); // Grab size with answer\n\n        var answerHeight = $text[0].getBoundingClientRect().height; // Use highest\n\n        var useHeight = textHeight > answerHeight ? textHeight : answerHeight; // Min. limit\n\n        var minHeight = parseFloat($text.parent().parent().css('minHeight'));\n\n        if (useHeight < minHeight) {\n          useHeight = minHeight;\n        } // None of the cards has text, shrink text area, leave space for audio\n\n\n        if (self.hasNoTexts) {\n          var $cardText = $text.find('.h5p-dialogcards-card-text');\n          useHeight = self.hasNoAudios ? 0 : useHeight - parseFloat($cardText.css('height'));\n          $cardText.css('height', 0);\n        } // Convert to em\n\n\n        var fontSize = parseFloat($content.css('fontSize'));\n        useHeight /= fontSize; // Set height\n\n        $text.parent().css('height', useHeight + 'em'); // Change back to text\n\n        currentCard.changeText(currentCard.getText());\n      });\n    };\n    /**\n     * Scales the card contents.\n     */\n\n\n    _this.scaleToFitHeight = function () {\n      if (!_this.$cardwrapperSet || !_this.$cardwrapperSet.is(':visible') || !_this.params.behaviour.scaleTextNotCard) {\n        return;\n      } // Resize font size to fit inside CP\n\n\n      if (_this.$inner.parents('.h5p-course-presentation').length) {\n        var $parentContainer = _this.$inner.parent();\n\n        if (_this.$inner.parents('.h5p-popup-container').length) {\n          $parentContainer = _this.$inner.parents('.h5p-popup-container');\n        }\n\n        var containerHeight = $parentContainer.get(0).getBoundingClientRect().height;\n\n        var getContentHeight = function getContentHeight() {\n          var contentHeight = 0;\n\n          _this.$inner.children().each(function () {\n            // Here \"this\" references the jQuery object\n            var $child = $(this);\n            contentHeight += this.getBoundingClientRect().height + parseFloat($child.css('margin-top')) + parseFloat($child.css('margin-bottom'));\n          });\n\n          return contentHeight;\n        };\n\n        var contentHeight = getContentHeight();\n        var parentFontSize = parseFloat(_this.$inner.parent().css('font-size'));\n        var newFontSize = parseFloat(_this.$inner.css('font-size')); // Decrease font size\n\n        if (containerHeight < contentHeight) {\n          while (containerHeight < contentHeight) {\n            newFontSize -= Dialogcards.SCALEINTERVAL; // Cap at min font size\n\n            if (newFontSize < Dialogcards.MINSCALE) {\n              break;\n            } // Set relative font size to scale with full screen.\n\n\n            _this.$inner.css('font-size', newFontSize / parentFontSize + 'em');\n\n            contentHeight = getContentHeight();\n          }\n        } else {\n          // Increase font size\n          var increaseFontSize = true;\n\n          while (increaseFontSize) {\n            newFontSize += Dialogcards.SCALEINTERVAL; // Cap max font size\n\n            if (newFontSize > Dialogcards.MAXSCALE) {\n              increaseFontSize = false;\n              break;\n            } // Set relative font size to scale with full screen.\n\n\n            var relativeFontSize = newFontSize / parentFontSize;\n\n            _this.$inner.css('font-size', relativeFontSize + 'em');\n\n            contentHeight = getContentHeight();\n\n            if (containerHeight <= contentHeight) {\n              increaseFontSize = false;\n              relativeFontSize = (newFontSize - Dialogcards.SCALEINTERVAL) / parentFontSize;\n\n              _this.$inner.css('font-size', relativeFontSize + 'em');\n            }\n          }\n        }\n      } else {\n        // Resize mobile view\n        _this.cards[_this.currentCardId].resizeOverflowingText();\n      }\n    };\n    /**\n     * Truncate retry button if width is small.\n     */\n\n\n    _this.truncateRetryButton = function () {\n      if (!_this.$retry) {\n        return;\n      } // Reset button to full size\n\n\n      _this.$retry.removeClass('truncated');\n\n      _this.$retry.html(_this.params.retry); // Measure button\n\n\n      var maxWidthPercentages = 0.3;\n      var retryWidth = _this.$retry.get(0).getBoundingClientRect().width + parseFloat(_this.$retry.css('margin-left')) + parseFloat(_this.$retry.css('margin-right'));\n\n      var retryWidthPercentage = retryWidth / _this.$retry.parent().get(0).getBoundingClientRect().width; // Truncate button\n\n\n      if (retryWidthPercentage > maxWidthPercentages) {\n        _this.$retry.addClass('truncated');\n\n        _this.$retry.html('');\n      }\n    };\n    /**\n     * Retrieve index of card in selection, not loaded cards.\n     */\n\n\n    _this.getCurrentSelectionIndex = function () {\n      return _this.cardIds.indexOf(_this.cards[_this.currentCardId].id);\n    };\n    /**\n     * Get the content type title.\n     *\n     * @return {string} title.\n     */\n\n\n    _this.getTitle = function () {\n      return H5P.createTitle(_this.contentData && _this.contentData.metadata && _this.contentData.metadata.title ? _this.contentData.metadata.title : 'Dialog Cards');\n    };\n    /**\n     * Save the current state to be restored later.\n     */\n\n\n    _this.getCurrentState = function () {\n      return {\n        cardPiles: _this.cardManager.getPiles(),\n        cardIds: _this.cardIds,\n        round: _this.round,\n        currentCardId: _this.getCurrentSelectionIndex(),\n        results: _this.results\n      };\n    };\n\n    return _this;\n  }\n  /**\n   * Compute display limits.\n   * @return {object|null} Height and width in px or null if cannot be determined.\n   */\n\n\n  var _proto = Dialogcards.prototype;\n\n  _proto.computeDisplayLimits = function computeDisplayLimits() {\n    var topWindow = this.getTopWindow(); // iOS doesn't change screen dimensions on rotation\n\n    var screenSize = this.isIOS() && window.orientation === 90 ? {\n      height: screen.width,\n      width: screen.height\n    } : {\n      height: screen.height,\n      width: screen.width\n    };\n    topWindow = topWindow || {\n      innerHeight: screenSize.height,\n      innerWidth: screenSize.width\n    }; // Smallest value of viewport and container wins\n\n    return {\n      height: Math.min(topWindow.innerHeight, screenSize.height),\n      width: Math.min(topWindow.innerWidth, this.$inner.get(0).offsetWidth)\n    };\n  }\n  /**\n   * Compute display limits for KidsLoop Live.\n   * @return {object|null} Height and width in px or null if cannot be determined.\n   */\n  ;\n\n  _proto.computeDisplayLimitsKLL = function computeDisplayLimitsKLL() {\n    var displayLimits = this.computeDisplayLimits(); // This only works because KLL enforces height on H5P's iframe\n\n    displayLimits.height = Math.min(displayLimits.height, document.body.offsetHeight);\n    return displayLimits;\n  }\n  /**\n   * Detect whether user is running iOS.\n   * @return {boolean} True, if user is running iOS.\n   */\n  ;\n\n  _proto.isIOS = function isIOS() {\n    return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || navigator.userAgent.includes('Mac') && 'ontouchend' in document;\n  }\n  /**\n  * Get top DOM Window object.\n  * @param {Window} [startWindow=window] Window to start looking from.\n  * @return {Window|null} Top window.\n  */\n  ;\n\n  _proto.getTopWindow = function getTopWindow(startWindow) {\n    var sameOrigin;\n    startWindow = startWindow || window; // H5P iframe may be on different domain than iframe content\n\n    try {\n      sameOrigin = startWindow.parent.location.host === window.location.host;\n    } catch (error) {\n      sameOrigin = null;\n    }\n\n    if (!sameOrigin) {\n      return null;\n    }\n\n    if (startWindow.parent === startWindow || !startWindow.parent) {\n      return startWindow;\n    }\n\n    return this.getTopWindow(startWindow.parent);\n  }\n  /**\n   * Handle orientation change.\n   */\n  ;\n\n  _proto.handleOrientationChange = function handleOrientationChange() {\n    var _this2 = this;\n\n    if (!this.params.behaviour.scaleTextNotCard) {\n      return;\n    }\n\n    this.cards.forEach(function (card) {\n      if (_this2.params.mode === 'repetition') {\n        card.$buttonTurn.text(window.orientation === 90 ? '' : _this2.params.answer);\n        card.$buttonCorrect.text(window.orientation === 90 ? '' : _this2.params.correctAnswer);\n        card.$buttonIncorrect.text(window.orientation === 90 ? '' : _this2.params.incorrectAnswer);\n      }\n\n      if (window.orientation !== 90) {\n        _this2.$cardwrapperSet.css('max-height', '');\n      }\n    });\n  };\n\n  return Dialogcards;\n}(H5P.EventDispatcher);\n\nDialogcards.idCounter = 0; // Constants\n\nDialogcards.SCALEINTERVAL = 0.2;\nDialogcards.MAXSCALE = 16;\nDialogcards.MINSCALE = 4;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dialogcards);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/h5p-dialogcards.js\n");

/***/ }),

/***/ "./src/styles/h5p-dialogcards.css":
/*!****************************************!*\
  !*** ./src/styles/h5p-dialogcards.css ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2g1cC1kaWFsb2djYXJkcy5jc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaDVwLWRpYWxvZ2NhcmRzLy4vc3JjL3N0eWxlcy9oNXAtZGlhbG9nY2FyZHMuY3NzP2IzZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/h5p-dialogcards.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/entries/h5p-dialogcards.js");
/******/ 	
/******/ })()
;